{"version":3,"file":"index.js","sources":["../src/utils/BuilderStoreContext.tsx","../src/features/customization/index.tsx","../src/features/components/EditableTable/CustomCells.tsx","../src/features/components/EditableTable/EditableTable.tsx","../src/features/components/EditableTable/utils.tsx","../src/utils/useUniqueId.tsx","../src/utils/TooltipPlacementContext.tsx","../src/features/annotation-editors/Hinted.tsx","../src/features/localization/hooks.ts","../src/features/components/Containers.tsx","../src/features/components/Icons.tsx","../src/features/components/LabeledProperty.tsx","../src/features/annotation-editors/ArrayInput.tsx","../src/features/annotation-editors/JsonInput.tsx","../src/features/annotation-editors/ArrayOfObjectInput.tsx","../src/features/annotation-editors/ArrayOfStringInput.tsx","../src/features/annotation-editors/AttributesInput/AttributesInput.tsx","../src/features/annotation-editors/BooleanInput.tsx","../src/features/annotation-editors/ColorInput.tsx","../src/features/annotation-editors/DateInput.tsx","../src/features/components/Buttons.tsx","../src/utils/useComputed.tsx","../src/features/annotation-editors/EventEditor/components/ActionList/ActionItem/contexts/ActionDataContext.ts","../src/features/ui/FixedSelectPicker.tsx","../src/features/annotation-editors/EventEditor/components/ActionList/ActionItem/components/ArgumentList/ArgumentItem/components/InputBoolean.tsx","../src/features/annotation-editors/EventEditor/components/ActionList/ActionItem/components/ArgumentList/ArgumentItem/components/InputNumber.tsx","../src/features/annotation-editors/EventEditor/components/ActionList/ActionItem/components/ArgumentList/ArgumentItem/components/InputString.tsx","../src/features/annotation-editors/EventEditor/components/ActionList/ActionItem/components/ArgumentList/ArgumentItem/ArgumentItem.tsx","../src/features/annotation-editors/EventEditor/components/ActionList/ActionItem/components/ArgumentList/ArgumentList.tsx","../src/features/annotation-editors/EventEditor/components/ActionList/ActionItem/ActionItem.tsx","../src/features/annotation-editors/EventEditor/components/ActionList/ActionList.tsx","../src/features/annotation-editors/EventEditor/components/AddActionButton/components/CodeActionsList.tsx","../src/features/annotation-editors/EventEditor/components/AddActionButton/components/CommonActionsList.tsx","../src/features/annotation-editors/EventEditor/components/AddActionButton/components/CustomActionList.tsx","../src/features/annotation-editors/EventEditor/components/AddActionButton/AddActionButton.tsx","../src/features/annotation-editors/EventEditor/EventEditor.tsx","../src/features/annotation-editors/KeyInput.tsx","../src/features/annotation-editors/MultiPicker.tsx","../src/features/annotation-editors/NumberInput.tsx","../src/features/annotation-editors/ObjectInput.tsx","../src/features/annotation-editors/Picker.tsx","../src/features/components/RadioButtons.tsx","../src/features/annotation-editors/RadioInput.tsx","../src/features/annotation-editors/RenderWhenEditor.tsx","../src/features/annotation-editors/SizeInput.tsx","../src/features/annotation-editors/StringInput.tsx","../src/features/annotation-editors/TimeInput.tsx","../src/features/localization/consts.ts","../src/features/components/CodeEditor/monacoJavascriptDefaults.ts","../src/features/components/CodeEditor/MonacoCodeEditor.ts","../src/features/components/CodeEditor/ConstrainedCodeEditor.tsx","../src/features/components/CodeEditor/UnconstrainedCodeEditor.tsx","../src/features/components/CodeEditor/CodeEditor.tsx","../src/features/annotation-editors/CSSEditor.tsx","../src/features/components/Labels.tsx","../src/features/validation/utils/annotationResolver.tsx","../src/features/components/PropertyEditorWrapper/useDataValidator.ts","../src/features/components/PropertyEditorWrapper/Erroneous.tsx","../src/features/components/PropertyEditorWrapper/PropertyEditorWrapper.tsx","../src/features/ui/RightPanel/PropertiesEditor/Section.ts","../src/features/ui/RightPanel/PropertiesEditor/components/DevicePicker.tsx","../src/features/ui/RightPanel/PropertiesEditor/components/Properties.tsx","../src/features/annotation-editors/TooltipPropertiesEditor.tsx","../src/features/annotation-editors/ValidateEditor/components/AddRuleButton.tsx","../src/features/validation/utils/parameterConverter.ts","../src/features/annotation-editors/ValidateEditor/components/ValidationRuleEditor.tsx","../src/features/annotation-editors/ValidateEditor/ComponentValidationSettingsEditor.tsx","../src/features/annotation-editors/ValidateEditor/CustomValidatorEditor.tsx","../src/features/annotation-editors/index.tsx","../src/features/localization/BuilderI18n.ts","../src/features/localization/languageUtils.ts","../src/utils/getSystemTheme.ts","../src/utils/determineTheme.ts","../src/stores/AlwaysRejectFormStorage.ts","../src/stores/CachedFormStorage.ts","../src/stores/constants.ts","../src/stores/fileUpload.ts","../src/stores/undo.ts","../src/stores/BuilderStore.ts","../src/utils/formatters.ts","../src/utils/parseJson.ts","../src/features/ui/BottomPanel/TestingEditor.tsx","../src/features/calculation/GenericCodeEditor.tsx","../src/features/ui/BottomPanel/Header.tsx","../src/features/annotation-editors/EventEditor/components/CodeActionEditor/components/ParameterItem.tsx","../src/features/annotation-editors/EventEditor/components/CodeActionEditor/components/ParameterList.tsx","../src/features/annotation-editors/EventEditor/components/CodeActionEditor/CodeActionEditor.tsx","../src/features/calculation/CalculableCodeEditor.tsx","../src/features/localization/components/LocalizationPicker.tsx","../src/features/localization/LocalizationEditor.tsx","../src/features/ui/BottomPanel/SimpleValueEditor.tsx","../src/features/ui/BottomPanel/ComputedPropertyEditor.tsx","../src/features/ui/BottomPanel/CustomValidationCodeEditor.tsx","../src/features/ui/BottomPanel/JsonCodeEditor.tsx","../src/features/ui/BottomPanel/BottomPanel.tsx","../src/stores/LocalStorageSynchronizer.ts","../src/features/dnd/components/CustomDragLayer.tsx","../src/features/hotkeys/useHotKeys.tsx","../src/features/localization/components/MenuLanguageSwitch.tsx","../src/features/localization/components/LocalizationProvider.tsx","../src/features/ui/StylesProvider.tsx","../src/features/ui/BuilderProviders.tsx","../src/features/dnd/consts.ts","../src/features/dnd/components/Editable/hooks/useDragWithPreview.ts","../src/features/dnd/components/Editable/components/DragPreview.tsx","../src/features/dnd/components/Editable/components/DropView.tsx","../src/features/dnd/components/Editable/components/DropZone.tsx","../src/features/dnd/components/Editable/components/Draggable.tsx","../src/utils/stopEvent.ts","../src/features/dnd/components/Editable/hooks/useSelection.tsx","../src/features/dnd/components/Editable/components/AddButton.tsx","../src/features/dnd/components/Editable/components/Toolbar.tsx","../src/features/dnd/components/Editable/ErrorBoundary.tsx","../src/features/dnd/components/Editable/Editable.tsx","../src/features/dnd/components/Editable/components/TreeNode.tsx","../src/features/dnd/components/DraggableTreeNode.tsx","../src/icons/Breadcrumb.svg","../src/icons/Button.svg","../src/icons/Card.svg","../src/icons/Checkbox.svg","../src/icons/CollectionEditor.svg","../src/icons/Container.svg","../src/icons/Content.svg","../src/icons/CustomBlock.svg","../src/icons/CustomControl.svg","../src/icons/DatePicker.svg","../src/icons/Default.svg","../src/icons/Dropdown.svg","../src/icons/Dropzone.svg","../src/icons/ErrorMessage.svg","../src/icons/Footer.svg","../src/icons/Grid.svg","../src/icons/GridLayout.svg","../src/icons/GridView.svg","../src/icons/Header.svg","../src/icons/Image.svg","../src/icons/Input.svg","../src/icons/Label.svg","../src/icons/Link.svg","../src/icons/Menu.svg","../src/icons/Message.svg","../src/icons/NumberFormat.svg","../src/icons/PatternFormat.svg","../src/icons/ProgressCircle.svg","../src/icons/ProgressLine.svg","../src/icons/RadioGroup.svg","../src/icons/Repeater.svg","../src/icons/RichTextEditor.svg","../src/icons/Search.svg","../src/icons/Sidebar.svg","../src/icons/Signature.svg","../src/icons/StaticContent.svg","../src/icons/Tab.svg","../src/icons/TextArea.svg","../src/icons/TimePicker.svg","../src/icons/Toggle.svg","../src/icons/Tooltip.svg","../src/icons/TreePicker.svg","../src/icons/Uploader.svg","../src/icons/index.ts","../src/features/dnd/components/AddedComponent.tsx","../src/features/toast/toast.tsx","../src/utils/useCreateForm.tsx","../src/features/ui/ErrorFormWrapper.tsx","../src/features/ui/Header/components/DesignerLocalizationPicker.tsx","../src/features/ui/Header/components/PropertyErrors.tsx","../src/features/ui/Header/components/ErrorsPanel.tsx","../src/features/ui/dialogs/useSaveFormDialog.ts","../src/features/ui/Header/components/formUtils.ts","../src/features/ui/Header/components/useSaveForm.ts","../src/features/ui/Header/components/Menu.tsx","../src/features/ui/Header/components/ToggleModeButton.tsx","../src/features/ui/Header/components/ToggleTheme.tsx","../src/features/ui/JsonView.tsx","../src/features/ui/Header/components/JsonViewButton.tsx","../src/features/ui/Header/components/OrientationIcon.tsx","../src/features/ui/Header/components/ViewModes.tsx","../src/features/ui/Header/Header.tsx","../src/features/ui/Panel.tsx","../src/features/ui/CentralPanel.tsx","../src/features/ui/ComponentBar/components/SearchForm.tsx","../src/features/ui/ComponentBar/ComponentBar.tsx","../src/features/ui/ComponentBar/ComponentsModal.tsx","../src/features/ui/LeftPanel/components/FormViewerState.tsx","../src/features/components/LabeledIcon.tsx","../src/features/components/NavIconItem.tsx","../src/features/ui/LeftPanel/components/FormList.tsx","../src/features/ui/LeftPanel/components/ActionList.tsx","../src/features/ui/LeftPanel/components/ErrorComponentPicker.tsx","../src/features/ui/LeftPanel/components/ErrorSettings.tsx","../src/features/ui/LeftPanel/components/FormLanguageSettings.tsx","../src/features/annotation-editors/TooltipTypePicker.tsx","../src/features/ui/LeftPanel/components/TooltipSettings.tsx","../src/features/ui/LeftPanel/components/FormSettings.tsx","../src/features/ui/LeftPanel/components/Tree.tsx","../src/features/ui/LeftPanel/components/LeftPanelNav.tsx","../src/features/ui/LeftPanel/LeftPanel.tsx","../src/features/ui/PromptDialog.tsx","../src/features/ui/RightPanel/PropertiesEditor/components/NavTab.tsx","../src/features/ui/RightPanel/PropertiesEditor/PropertiesEditor.tsx","../src/features/ui/RightPanel/RightPanel.tsx","../src/FormBuilder.tsx"],"sourcesContent":["import {createNonNullableContext} from '@react-form-builder/core'\nimport type {BuilderStore} from '../stores/BuilderStore'\n\nconst [\n  /**\n   * **Internal use only.**\n   */\n  useBuilderStore,\n  /**\n   * **Internal use only.**\n   */\n  BuilderStoreProvider] = createNonNullableContext<BuilderStore>('BuildStoreContext')\n\nexport {useBuilderStore, BuilderStoreProvider}\n","import {css, cx} from '@emotion/css'\nimport type {CSSInterpolation} from '@emotion/serialize'\nimport {observer} from 'mobx-react'\nimport type {ComponentType, CSSProperties, ReactElement} from 'react'\nimport {useBuilderStore} from '../../utils/BuilderStoreContext'\nimport type {CustomizableKey} from './types'\n\n/**\n * Customization options for the FormBuilder component.\n */\nexport type Options = {\n  /**\n   * True if you want to hide the component.\n   */\n  hidden?: boolean\n  /**\n   * The component className.\n   */\n  className?: string\n  /**\n   * The component style. Supported formats - CSSProperties object, standard CSS as string, nested selectors.\n   */\n  style?: CSSProperties | string\n  /**\n   * The component custom renderer.\n   * @param defaultElement the default rendering result.\n   * @param component the React component.\n   * @param props the props that were sent to the component.\n   * @returns the customized ReactElement.\n   */\n  customRenderer?: (defaultElement: ReactElement, component: ComponentType<any>, props: any) => ReactElement\n}\n\n/**\n * The map of customizations for the FormBuilder components.\n */\nexport type CustomizationMap = Partial<Record<CustomizableKey, Options>>\n\n/**\n * Creates the customizable React component. **Internal use only.**\n * @param key the key of the customizable component. It is also set to the displayName and add to the className.\n * @param component the React component.\n * @template T the component property type.\n * @returns the customizable React component.\n */\nexport const customizable = <T = any>(key: CustomizableKey, component: ComponentType<T>) => {\n  component.displayName = key\n  const CustomizableComponent = component\n  return (props: any) => {\n    const builderStore = useBuilderStore()\n    const settings = builderStore.props.customization?.[key]\n\n    if (!settings) return <CustomizableComponent {...props}/>\n    if (settings.hidden) return null\n\n    const {style, customRenderer} = settings\n    const className = cx(props?.className, settings.className, css`${style as CSSInterpolation}`, key)\n    const result = <CustomizableComponent {...props} className={className}/>\n\n    return customRenderer ? customRenderer(result, component, props) : result\n  }\n}\n\n/**\n * Creates the customizable observer component. **Internal use only.**\n * @param key the key of the customizable component. It is also set to the displayName and add to the className.\n * @param component the React component.\n * @template T the component property type.\n * @returns the customizable observer component.\n */\nexport const customizableObserver = <T = any>(key: CustomizableKey, component: ComponentType<T>) => {\n  return customizable(key, observer(component))\n}\n","import styled from '@emotion/styled'\nimport type {LabeledValue} from '@react-form-builder/core'\nimport type {IconProps} from '@rsuite/icons/lib/Icon'\nimport type {ReactElement} from 'react'\nimport {useCallback} from 'react'\nimport {Checkbox, IconButton, Input as RsInput, InputNumber, InputPicker, Table} from 'rsuite'\nimport type {RowDataType} from 'rsuite-table/lib'\nimport type {InnerCellProps} from 'rsuite-table/lib/Cell.js'\n\nconst {Cell} = Table\n\n/**\n * The React component that displays the table cell with the input. **Internal use only.**\n * @param props the React component properties.\n * @param props.rowData the row data.\n * @param props.dataKey the key name in props.rowData.\n * @param props.rowIndex the row index.\n * @param props.props the other properties of the component.\n * @param props.onChange the onChange callback.\n * @param props.type the input type.\n * @returns the React element.\n */\nexport const InputCell = ({rowData, dataKey, rowIndex, onChange, type, ...props}: InputCellProps) => {\n  const value = rowData[dataKey] ?? ''\n\n  const handleChange = useCallback((newValue: any) => {\n    rowData[dataKey] = newValue\n    onChange?.(newValue, dataKey, rowIndex)\n  }, [dataKey, onChange, rowData, rowIndex])\n\n  const Input = type === 'number' ? InputNumber : RsInput\n\n  return (\n    <SCell {...props}>\n      <Input value={value} onChange={handleChange} size=\"sm\"/>\n    </SCell>\n  )\n}\n\n/**\n * The React component that displays the table cell with the checkbox. **Internal use only.**\n * @param props the React component properties.\n * @param props.rowData the row data.\n * @param props.dataKey the key name in props.rowData.\n * @param props.rowIndex the row index.\n * @param props.onChange the onChange event of the checkbox.\n * @param props.props the other properties of the component.\n * @returns the React element.\n */\nexport const CheckCell = ({rowData, dataKey, rowIndex, onChange, ...props}: InputCellProps) => {\n  const checked = rowData[dataKey] ?? false\n\n  const handleChange = useCallback((_: any, checked: boolean) => {\n    rowData[dataKey] = checked\n    onChange?.(checked, dataKey, rowIndex)\n  }, [dataKey, onChange, rowData, rowIndex])\n\n  return (\n    <SCell {...props}>\n      <SCheckbox inline checked={checked} onChange={handleChange}/>\n    </SCell>\n  )\n}\n\n/**\n * The React component that displays the table cell with the select input. **Internal use only.**\n * @param props the React component properties.\n * @param props.rowData the row data.\n * @param props.dataKey the key name in props.rowData.\n * @param props.rowIndex the row index.\n * @param props.options the select options.\n * @param props.onChange the onChange event of the checkbox.\n * @param props.props the other properties of the component.\n * @returns the React element.\n */\nexport const SelectCell = ({rowData, dataKey, rowIndex, options, onChange, ...props}: SelectCellProps) => {\n  const value = rowData[dataKey] ?? ''\n\n  const handleChange = useCallback((value: any) => {\n    rowData[dataKey] = value\n    onChange?.(value, dataKey, rowIndex)\n  }, [dataKey, onChange, rowData, rowIndex])\n\n  return (\n    <SCell {...props}>\n      <InputPicker value={value}\n                   data={options}\n                   onChange={handleChange}\n                   cleanable={false}\n                   creatable={true}\n                   block size=\"sm\"\n                   placement=\"auto\"\n      />\n    </SCell>\n  )\n}\n\n/**\n * The React component that displays the table cell with the icon button. **Internal use only.**\n * @param props the React component properties.\n * @param props.rowData the row data.\n * @param props.rowIndex the row index.\n * @param props.onAction the callback function called when the button is clicked.\n * @param props.icon the icon for the button.\n * @param props.props the other properties of the component.\n * @returns the React element.\n */\nexport const ActionCell = ({rowData, rowIndex, onAction, icon, ...props}: ActionCellProps) =>\n  (\n    <SCell {...props}>\n      <IconButton\n        appearance=\"subtle\" size=\"sm\"\n        onClick={() => onAction(rowIndex)}\n        icon={icon()}\n      />\n    </SCell>\n  )\n\nexport const SCell = styled(Cell<RowDataType, string | number>)`\n  padding: 0;\n\n  & .rs-table-cell-content {\n    padding: 9px 3px;\n  }\n`\n\nconst SCheckbox = styled(Checkbox)`\n  & .rs-checkbox-wrapper {\n    left: 4px;\n    top: 6px;\n  }\n`\n\n/**\n * The properties of InputCell component.\n */\nexport interface InputCellProps extends InnerCellProps<RowDataType, string | number> {\n  /**\n   * The callback function called when the data in a cell is changed.\n   * @param value the value.\n   * @param dataKey the cell data key.\n   * @param rowIndex the cell row index.\n   */\n  onChange?: (value?: any, dataKey?: string, rowIndex?: number) => void\n  /**\n   * The cell data key.\n   */\n  dataKey: string\n  /**\n   * Rows data.\n   */\n  rowData: RowDataType\n\n  /**\n   * The input type.\n   */\n  type: string\n}\n\n/**\n * The properties of SelectCell component.\n */\nexport interface SelectCellProps extends InputCellProps {\n  /**\n   * The select options.\n   */\n  options: LabeledValue[]\n}\n\n/**\n * The properties of ActionCell component.\n */\nexport interface ActionCellProps extends InnerCellProps<RowDataType, string | number> {\n  /**\n   * The callback function called when the cell is clicked.\n   * @param rowIndex the row index.\n   */\n  onAction: (rowIndex?: number) => void\n  /**\n   * The cell icon.\n   */\n  icon: () => ReactElement<IconProps>\n}\n","import {cx} from '@emotion/css'\nimport styled from '@emotion/styled'\nimport {Close, Plus} from '@rsuite/icons'\nimport type {FormEventHandler, JSX} from 'react'\nimport {cloneElement, useCallback, useEffect, useState} from 'react'\nimport type {TableProps} from 'rsuite'\nimport {Button, Form, Table} from 'rsuite'\nimport type {RowDataType} from 'rsuite-table/lib'\nimport {ActionCell} from './CustomCells'\n\nconst {ErrorMessage} = Form\n\nconst {Column, HeaderCell} = Table\n\n/**\n * The React component properties for the {@link EditableTable} component.\n */\nexport interface EditableTableProps extends TableProps<any, any> {\n  /**\n   * The table data.\n   */\n  data: RowDataType[];\n  /**\n   * Maximum number of rows to be displayed.\n   */\n  maxRows?: number\n  /**\n   * The callback function called when data in the table is changed.\n   */\n  onChange?: FormEventHandler<HTMLElement>\n  /**\n   * The columns of the table.\n   */\n  columns?: JSX.Element[]\n  /**\n   * The table label.\n   */\n  label?: string\n  /**\n   * The error message.\n   */\n  errorMessage?: string\n  /**\n   * Flag, if true, one new row will be automatically added when editing the last row of the table, false otherwise.\n   */\n  autoAdd?: boolean\n  /**\n   * Flag, if true then the table header will be hidden, false otherwise.\n   */\n  hideHeader?: boolean\n  /**\n   * The callback function called when data in the table is removed.\n   */\n  onRemove?: (index: number) => void\n  /**\n   * The callback function called when data in the table is added.\n   */\n  onAdd?: (index: number) => void\n}\n\n/**\n * The state of the {@link EditableTable} component.\n */\nexport interface EditableTableState {\n  /**\n   * Flag, if true, the table height will be calculated automatically, false otherwise.\n   */\n  autoHeight?: boolean\n  /**\n   * The maximum height of the table.\n   */\n  maxHeight?: number\n}\n\n/**\n * The React component that displays the table with editable cells. **Internal use only.**\n * @param props the React component properties.\n * @returns the React element.\n */\nexport const EditableTable = (props: EditableTableProps) => {\n  const [state, setState] = useState<EditableTableState>({})\n  const [shouldScroll, setShouldScroll] = useState(false)\n\n  const {\n    data = [],\n    onChange,\n    columns,\n    label,\n    errorMessage,\n    autoAdd,\n    hideHeader,\n    onAdd,\n    onRemove,\n    ...tableProps\n  } = props\n  const {autoHeight, maxHeight} = state\n\n  const headerHeight = hideHeader ? 0 : props.headerHeight ?? 40\n  const rowHeight = (props.rowHeight as number) ?? 46\n  const maxRows = props.maxRows ?? 5\n  const shorterMax = data.length <= maxRows\n  const emptyHeight = props.renderEmpty ? headerHeight + rowHeight : 0\n  const totalMaxHeight = headerHeight + rowHeight * maxRows\n  const adjustedHeight = data.length > maxRows ? totalMaxHeight : emptyHeight\n\n  const handleChange = useCallback((data: any) => {\n    if (autoAdd) {\n      const lastItem = data[data.length - 1]\n      if (!lastItem || Object.values(lastItem).some(val => val)) data.push({})\n    }\n    onChange?.(data)\n  }, [autoAdd, onChange])\n\n  const updateHeight = useCallback(() => {\n    setState({\n      autoHeight: shorterMax,\n      maxHeight: adjustedHeight\n    })\n  }, [adjustedHeight, shorterMax])\n\n  const onAddColumn = useCallback(() => {\n    handleChange?.([...data, {}])\n    setShouldScroll(true)\n    updateHeight()\n    onAdd?.(data.length)\n  }, [data, handleChange, updateHeight, onAdd])\n\n  const onRemoveColumn = useCallback((index: any) => {\n    data.splice(index, 1)\n    handleChange?.(data)\n    updateHeight()\n    onRemove?.(index)\n  }, [data, handleChange, updateHeight, onRemove])\n\n  const prepareColumns = () => columns?.map(col => cloneElement(col, {\n    onChange: () => handleChange?.([...data] as any)\n  }))\n\n  const shouldUpdateScroll = () => {\n    const scrollPos: { y?: number } = {}\n    if (shouldScroll) {\n      scrollPos.y = Number.MAX_SAFE_INTEGER\n      setShouldScroll(false)\n    }\n    return scrollPos\n  }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(updateHeight, [])\n\n  return (<div>\n    {!!label && <label>{label}</label>}\n    <STable data={data}\n            headerHeight={headerHeight}\n            rowHeight={rowHeight}\n            height={maxHeight}\n            autoHeight={autoHeight}\n            shouldUpdateScroll={shouldUpdateScroll}\n            className={cx({hideHeader})}\n            {...tableProps}>\n      {prepareColumns()}\n      <Column width={34}>\n        <HeaderCell>\n          <div/>\n        </HeaderCell>\n        <ActionCell onAction={onRemoveColumn} icon={() => <Close/>}/>\n      </Column>\n    </STable>\n    {!!errorMessage && <ErrorMessage show={!!errorMessage} placement=\"bottomStart\">\n      {errorMessage}\n    </ErrorMessage>}\n    {!autoAdd &&\n      <Button appearance=\"default\" size=\"sm\" onClick={onAddColumn} style={{marginTop: 10}} block>\n        <Plus/>\n      </Button>\n    }\n  </div>)\n}\n\nconst STable = styled(Table)`\n  .rs-table-cell, .rs-table-row {\n    background-color: transparent !important;\n  }\n\n  &.hideHeader {\n    margin-bottom: -40px;\n\n    .rs-table-header-row-wrapper {\n      display: none !important;\n    }\n\n    .rs-table-body-row-wrapper {\n      top: 0 !important;\n    }\n  }\n`\n","import {upperFirst} from 'lodash-es'\nimport type {ComponentType} from 'react'\nimport {Table} from 'rsuite'\nimport {InputCell} from './CustomCells'\n\nconst {Column, HeaderCell} = Table\n\n/**\n * The description of the table column.\n */\nexport interface ColumnDescription {\n\n  /**\n   * The column name.\n   */\n  name: string,\n\n  /**\n   * The column title.\n   */\n  title?: string,\n\n  /**\n   * The React component that displays the value of a column.\n   */\n  input?: ComponentType,\n\n  /**\n   * The properties of the React component that displays the value of the column.\n   */\n  inputProps?: any\n}\n\n/**\n * Creates table columns based on their descriptions. **Internal use only.**\n * @param columns the column descriptions.\n * @returns the array with React elements.\n */\nexport const makeColumns = (columns: ColumnDescription[]) => columns\n  .map(({name, input, title, inputProps = {}}: ColumnDescription) => {\n    const Input = input ?? InputCell\n    return <Column flexGrow={1} key={name}>\n      <HeaderCell>{title ?? upperFirst(name)}</HeaderCell>\n      <Input dataKey={name} {...inputProps}/>\n    </Column>\n  })\n","import {useRef} from 'react'\n\nlet counter = 0\n\nfunction uniqueId(prefix?: string) {\n  const id = ++counter\n  return prefix ? `${prefix}${id}` : `${id}`\n}\n\n/**\n * Used for generating unique ID for DOM elements\n * @param prefix the value to prefix the ID with.\n * @returns the unique ID.\n */\nexport function useUniqueId(prefix?: string) {\n  const idRef = useRef<string>(null)\n  if (!idRef.current) idRef.current = uniqueId(prefix)\n  return idRef.current\n}\n","import {createNonNullableContext} from '@react-form-builder/core'\nimport type {TypeAttributes} from 'rsuite/esm/internals/types'\n\nconst [\n  /**\n   * **Internal use only.**\n   */\n  useTooltipPlacement,\n  /**\n   * **Internal use only.**\n   */\n  TooltipPlacementProvider] = createNonNullableContext<TypeAttributes.Placement>('TooltipPlacementContext')\n\nexport {useTooltipPlacement, TooltipPlacementProvider}\n","import styled from '@emotion/styled'\nimport type {IconProps} from '@rsuite/icons/lib/Icon'\nimport type {ReactElement, ReactNode} from 'react'\nimport type {WhisperProps} from 'rsuite'\nimport {IconButton, Tooltip, Whisper} from 'rsuite'\nimport type {TypeAttributes} from 'rsuite/esm/internals/types'\nimport {useTooltipPlacement} from '../../utils/TooltipPlacementContext'\n\n/**\n * React component properties for the {@link HintedLabel} component.\n */\nexport interface HintedLabelProps {\n  /**\n   * The value of the HTML \"for\" attribute.\n   */\n  htmlFor?: string\n  /**\n   * The React child node.\n   */\n  children: ReactNode\n  /**\n   * The tooltip value.\n   */\n  hint?: ReactNode\n  /**\n   * The name of the CSS class of the tooltip.\n   */\n  className?: string\n}\n\n/**\n * React component properties for the {@link Hinted} component.\n */\nexport interface HintedProps extends Omit<WhisperProps, 'speaker'> {\n  /**\n   * The tooltip value.\n   */\n  hint?: ReactNode\n  /**\n   * The tooltip React node.\n   */\n  speaker?: ReactNode\n}\n\n/**\n * The React form builder component that wraps the children component and displays the label with the tooltip.\n * @param props the React component properties.\n * @param props.hint the tooltip text.\n * @param props.children the wrapped children component.\n * @param props.labelProps the label component properties.\n * @returns the React element.\n * @internal\n */\nexport const HintedLabel = ({hint, children, ...labelProps}: HintedLabelProps) => {\n  if (!hint) return <SLabel {...labelProps}>{children}</SLabel>\n  return <Hinted hint={hint}>\n    <SLabel {...labelProps} hinted>{children}</SLabel>\n  </Hinted>\n}\n\n/**\n * The React form builder component that wraps the children component and displays a tooltip.\n * @param props the React component properties.\n * @param props.hint the tooltip text.\n * @param props.children the wrapped children component.\n * @returns the React element.\n * @internal\n */\nexport const Hinted = ({hint, children, ...props}: HintedProps) => {\n  const tooltipPlacement = useTooltipPlacement()\n  const placement = props.placement ?? tooltipPlacement\n\n  if (!hint) return <>{children}</>\n\n  return <Whisper speaker={<Tooltip>{hint}</Tooltip>} placement={placement} trigger={'hover'}>\n    {children}\n  </Whisper>\n}\n\n/**\n * React component properties for the {@link HintedIconButton} component.\n * @internal\n */\nexport interface HintedIconButtonProps {\n  /**\n   * The tooltip text.\n   */\n  hint: string\n  /**\n   * The onClick event handler of the button.\n   */\n  onClick: () => void\n  /**\n   * The button icon.\n   */\n  icon: ReactElement<IconProps>\n  /**\n   * The tooltip placement.\n   */\n  hintPlacement: TypeAttributes.Placement\n}\n\n/**\n * The React form builder component that displays hinted icon button.\n * @param props the React component properties.\n * @param props.hint the tooltip text.\n * @param props.hintPlacement the tooltip placement.\n * @returns the React element.\n * @internal\n */\nexport const HintedIconButton = ({hint, hintPlacement, ...props}: HintedIconButtonProps) => {\n  return <Hinted hint={hint} placement={hintPlacement ?? 'bottom'}>\n    <IconButton {...props} size=\"xs\"/>\n  </Hinted>\n}\n\nconst SLabel = styled.label<{ hinted?: boolean }>`\n  min-width: 80px;\n\n  ${({hinted}) => hinted && `\n    :hover {\n      text-decoration: underline;\n      text-decoration-style: dotted;\n    }\n  `};\n`\n","import {useTranslation} from 'react-i18next'\n\n/**\n * Returns the string translation method finding for string constants relative to the specified path.\n * @param path the relative path for finding string constants.\n * @returns the string translation method.\n */\nexport const useTranslationPart = (path: string) => {\n  const [t, {exists}] = useTranslation()\n  return (key: string) => {\n    const fullPath = `${path}.${key}`\n    return exists(fullPath) ? t(fullPath) : ''\n  }\n}\n","import {css} from '@emotion/react'\nimport styled from '@emotion/styled'\n\nconst DEFAULT_GAP = 5\n\n/**\n * The React component that displays a set of rows.\n * @param props the React component properties.\n * @param props.gap the gap between rows.\n * @returns the React element.\n */\nexport const Rows = styled.div<{ gap?: number }>`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  gap: ${({gap}) => gap ?? DEFAULT_GAP}px;\n`\n\nexport const Columns = styled.div<{\n  /**\n   * The gap between columns.\n   */\n  gap?: number\n  /**\n   * Flag, if true the columns will be stretched in width, false otherwise.\n   */\n  stretchElements?: boolean\n  /**\n   * Flag, if true the columns justify space between, false otherwise.\n   */\n  spaceBetween?: boolean\n}>`\n  display: flex;\n  gap: ${({gap}) => gap ?? DEFAULT_GAP}px;\n  ${({stretchElements}) => stretchElements && '& > * { flex: 1; }'};\n  ${({spaceBetween}) => spaceBetween && 'justify-content: space-between'};\n`\n\nexport const LabeledInput = styled.div`\n  display: flex;\n  gap: 10px;\n  justify-content: space-between;\n  align-items: center;\n\n  & > label {\n    width: 100px;\n    min-width: 80px;\n  }\n`\n\nexport const listItemStyle = css`\n  && {\n    display: flex;\n    position: relative;\n    background-color: var(--rs-btn-default-bg);\n    border-radius: 10px;\n    padding: 8px;\n    padding-inline-start: 12px;\n    align-items: center;\n    user-select: none;\n    justify-content: space-between;\n  }\n`\n\nexport const listStyle = css`\n  && {\n    display: flex;\n    flex: 1;\n    flex-direction: column;\n    gap: ${DEFAULT_GAP}px;\n  }\n`\n\nexport const clickableStyle = css`\n  && > * {\n    cursor: pointer;\n\n    :hover {\n      background-color: var(--rs-btn-default-hover-bg);\n    }\n  }\n`\n\nexport const ListItem = styled.div`\n  ${listItemStyle}\n`\n\n/**\n * The React component that displays a list.\n * @param props the React component properties.\n * @param props.clickable flag, if true then the list is clickable, false otherwise.\n * @returns the React element.\n */\nexport const List = styled.div<{ clickable?: boolean }>`\n  ${listStyle}\n  ${({clickable = false}) => clickable && clickableStyle}\n`\n","import type {IconDefinition} from '@fortawesome/fontawesome-common-types'\nimport {forwardRef} from '@react-form-builder/core'\nimport {Icon} from '@rsuite/icons'\nimport type {Ref} from 'react'\n\n/**\n * The React component that displays an SVG icon.\n * @param props the React component properties.\n * @param props.faIcon the SVG icon.\n * @param props.size the size of the icon.\n * @returns the React element.\n */\nconst FaSvgIcon = forwardRef(({faIcon, size, ...rest}: { faIcon: any, size?: number },\n                              ref: Ref<SVGSVGElement>) => {\n  const {width, height, svgPathData} = extractFaIconData(faIcon)\n  return (\n    <svg viewBox={`0 0 ${width} ${height}`} width={`${size ?? 1}em`} height={`${size ?? 1}em`}\n         fill=\"currentColor\" {...rest} ref={ref}>\n      <path d={svgPathData}/>\n    </svg>\n  )\n})\n\nconst extractFaIconData = (faIcon: any) => {\n  if (faIcon?.icon) {\n    const [width, height, , , svgPathData] = faIcon.icon\n    return {width, height, svgPathData}\n  }\n  return faIcon\n}\n\ninterface FaIconProps {\n  icon: IconDefinition,\n  size?: number,\n  color?: string,\n  props?: any,\n  viewBox?: string,\n  width?: string,\n  height?: string,\n  onClick?: any,\n  className?: string,\n}\n\n/**\n * The React component that displays an icon.\n * @param props the React component properties.\n * @param props.icon the icon.\n * @param props.size the size of the icon.\n * @param props.props the other properties of the component.\n * @returns the React element.\n */\nexport const FaIcon = forwardRef(({icon, size, ...props}: FaIconProps, ref: Ref<SVGElement>) => (\n  <Icon as={FaSvgIcon} ref={ref} {...{faIcon: icon, size, ...props}}/>\n))\n","import {css} from '@emotion/css'\nimport styled from '@emotion/styled'\nimport type {IconDefinition} from '@fortawesome/fontawesome-common-types'\nimport * as faCode from '@fortawesome/free-solid-svg-icons/faCode.js'\nimport * as faGlobe from '@fortawesome/free-solid-svg-icons/faGlobe.js'\nimport * as faEdit from '@fortawesome/free-solid-svg-icons/faMarker.js'\nimport type {Annotation, ComponentData} from '@react-form-builder/core'\nimport type {HTMLAttributes} from 'react'\nimport {cloneElement, useCallback, useMemo} from 'react'\nimport {IconButton} from 'rsuite'\nimport {EditableProperty} from '../../stores/BuilderStore'\nimport {useBuilderStore} from '../../utils/BuilderStoreContext'\nimport {useUniqueId} from '../../utils/useUniqueId'\nimport type {CalculableEditorProps} from '../annotation-editors/AnnotationEditorProps'\nimport {Hinted, HintedLabel} from '../annotation-editors/Hinted'\nimport {customizable, customizableObserver} from '../customization'\nimport {useTranslationPart} from '../localization/hooks'\nimport {Columns, LabeledInput} from './Containers'\nimport {FaIcon} from './Icons'\n\nconst afterRedAsterisk = css`\n  &:after {\n    padding-left: 3px;\n    content: \"*\";\n    color: red;\n  }\n`\n\n/**\n * The properties of the React {@link LabeledProperty} component.\n */\nexport interface LabeledPropertyProps extends CalculableEditorProps, HTMLAttributes<any> {\n  /**\n   * The metadata for a React component property.\n   */\n  annotation: Annotation\n  /**\n   * The data required to display the component.\n   */\n  componentData: ComponentData\n  /**\n   * The child elements of the labeled property.\n   */\n  children?: any\n  /**\n   * The label style.\n   */\n  style?: any\n}\n\n/**\n * Represents the properties of a Code Button component.\n */\nexport interface CodeButtonProps extends CalculableEditorProps {\n  /**\n   * The metadata for a React component property.\n   */\n  annotation: Annotation\n  /**\n   * The data required to display the component.\n   */\n  componentData: ComponentData\n}\n\ntype ButtonType = 'disabled' | 'calculation' | 'localization' | 'localizable' | 'calculable' | 'calculableAndLocalizable'\n\ntype ButtonAppearance = {\n  hint: string,\n  color?: string,\n  icon: IconDefinition,\n}\n\nconst ButtonAppearance: Record<ButtonType, ButtonAppearance> = {\n  'disabled': {\n    hint: 'neitherCalculableNorLocalizable',\n    icon: faEdit as unknown as IconDefinition,\n    color: 'var(--rs-btn-default-disabled-bg)'\n  },\n  'calculation': {\n    hint: 'editCalculable',\n    color: 'var(--rs-btn-primary-bg)',\n    icon: faCode as unknown as IconDefinition,\n  },\n  'localization': {\n    hint: 'editLocalizable',\n    color: 'var(--rs-btn-primary-bg)',\n    icon: faGlobe as unknown as IconDefinition,\n  },\n  'calculable': {\n    hint: 'hintCalculable',\n    icon: faEdit as unknown as IconDefinition,\n  },\n  'localizable': {\n    hint: 'hintLocalizable',\n    icon: faEdit as unknown as IconDefinition,\n  },\n  'calculableAndLocalizable': {\n    hint: 'hintCalculableAndLocalizable',\n    icon: faEdit as unknown as IconDefinition,\n  }\n}\n\nconst RawCodeButton = (props: CodeButtonProps) => {\n  const {annotation, getComputeCode, setComputeCode, disableCompute, getComputeType, hasComputeCode, componentData} = props\n  const store = useBuilderStore()\n  const disabled = !annotation.calculable && !annotation.localizable\n  const getLabel = useTranslationPart('propertiesEditor.codeButton')\n  const calculableType = getComputeType()\n\n  const buttonType = useMemo<ButtonType>(() => {\n    const calculation = calculableType === 'function' && hasComputeCode('function')\n    const localization = calculableType === 'localization' && hasComputeCode('localization')\n\n    if (disabled) return 'disabled'\n    if (calculation) return 'calculation'\n    if (localization) return 'localization'\n    if (annotation.calculable && annotation.localizable) return 'calculableAndLocalizable'\n    if (annotation.calculable) return 'calculable'\n    if (annotation.localizable) return 'localizable'\n\n    return 'disabled'\n  }, [annotation.calculable, annotation.localizable, disabled, hasComputeCode, calculableType])\n\n  const buttonStyle = useMemo(() => {\n    const {hint, icon, color} = ButtonAppearance[buttonType]\n    return {icon, color, hint: getLabel(hint)}\n  }, [buttonType, getLabel])\n\n  const handleClick = useCallback(() => {\n    return store.currentEditable = new EditableProperty(disableCompute, setComputeCode,\n      getComputeCode, getComputeType, hasComputeCode, annotation, componentData.key)\n  }, [annotation, componentData.key, disableCompute, getComputeCode, getComputeType, hasComputeCode, setComputeCode, store])\n\n  return <Hinted hint={buttonStyle.hint}>\n    <SIconButton onClick={handleClick} disabled={disabled}\n                 icon={<FaIcon icon={buttonStyle.icon} color={buttonStyle.color}/>}\n                 size={'xs'} appearance={'subtle'}/>\n  </Hinted>\n}\n\nconst CodeButton = customizableObserver('PropertyCodeButton', RawCodeButton)\n\nconst CustomizedLabel = customizable('PropertyLabel', HintedLabel)\n\nconst RawCustomizedInput = (props: HTMLAttributes<HTMLDivElement>) => <div style={{width: '100%'}} {...props}/>\n\nconst CustomizedInput = customizable('PropertyInput', RawCustomizedInput)\n\nconst RawLabeledProperty = (props: LabeledPropertyProps) => {\n  const {annotation, children, style} = props\n  const {className, ...codeButtonProps} = props\n  const id = useUniqueId('id-')\n  const componentType = props.componentData.model.type\n  const commonLabels = useTranslationPart(`annotation.${annotation.key}`)\n  const componentLabels = useTranslationPart(`${componentType}.${annotation.key}`)\n  const getLabel = (key: string) => componentLabels(key) || commonLabels(key)\n  const labelClassName = annotation.required ? afterRedAsterisk : undefined\n\n  return <LabeledInput style={style} className={className}>\n    <Columns gap={10} style={{alignItems: 'center'}}>\n      <CodeButton {...codeButtonProps}/>\n      <CustomizedLabel htmlFor={id} hint={annotation.hint ?? getLabel('hint')} className={labelClassName}>\n        <>{getLabel('name') || annotation.name}</>\n      </CustomizedLabel>\n    </Columns>\n    {!!children && <CustomizedInput>{cloneElement(children, {id})}</CustomizedInput>}\n  </LabeledInput>\n}\n\n/**\n * The React component that displays a component property and label.\n * @param props the React component properties.\n * @param props.idPrefix the prefix for the id attribute in HTML.\n * @param props.annotation the component property metadata.\n * @param props.getEditableProperty function that returns the parameters of the component's editable property.\n * @param props.children the React component that displays a component property.\n * @param props.props the other properties of the component.\n * @returns the React element.\n */\nexport const LabeledProperty = customizable('LabeledProperty', RawLabeledProperty)\n\nconst SIconButton = styled(IconButton)`\n  min-width: 24px;\n  margin-inline-end: -6px;\n`\n\nexport default LabeledProperty\n","import {namedObserver, useStore} from '@react-form-builder/core'\nimport {useCallback, useMemo} from 'react'\nimport {EditableTable, makeColumns} from '../components/EditableTable'\nimport LabeledProperty from '../components/LabeledProperty'\nimport type {AnnotationEditorProps} from './AnnotationEditorProps'\n\nconst DEFAULT_COLUMNS = [{name: 'value'}, {name: 'label'}]\n\n/**\n * The property editor for the array property type.\n * @param props the Annotation editor component properties.\n * @returns the React element.\n */\nconst RawArrayInput = (props: AnnotationEditorProps) => {\n  const {value, onChange, annotation, componentData} = props\n  const {onAdd, onRemove, columns, calculateEditorProps} = annotation.editorProps ?? {}\n  const viewerStore = useStore()\n  const preparedColumns = useMemo(() => makeColumns(columns ?? DEFAULT_COLUMNS), [columns])\n\n  const handleAdd = useCallback((index: number) => {\n    onAdd?.(index, componentData, viewerStore)\n  }, [viewerStore, componentData, onAdd])\n\n  const handleRemove = useCallback((index: number) => {\n    onRemove?.(index, componentData, viewerStore)\n  }, [viewerStore, componentData, onRemove])\n\n  const calculatedProps = calculateEditorProps?.(componentData, onChange) ?? {}\n\n  return <>\n    <LabeledProperty {...props}/>\n    <EditableTable data={value} onChange={onChange} columns={preparedColumns}\n                   onRemove={handleRemove} onAdd={handleAdd} {...calculatedProps}\n    />\n  </>\n}\n\nexport const ArrayInput = namedObserver('ArrayInput', RawArrayInput)\n","import {Close, Code} from '@rsuite/icons'\nimport {isObject} from 'lodash-es'\nimport {useCallback, useMemo} from 'react'\nimport {Input, InputGroup} from 'rsuite'\nimport {useBuilderStore} from '../../utils/BuilderStoreContext'\n\nconst stringify = (value: any, space?: number) => {\n  try {\n    return JSON.stringify(value, null, space)\n  } catch (e) {\n    return\n  }\n}\n\n/**\n * The JSON editor properties.\n */\nexport interface JsonInputProps {\n  /**\n   * The editor value.\n   */\n  value: any\n  /**\n   * The editor onChange handler.\n   * @param value the changed value.\n   */\n  onChange: (value: any) => void\n  /**\n   * The editor onClean handler.\n   */\n  onClean: () => void\n  /**\n   * The editor onValidate handler.\n   */\n  onValidate?: (value: string) => void\n  /**\n   * The editor's React key.\n   */\n  editorKey: string\n  /**\n   * The editor title.\n   */\n  editorTitle: string\n}\n\n/**\n * Plain JSON object editor.\n * @param props the component properties.\n * @returns the React element.\n */\nexport const JsonInput = (props: JsonInputProps) => {\n  const {value, onChange, onClean, onValidate, editorKey, editorTitle} = props\n  const builderStore = useBuilderStore()\n\n  const strVal = useMemo(() => {\n    return (isObject(value) ? stringify(value, 2) : value) ?? ''\n  }, [value])\n\n  const valuePreview = useMemo(() => {\n    return value ? stringify(value)?.substring(0, 50) ?? 'Error' : ''\n  }, [value])\n\n  const editJson = useCallback(() => {\n    builderStore.editJsonCode(editorKey, editorTitle, strVal, onChange, onValidate)\n  }, [builderStore, editorKey, editorTitle, onChange, strVal, onValidate])\n\n  return <InputGroup inside size=\"xs\">\n    <Input value={valuePreview} onClick={editJson} readOnly color={'var(--rs-btn-ghost-text)'}/>\n    <InputGroup.Button onClick={value ? onClean : editJson}>\n      {value ? <Close/> : <Code/>}\n    </InputGroup.Button>\n  </InputGroup>\n}\n","import {useCallback, useMemo} from 'react'\nimport type {InputCellProps} from '../components/EditableTable'\nimport {EditableTable, makeColumns, SCell} from '../components/EditableTable'\nimport LabeledProperty from '../components/LabeledProperty'\nimport type {AnnotationEditorProps} from './AnnotationEditorProps'\nimport {JsonInput} from './JsonInput'\n\ninterface JsonCellProps extends InputCellProps {\n  editorTitle: string\n}\n\nconst valueIsObject = (value: string): void => {\n  const parsed = JSON.parse(value)\n  if (typeof parsed !== 'object' || Array.isArray(parsed)) {\n    throw new Error('The value must be an object')\n  }\n}\n\nconst JsonCell = ({rowData, dataKey, rowIndex, onChange, editorTitle, ...props}: JsonCellProps) => {\n  const value = rowData[dataKey] ?? {}\n  const title = useMemo(() => `${editorTitle}[${rowIndex}]`, [editorTitle, rowIndex])\n\n  const handleChange = useCallback((newValue: any) => {\n    rowData[dataKey] = newValue\n    onChange?.(newValue, dataKey, rowIndex)\n  }, [dataKey, onChange, rowData, rowIndex])\n\n  const handleClean = useCallback(() => {\n    handleChange(undefined)\n  }, [handleChange])\n\n  return (\n    <SCell {...props}>\n      <JsonInput editorKey={`${dataKey}-${rowIndex}`} editorTitle={title} value={value}\n                 onChange={handleChange} onClean={handleClean} onValidate={valueIsObject}/>\n    </SCell>\n  )\n}\n\nconst DEFAULT_COLUMNS = [{name: 'item', input: JsonCell}]\n\n/**\n * The property editor for the array of objects property type.\n * @param props the Annotation editor component properties.\n * @returns the React element.\n */\nexport const ArrayOfObjectInput = (props: AnnotationEditorProps) => {\n  const {value, onChange, annotation} = props\n\n  const editorColumns = useMemo(() => {\n    const result = annotation.editorProps?.columns ?? DEFAULT_COLUMNS\n    const column = result?.[0]\n    if (column && !column.inputProps) {\n      column.inputProps = {editorTitle: `${props.componentData.key}.${annotation.name}`}\n    }\n    return makeColumns(result)\n  }, [annotation.editorProps?.columns, annotation.name, props.componentData.key])\n\n  return <>\n    <LabeledProperty {...props}/>\n    <EditableTable data={value} onChange={onChange} columns={editorColumns}/>\n  </>\n}\n","import {TagInput} from 'rsuite'\nimport LabeledProperty from '../components/LabeledProperty'\nimport {useTranslationPart} from '../localization/hooks'\nimport type {AnnotationEditorProps} from './AnnotationEditorProps'\n\n/**\n * The property editor for property of type \"multiple select\", displays values as a tag editor.\n * @param props the Annotation editor component properties.\n * @returns the React element.\n */\nexport const ArrayOfStringInput = (props: AnnotationEditorProps) => {\n  const {value, onChange, onClean} = props\n  const t = useTranslationPart('propertiesEditor')\n\n  return <LabeledProperty {...props}>\n    <TagInput value={value ?? ''} onChange={onChange} onClean={onClean} block\n              size={'xs'} style={{width: '100%'}} placeholder={t('setInputHint')}\n    />\n  </LabeledProperty>\n}\n","import {namedObserver, toLabeledValues} from '@react-form-builder/core'\nimport {Check} from '@rsuite/icons'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {IconButton} from 'rsuite'\nimport {EditableTable, makeColumns, SelectCell} from '../../components/EditableTable'\nimport LabeledProperty from '../../components/LabeledProperty'\nimport {useTranslationPart} from '../../localization/hooks'\nimport type {AnnotationEditorProps} from '../AnnotationEditorProps'\nimport Attributes from './react-html-attributes.json'\n\nconst COLUMNS = makeColumns([\n  {\n    name: 'name',\n    input: SelectCell as any,\n    inputProps: {options: toLabeledValues(Attributes, false)}\n  },\n  {name: 'value'}\n])\n\nconst ConfirmButton = ({confirm}: { confirm: () => void }) => {\n  const getLabel = useTranslationPart('common')\n\n  return <IconButton icon={<Check/>} onClick={confirm} color=\"green\" appearance={'primary'} size={'xs'}>\n    {getLabel('apply')}\n  </IconButton>\n}\n\n/**\n * The property editor for the HTML-attributes property type.\n * @param props the Annotation editor component properties.\n * @returns the React element.\n */\nconst RawAttributesInput = (props: AnnotationEditorProps) => {\n  const {store} = props.componentData\n  const calculated = !!props.getComputeType()\n  const initialState = useMemo(() => store.htmlAttributes ? [...store.htmlAttributes] : store.htmlAttributes,\n    [store])\n  const [value, setValue] = useState(initialState)\n  const [changed, setChanged] = useState(false)\n\n  const handleChange = useCallback((value: any) => {\n    setValue(value)\n    setChanged(true)\n  }, [])\n\n  const confirm = useCallback(() => {\n    store.htmlAttributes = value\n    setChanged(false)\n  }, [store, value])\n\n  useEffect(() => {\n    setValue(initialState)\n    setChanged(false)\n  }, [initialState, store])\n\n  return <>\n    <LabeledProperty {...props}>\n      {changed && <ConfirmButton confirm={confirm}/>}\n    </LabeledProperty>\n    {!calculated && <EditableTable data={value ?? []} onChange={handleChange} columns={COLUMNS}/>}\n  </>\n}\n\nexport const AttributesInput = namedObserver('RawAttributesInput', RawAttributesInput)\n","import styled from '@emotion/styled'\nimport {Checkbox} from 'rsuite'\nimport LabeledProperty from '../components/LabeledProperty'\nimport type {AnnotationEditorProps} from './AnnotationEditorProps'\n\n/**\n * The property editor for the boolean property type.\n * @param props the Annotation editor component properties.\n * @returns the React element.\n */\nexport const BooleanInput = (props: AnnotationEditorProps) => {\n  const {value, onChange} = props\n  return <LabeledProperty {...props}>\n    <SCheckbox checked={!!value} onChange={(value, checked) => onChange(checked)}/>\n  </LabeledProperty>\n}\n\nexport const SCheckbox = styled(Checkbox)`\n  && {\n    height: 23px;\n    display: flex;\n    align-items: center;\n    width: 100%;\n\n    .rs-checkbox-checker {\n      padding-left: 0;\n      margin-left: -10px;\n    }\n  }\n`\n","import styled from '@emotion/styled'\nimport {Close} from '@rsuite/icons'\nimport type {RgbaColor} from 'react-colorful'\nimport {RgbaColorPicker} from 'react-colorful'\nimport {Input, InputGroup, Popover, Whisper} from 'rsuite'\nimport LabeledProperty from '../components/LabeledProperty'\nimport type {AnnotationEditorProps} from './AnnotationEditorProps'\n\n/**\n * The property editor for the color property type.\n * @param props the Annotation editor component properties.\n * @returns the React element.\n */\nexport const ColorInput = (props: AnnotationEditorProps) => {\n  const {value, onChange, onClean} = props\n\n  const color = rgbFromString(value ?? 'rgba(255, 255, 255, 0)')\n  const speaker = <Popover>\n    <RgbaColorPicker color={color} onChange={(rgba) => onChange(rgbToString(rgba))}/>\n  </Popover>\n\n  return <LabeledProperty {...props}>\n    <InputGroup inside style={{width: '100%'}} size={'xs'}>\n      <Whisper placement=\"auto\" trigger=\"hover\" speaker={speaker} enterable>\n        <SInput color={value} readOnly/>\n      </Whisper>\n      <SButton onClick={onClean}>\n        <Close/>\n      </SButton>\n    </InputGroup>\n  </LabeledProperty>\n}\n\nconst SInput = styled(Input)<{ color: string }>`\n  && {\n    background-image: url('data:image/svg+xml;charset=utf-8,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill-opacity=\".05\"><path d=\"M8 0h8v8H8zM0 8h8v8H0z\"/></svg>');\n    background-color: ${({color}) => color ?? 'var(--rs-btn-default-bg)'};\n  }\n`\n\nconst SButton = styled(InputGroup.Button)`\n  && {\n    background-color: var(--rs-btn-default-bg) !important;\n    position: absolute;\n    inset-inline-end: 0;\n    border-bottom-left-radius: 0;\n    border-top-left-radius: 0;\n    padding: 6px 8px;\n  }\n`\n\n/**\n * Converts the value to a string containing the color in CSS format.\n * @param value the object or string with a CSS color.\n * @returns the string containing the color in CSS format.\n */\nexport function rgbToString(value: RgbaColor) {\n  const {r, g, b, a} = value\n  return `rgba(${r}, ${g}, ${b}, ${a})`\n}\n\n/**\n * Converts the string containing a rgba color value into an object.\n * @param value the string containing a rgba color.\n * @returns the object with properties '{r, g, b, a}'.\n */\nexport function rgbFromString(value: string): RgbaColor {\n  const matchColors = /^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/\n  const [, r, g, b, a] = matchColors.exec(value) || []\n  return {r: Number(r), g: Number(g), b: Number(b), a: Number(a)}\n}\n","import {DatePicker} from 'rsuite'\nimport LabeledProperty from '../components/LabeledProperty'\nimport type {AnnotationEditorProps} from './AnnotationEditorProps'\n\n/**\n * The property editor for the date property type.\n * @param props the Annotation editor component properties.\n * @returns the React element.\n */\nexport const DateInput = (props: AnnotationEditorProps) => {\n  const {onChange, onClean, value} = props\n\n  return <LabeledProperty {...props}>\n    <DatePicker editable={false} cleanable={true} placement={'auto'}\n                value={value ?? null} onChange={onChange} onClean={onClean} size={'xs'}/>\n  </LabeledProperty>\n}\n","import {faMarker} from '@fortawesome/free-solid-svg-icons'\nimport {Close, Copy} from '@rsuite/icons'\nimport type {ComponentProps} from 'react'\nimport {HintedIconButton} from '../annotation-editors/Hinted'\nimport {useTranslationPart} from '../localization/hooks'\nimport {FaIcon} from './Icons'\n\n/**\n * The React form builder component that displays a button with a tooltip and a edit icon.\n * @param props the React component properties.\n * @returns the React element.\n * @internal\n */\nexport const EditButton = (props: ComponentProps<any>) => {\n  const t = useTranslationPart('common')\n  return <HintedIconButton hint={t('edit')} icon={<FaIcon icon={faMarker}/>} {...props}/>\n}\n\n/**\n * The React form builder component that displays a button with a tooltip and a clone icon.\n * @param props the React component properties.\n * @returns the React element.\n * @internal\n */\nexport const CloneButton = (props: ComponentProps<any>) => {\n  const t = useTranslationPart('common')\n  return <HintedIconButton hint={t('clone')} icon={<Copy/>} {...props}/>\n}\n\n/**\n * The React form builder component that displays a button with a tooltip and a delete icon.\n * @param props the React component properties.\n * @returns the React element.\n * @internal\n */\nexport const RemoveButton = (props: ComponentProps<any>) => {\n  const t = useTranslationPart('common')\n  return <HintedIconButton hint={t('remove')} icon={<Close/>} {...props}/>\n}\n","import {computed} from 'mobx'\nimport {useMemo} from 'react'\n\n/**\n * Returns the memoized value of the result of the computed function.\n * @param func the function to compute the value.\n * @returns the memoized value.\n */\nexport function useComputed<T>(func: () => T) {\n  return useMemo(() => computed(func), [func]).get()\n}\n","import type {ActionData} from '@react-form-builder/core'\nimport {createNonNullableContext} from '@react-form-builder/core'\n\nconst [\n  /**\n   * **Internal use only.**\n   */\n  useActionData,\n  /**\n   * **Internal use only.**\n   */\n  ActionDataProvider] = createNonNullableContext<ActionData>('ActionDataContext')\n\nexport {useActionData, ActionDataProvider}\n","import type {SelectPickerProps} from 'rsuite'\nimport {SelectPicker} from 'rsuite'\n\n/**\n * Props for the FixedSelectPicker component.\n * @template T - the type of the item.\n */\nexport interface FixedSelectPickerProps<T> extends SelectPickerProps<T> {\n  /**\n   * The picker width.\n   */\n  width: any\n}\n\n/**\n * This is a workaround for the SelectPicker component of RSuite.\n * The 'width' property of the SelectPicker component is required to avoid ResizeObserver errors.\n * @param props the rs component properties.\n * @param props.width the width of the picker.\n * @returns the RSuite select picker.\n */\nexport const FixedSelectPicker = <T, >({width, ...props}: FixedSelectPickerProps<T>) => {\n  return <SelectPicker {...props} style={{width: width}}/>\n}\n","import {namedObserver} from '@react-form-builder/core'\nimport {assign} from 'lodash-es'\nimport {useCallback} from 'react'\nimport {FixedSelectPicker} from '../../../../../../../../../ui/FixedSelectPicker'\nimport {useActionData} from '../../../../contexts/ActionDataContext'\nimport type {InputProps} from '../InputProps'\n\nconst booleanData = [\n  {label: 'True', value: true},\n  {label: 'False', value: false}\n]\n\nconst RawInputBoolean = ({name}: InputProps) => {\n  const data = useActionData()\n\n  const handleChange = useCallback((value?: string) => {\n    const newArgs = assign({}, data.args)\n    delete newArgs[name]\n    if (typeof value !== 'undefined') {\n      newArgs[name] = value\n    }\n    data.args = newArgs\n  }, [data, name])\n\n  const handleReset = useCallback(() => {\n    handleChange(undefined)\n  }, [handleChange])\n\n  return (\n    <FixedSelectPicker\n      onClean={handleReset}\n      data={booleanData}\n      searchable={false}\n      value={data.args?.[name] ?? ''}\n      onSelect={handleChange}\n      size={'sm'}\n      width={'100%'}\n    />\n  )\n}\n\nexport const InputBoolean = namedObserver('InputBoolean', RawInputBoolean)\n","import {namedObserver} from '@react-form-builder/core'\nimport {Close} from '@rsuite/icons'\nimport {assign} from 'lodash-es'\nimport {useCallback} from 'react'\nimport {InputGroup, InputNumber as RInputNumber} from 'rsuite'\nimport {useActionData} from '../../../../contexts/ActionDataContext'\nimport type {InputProps} from '../InputProps'\n\nconst RawInputNumber = ({name}: InputProps) => {\n  const data = useActionData()\n  const value = typeof data.args?.[name] !== 'undefined' ? Number(data.args[name]) : ''\n\n  const handleChange = useCallback((value: string | number | null) => {\n    const newArgs = assign({}, data.args)\n    delete newArgs[name]\n    if (typeof value === 'string' || typeof value === 'number') {\n      newArgs[name] = Number(value)\n    }\n    data.args = newArgs\n  }, [data, name])\n\n  const handleReset = useCallback(() => {\n    handleChange(null)\n  }, [handleChange])\n\n  return (\n    <InputGroup size={'sm'}>\n      <RInputNumber value={value} onChange={handleChange} onReset={handleReset} size={'sm'}/>\n      <InputGroup.Button onClick={handleReset}>\n        <Close/>\n      </InputGroup.Button>\n    </InputGroup>\n  )\n}\n\nexport const InputNumber = namedObserver('InputNumber', RawInputNumber)\n","import {namedObserver} from '@react-form-builder/core'\nimport {assign} from 'lodash-es'\nimport {Input as RInput, InputGroup} from 'rsuite'\nimport {useActionData} from '../../../../contexts/ActionDataContext'\nimport type {InputProps} from '../InputProps'\n\nconst RawInputString = ({name}: InputProps) => {\n  const data = useActionData()\n  const value = data.args?.[name]?.toString() ?? ''\n  const handleChange = (value: string) => data.args = assign({}, data.args, {[name]: value})\n\n  return (\n    <InputGroup size={'sm'}>\n      <RInput value={value} onChange={handleChange}/>\n    </InputGroup>\n  )\n}\n\nexport const InputString = namedObserver('InputString', RawInputString)\n","import type {ParameterType} from '@react-form-builder/core'\nimport {namedObserver} from '@react-form-builder/core'\nimport type {ComponentType} from 'react'\nimport {Rows} from '../../../../../../../../components/Containers'\nimport {InputBoolean} from './components/InputBoolean'\nimport {InputNumber} from './components/InputNumber'\nimport {InputString} from './components/InputString'\nimport type {InputProps} from './InputProps'\nimport type {Parameter} from './Parameter'\n\nconst getArgumentInputByType = (type: ParameterType): ComponentType<InputProps> => {\n  switch (type) {\n    case 'string':\n      return InputString\n    case 'number':\n      return InputNumber\n    case 'boolean':\n      return InputBoolean\n  }\n}\n\ninterface ActionArgumentProps {\n  data: Parameter\n}\n\nconst RawArgumentItem = ({data}: ActionArgumentProps) => {\n  const [name, type] = data\n  const ArgumentInput = getArgumentInputByType(type)\n\n  return <Rows>\n    <label>{name}</label>\n    <ArgumentInput name={name}/>\n  </Rows>\n}\n\nexport const ArgumentItem = namedObserver('ArgumentItem', RawArgumentItem)\n","import styled from '@emotion/styled'\nimport {namedObserver, useStore} from '@react-form-builder/core'\nimport {ArrowDownLine, ArrowUpLine} from '@rsuite/icons'\nimport {t} from 'i18next'\nimport {isEmpty} from 'lodash-es'\nimport {useCallback, useEffect, useReducer} from 'react'\nimport {Animation, Button} from 'rsuite'\nimport {useComputed} from '../../../../../../../../utils/useComputed'\nimport {Rows} from '../../../../../../../components/Containers'\nimport {useActionData} from '../../contexts/ActionDataContext'\nimport {ArgumentItem} from './ArgumentItem'\n\n// Delete arguments object on unmount if it is empty.\nconst useClearableArguments = () => {\n  const data = useActionData()\n\n  useEffect(() => {\n    return () => {\n      if (isEmpty(data.args)) {\n        delete data.args\n      }\n    }\n  }, [data.args])\n}\n\nconst RawArgumentList = () => {\n  const store = useStore()\n  const data = useActionData()\n  const getAction = useCallback(() => store.findAction(data), [data, store])\n  const action = useComputed(getAction)\n  const [show, toggleShow] = useReducer(state => !state, false)\n  const ExpandIcon = show ? ArrowUpLine : ArrowDownLine\n\n  useClearableArguments()\n\n  if (!Object.keys(action.params).length) return null\n\n  return (\n    <div onMouseDown={e => e.stopPropagation()}>\n      <Animation.Collapse in={show} unmountOnExit>\n        <Rows gap={1} style={{marginBlock: 8, paddingInline: 10}}>\n          {Object.entries(action.params).map((arg, index) =>\n            <ArgumentItem key={index} data={arg}/>)}\n        </Rows>\n      </Animation.Collapse>\n\n      <ExpandButton block onClick={toggleShow}>\n        <>\n          {t('actions.arguments')}\n          <ExpandIcon style={{marginTop: -2}}/>\n        </>\n      </ExpandButton>\n    </div>\n  )\n}\n\nexport const ArgumentList = namedObserver('ArgumentList', RawArgumentList)\n\nconst ExpandButton = styled(Button)`\n  padding: 5px !important;\n  border-radius: 0 !important;\n  outline: 0 !important;\n  color: var(--rs-btn-subtle-text) !important;\n\n  &:focus {\n    box-shadow: none;\n    background-color: initial;\n  }\n`\n","import type {ActionData, NamedActionDefinition} from '@react-form-builder/core'\nimport {namedObserver, useStore} from '@react-form-builder/core'\nimport {ButtonGroup} from 'rsuite'\nimport {useBuilderStore} from '../../../../../../utils/BuilderStoreContext'\nimport {EditButton, RemoveButton} from '../../../../../components/Buttons'\nimport {Columns} from '../../../../../components/Containers'\nimport {ArgumentList} from './components/ArgumentList'\nimport {ActionDataProvider} from './contexts/ActionDataContext'\n\ninterface ActionItemProps {\n  data: ActionData\n  onRemove: () => void\n}\n\nconst RawActionItem = ({data, onRemove}: ActionItemProps) => {\n  const builderStore = useBuilderStore()\n  const viewerStore = useStore()\n  const isCodeAction = data.type === 'code'\n  const edit = () => {\n    const actionDefinition = viewerStore.form.actions[data.name]\n    if (!actionDefinition) {\n      console.error(`Cannot find custom action: '${data.name}'`)\n      return\n    }\n    const namedAction: NamedActionDefinition = {name: data.name, actionDefinition}\n    builderStore.editCodeAction(namedAction)\n  }\n\n  return (\n    <ActionDataProvider value={data}>\n      <Columns style={{justifyContent: 'space-between', padding: 8}}>\n        <b style={{color: 'violet', marginLeft: 5}}>\n          {`${data.name || 'Action'}`}\n        </b>\n        <ButtonGroup size={'xs'}>\n          {isCodeAction && <EditButton onClick={edit}/>}\n          <RemoveButton onClick={onRemove}/>\n        </ButtonGroup>\n      </Columns>\n      <ArgumentList/>\n    </ActionDataProvider>\n  )\n}\n\nexport const ActionItem = namedObserver('ActionItem', RawActionItem)\n","import styled from '@emotion/styled'\nimport type {ActionData} from '@react-form-builder/core'\nimport {KeySymbol, namedObserver} from '@react-form-builder/core'\nimport {useCallback} from 'react'\nimport {List} from 'rsuite'\nimport {listItemStyle, listStyle} from '../../../../components/Containers'\nimport type {AnnotationEditorProps} from '../../../AnnotationEditorProps'\nimport {ActionItem} from './ActionItem'\n\ninterface ActionListItemProps {\n  index: number,\n  data: ActionData,\n  onRemove: (index: number) => ActionData[] | undefined\n}\n\nfunction ActionListItem({data, index, onRemove}: ActionListItemProps) {\n  const handleRemove = useCallback(() => onRemove(index), [index, onRemove])\n\n  return <SListItem index={index}>\n    <ActionItem data={data} onRemove={handleRemove}/>\n  </SListItem>\n}\n\nconst RawActionList = (props: AnnotationEditorProps) => {\n  const eventName = props.annotation.key\n  const actions = props.componentData.store.events?.[eventName]\n\n  const onRemove = useCallback((index: number) => actions?.splice(index, 1), [actions])\n\n  const handleSortEnd = useCallback((info?: MovedInfo) => {\n    if (!actions || !(info?.oldIndex || info?.newIndex)) return\n\n    const movingElement = actions[info.oldIndex]\n    actions.splice(info.oldIndex, 1)\n    actions.splice(info.newIndex, 0, movingElement)\n  }, [actions])\n\n  if (!actions?.length) return null\n\n  return <SList sortable onSort={handleSortEnd}>\n    {actions.map((action, index) => (\n      <ActionListItem key={action[KeySymbol]} index={index} data={action} onRemove={onRemove}/>\n    ))}\n  </SList>\n}\n\nexport const ActionList = namedObserver('ActionList', RawActionList)\n\ninterface MovedInfo {\n  newIndex: number\n  oldIndex: number\n}\n\nconst SList = styled(List)`\n  ${listStyle}\n  && {\n    box-shadow: none;\n  }\n`\n\nconst SListItem = styled(List.Item)`\n  ${listItemStyle}\n  && {\n    overflow: hidden;\n    padding: 0;\n    box-shadow: none;\n    flex-direction: column;\n    align-items: initial;\n  }\n\n  &.rs-list-item-helper {\n    outline: 2px solid var(--rs-btn-primary-bg);\n  }\n`\n","import {ComponentStore, namedObserver, useStore} from '@react-form-builder/core'\nimport {Plus as PlusIcon} from '@rsuite/icons'\nimport {Divider, Dropdown} from 'rsuite'\nimport {useBuilderStore} from '../../../../../../utils/BuilderStoreContext'\nimport {useTranslationPart} from '../../../../../localization/hooks'\nimport type {ActionsMenuProps} from '../types'\n\n/**\n * React form builder component that displays the list of code actions.\n * @param props the React component properties.\n * @param props.onSelect the callback function called when an action is selected.\n * @param props.annotation the metadata for a React component property.\n * @returns the React element.\n */\nconst RawCodeActionsList = ({onSelect, annotation}: ActionsMenuProps) => {\n  const store = useStore()\n  const builderStore = useBuilderStore()\n  const selectedStore = builderStore.oneSelected?.store\n  const eventName = annotation.key\n  const actionNames = store.form.actionNames\n  const t = useTranslationPart('actions')\n  const addAction = () => {\n    onSelect()\n    if (!selectedStore) return\n    builderStore.addCodeAction(namedAction => {\n      ComponentStore.addEventHandler(selectedStore, eventName, {name: namedAction.name, type: 'code'})\n    })\n  }\n\n  const renderAction = (name: string) => (\n    <Dropdown.Item key={name} onClick={() => onSelect({name, type: 'code'})}\n                   style={{position: 'relative', display: 'flex', justifyContent: 'space-between'}}>\n      <span style={{whiteSpace: 'break-spaces'}}>{name}</span>\n    </Dropdown.Item>\n  )\n\n  return <Dropdown.Menu title={t('code')}>\n    {actionNames?.map(renderAction)}\n\n    {!!actionNames?.length && <Dropdown.Item disabled>\n      <Divider style={{marginTop: 0, marginBottom: 0}}/>\n    </Dropdown.Item>}\n\n    <Dropdown.Item children={t('addCodeAction')} icon={<PlusIcon/>} onClick={addAction}/>\n  </Dropdown.Menu>\n}\n\nexport const CodeActionsList = namedObserver('CodeActionsList', RawCodeActionsList)\n","import {useStore} from '@react-form-builder/core'\nimport {Dropdown} from 'rsuite'\nimport {useTranslationPart} from '../../../../../localization/hooks'\nimport type {ActionsMenuProps} from '../types'\n\n/**\n * React form builder component that displays the list of common actions.\n * @param props the React component properties.\n * @param props.onSelect the callback function called when an action is selected.\n * @returns the React element.\n */\nexport const CommonActionsList = ({onSelect}: ActionsMenuProps) => {\n  const store = useStore()\n  const t = useTranslationPart('actions')\n\n  const items = Object.keys(store.commonActions).map(name =>\n    <Dropdown.Item key={name} children={name} onClick={() => onSelect({name, type: 'common'})}/>\n  )\n\n  return (\n    <Dropdown.Menu title={t('common')}>\n      {items}\n    </Dropdown.Menu>\n  )\n}\n","import {useStore} from '@react-form-builder/core'\nimport {Dropdown} from 'rsuite'\nimport {useTranslationPart} from '../../../../../localization/hooks'\nimport type {ActionsMenuProps} from '../types'\n\n/**\n * React form builder component that displays the list of custom actions.\n * @param props the React component properties.\n * @param props.onSelect the callback function called when an action is selected.\n * @returns the React element.\n */\nexport const CustomActionList = ({onSelect}: ActionsMenuProps) => {\n  const store = useStore()\n  const t = useTranslationPart('actions')\n\n  const actions = store.formViewerPropsStore.actions\n  if (!actions) return null\n\n  const items = Object.keys(actions).map(name =>\n    <Dropdown.Item key={name} children={name} onClick={() => onSelect({name, type: 'custom'})}/>\n  )\n\n  return (\n    <Dropdown.Menu title={t('custom')}>\n      {items}\n    </Dropdown.Menu>\n  )\n}\n","import type {ActionData} from '@react-form-builder/core'\nimport {ComponentStore, forwardRef, namedObserver} from '@react-form-builder/core'\nimport {Plus as PlusIcon} from '@rsuite/icons'\nimport {useCallback, useRef} from 'react'\nimport {Dropdown, IconButton, Popover, Whisper} from 'rsuite'\nimport type {OverlayTriggerHandle} from 'rsuite/esm/internals/Picker'\nimport {useTranslationPart} from '../../../../localization/hooks'\nimport type {AnnotationEditorProps} from '../../../AnnotationEditorProps'\nimport {CodeActionsList} from './components/CodeActionsList'\nimport {CommonActionsList} from './components/CommonActionsList'\nimport {CustomActionList} from './components/CustomActionList'\nimport type {ActionsMenuProps} from './types'\n\nconst RawAddActionButton = (props: AnnotationEditorProps) => {\n  const t = useTranslationPart('actions')\n  const {componentData, annotation} = props\n  const store = componentData.store\n  const eventName = annotation.key\n  const ref = useRef<OverlayTriggerHandle>(null)\n\n  const handleSelect = useCallback((action?: ActionData) => {\n    ref.current?.close()\n    if (!action) return\n    ComponentStore.addEventHandler(store, eventName, action)\n  }, [ref, store, eventName])\n\n  return <Whisper placement=\"leftStart\" ref={ref} trigger=\"click\"\n                  speaker={<MenuPopover onSelect={handleSelect} annotation={annotation}/>}>\n    <IconButton icon={<PlusIcon/>} size=\"sm\">{t('addAction')}</IconButton>\n  </Whisper>\n}\n\nexport const AddActionButton = namedObserver('AddActionButton', RawAddActionButton)\n\nconst MenuPopover = forwardRef(({onSelect, annotation, ...props}: ActionsMenuProps, ref: any) => (\n  <Popover ref={ref} {...props} full>\n    <Dropdown.Menu>\n      <CommonActionsList onSelect={onSelect} annotation={annotation}/>\n      <CodeActionsList onSelect={onSelect} annotation={annotation}/>\n      <CustomActionList onSelect={onSelect} annotation={annotation}/>\n    </Dropdown.Menu>\n  </Popover>\n))\n","import styled from '@emotion/styled'\nimport type {AnnotationEditorProps} from '../AnnotationEditorProps'\nimport {ActionList} from './components/ActionList'\nimport {AddActionButton} from './components/AddActionButton'\n\nconst SDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-bottom: 20px;\n`\n\nconst SH6 = styled.h6`\n  margin-left: 10px;\n`\n\n//EventEditor: one eventName - one editor - some actions\n/**\n * The property editor for the event property type.\n * @param props the Annotation editor component properties.\n * @returns the React element.\n */\nexport const EventEditor = (props: AnnotationEditorProps) => {\n  const eventName = props.annotation.key\n  return (\n    <SDiv>\n      <SH6>{eventName}</SH6>\n      <ActionList {...props}/>\n      <AddActionButton {...props}/>\n    </SDiv>\n  )\n}\n","import type {IconDefinition} from '@fortawesome/fontawesome-common-types'\nimport * as faCheck from '@fortawesome/free-solid-svg-icons/faCheck.js'\nimport {namedObserver, useStore} from '@react-form-builder/core'\nimport type {KeyboardEvent} from 'react'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {Input, InputGroup} from 'rsuite'\nimport {FaIcon} from '../components/Icons'\nimport LabeledProperty from '../components/LabeledProperty'\nimport {useTranslationPart} from '../localization/hooks'\nimport type {AnnotationEditorProps} from './AnnotationEditorProps'\nimport {Hinted} from './Hinted'\n\ninterface KeyInputProps extends AnnotationEditorProps {\n  id?: string\n}\n\n/**\n * The property editor for the key property type.\n * @param props the Annotation editor component properties.\n * @returns the React element.\n */\nconst RawKeyInput = (props: AnnotationEditorProps) => (\n  <LabeledProperty {...props}>\n    <KeyInputGroup {...props}/>\n  </LabeledProperty>\n)\n\nconst KeyInputGroup = (props: KeyInputProps) => {\n  const viewerStore = useStore()\n  const {id, value, onChange, showError} = props\n  const [canApply, setCanApply] = useState(false)\n  const [valueToApply, setValueToApply] = useState(value)\n  const getLabel = useTranslationPart('propertiesEditor')\n\n  useEffect(() => {\n    setValueToApply(value)\n    setCanApply(false)\n  }, [value])\n\n  const validateUniqueKey = useCallback((key: string) =>\n    0 === viewerStore.reduceScreen((acc: number, cd) => cd.key === key ? acc + 1 : acc, 0)\n    && key.length > 0, [viewerStore])\n\n  const inputOnChange = useCallback((inputValue: string) => {\n    const isValid = validateUniqueKey(inputValue)\n    let error = undefined\n\n    if (!isValid && inputValue !== value) {\n      const label = inputValue.length > 0 ? 'keyMustBeUnique' : 'keyMustNotBeEmpty'\n      error = getLabel(label)\n    }\n\n    showError?.(error)\n    setCanApply(isValid)\n    setValueToApply(inputValue)\n  }, [value, getLabel, showError, validateUniqueKey])\n\n  const buttonOnClick = useCallback(() => {\n    if (canApply) {\n      onChange(valueToApply)\n      setCanApply(false)\n    }\n  }, [canApply, onChange, valueToApply])\n\n  const handleKeyDown = useCallback((event: KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter' && canApply) {\n      buttonOnClick()\n    }\n  }, [canApply, buttonOnClick])\n\n  const applyKeyLabel = useMemo(() => getLabel('applyKey'), [getLabel])\n\n  return (\n    <InputGroup size={'xs'}>\n      <Input id={id} value={valueToApply} onChange={inputOnChange} onKeyDown={handleKeyDown}/>\n      <Hinted hint={applyKeyLabel}>\n        <InputGroup.Button disabled={!canApply} onClick={buttonOnClick}>\n          <FaIcon icon={faCheck as unknown as IconDefinition}\n                  color={canApply ? 'green' : undefined}/>\n        </InputGroup.Button>\n      </Hinted>\n    </InputGroup>\n  )\n}\n\nexport const KeyInput = namedObserver('KeyInput', RawKeyInput)\n","import styled from '@emotion/styled'\nimport type {PropertyAnnotation} from '@react-form-builder/core'\nimport {startCase} from 'lodash-es'\nimport {TagPicker} from 'rsuite'\nimport type {ItemDataType} from 'rsuite/esm/internals/types'\nimport LabeledProperty from '../components/LabeledProperty'\nimport type {AnnotationEditorProps} from './AnnotationEditorProps'\n\nconst prepareData = ({data}: PropertyAnnotation, values: string[]) => {\n  const preparedData = data.map(di => {\n    return {\n      value: di.value,\n      label: di.label\n    } as ItemDataType\n  })\n\n  values.forEach(v => {\n    if (!preparedData.find(d => d.value === v)) {\n      preparedData.push({value: v, label: startCase(v)})\n    }\n  })\n\n  return preparedData\n}\n\n/**\n * The property editor for property of type \"multiple select\", displays values as select.\n * @param props the Annotation editor component properties.\n * @returns the React element.\n */\nexport const MultiPicker = (props: AnnotationEditorProps) => {\n  const {value, onChange, annotation, onClean} = props\n  const data = prepareData(annotation as PropertyAnnotation, value)\n\n  return <LabeledProperty {...props}>\n    <STagPicker value={value ?? []} data={data} onChange={onChange} onClean={onClean}\n                cleanable creatable size={'xs'} placement={'auto'}/>\n  </LabeledProperty>\n}\n\nconst STagPicker = styled(TagPicker)`\n  width: 100%;\n`\n","import styled from '@emotion/styled'\nimport {Close} from '@rsuite/icons'\nimport {useCallback} from 'react'\nimport {InputNumber} from 'rsuite'\nimport LabeledProperty from '../components/LabeledProperty'\nimport type {AnnotationEditorProps} from './AnnotationEditorProps'\n\n/**\n * The property editor for the numeric property type.\n * @param props the Annotation editor component properties.\n * @returns the React element.\n */\nconst NumberInput = (props: AnnotationEditorProps) => {\n  const {value, onChange, onClean, annotation, componentData} = props\n  const handleChange = useCallback((value: any) => {\n    if (typeof value === 'string') {\n      value = Number(value)\n      value = isNaN(value) ? 0 : value\n    }\n    onChange(value)\n  }, [onChange])\n  const {calculateEditorProps, ...editorProps} = annotation.editorProps ?? {}\n  const inputNumberProps = {\n    ...(editorProps ?? {}),\n    ...(calculateEditorProps?.(componentData) ?? {}),\n    value\n  }\n  const closeButton = <Close onClick={onClean} style={{cursor: 'pointer'}}/>\n\n  return <LabeledProperty {...props}>\n    <SNumberInput {...inputNumberProps} onChange={handleChange} size={'xs'} postfix={closeButton}/>\n  </LabeledProperty>\n}\n\nconst SNumberInput = styled(InputNumber)`\n  .rs-input-group-addon {\n    padding: 1px 8px !important;\n  }\n`\n\nexport {NumberInput}\n","import {namedObserver} from '@react-form-builder/core'\nimport {Close, Code} from '@rsuite/icons'\nimport {isObject} from 'lodash-es'\nimport {useCallback, useMemo} from 'react'\nimport {Input, InputGroup} from 'rsuite'\nimport {useBuilderStore} from '../../utils/BuilderStoreContext'\nimport LabeledProperty from '../components/LabeledProperty'\nimport type {AnnotationEditorProps} from './AnnotationEditorProps'\n\nconst stringify = (value: any, space?: number) => {\n  try {\n    return JSON.stringify(value, null, space)\n  } catch (e) {\n    return\n  }\n}\n\nconst RawObjectInput = (props: AnnotationEditorProps) => {\n  const {value, onChange, onClean, annotation} = props\n  const builderStore = useBuilderStore()\n  const strVal = useMemo(() => {\n    return (isObject(value) ? stringify(value, 2) : value) ?? ''\n  }, [value])\n\n  const valuePreview = useMemo(() => {\n    return value ? stringify(value)?.substring(0, 50) ?? 'Error' : ''\n  }, [value])\n\n  const editJson = useCallback(() => {\n    const title = `${props.componentData.key}.${annotation.name}`\n    builderStore.editJsonCode(annotation.key, title, strVal, onChange)\n  }, [annotation.key, annotation.name, builderStore, onChange, props.componentData.key, strVal])\n\n  return <LabeledProperty {...props}>\n    <InputGroup inside size=\"xs\">\n      <Input value={valuePreview} onClick={editJson} readOnly color={'var(--rs-btn-ghost-text)'}/>\n      <InputGroup.Button onClick={value ? onClean : editJson}>\n        {value ? <Close/> : <Code/>}\n      </InputGroup.Button>\n    </InputGroup>\n  </LabeledProperty>\n}\n\n/**\n * Plain object editor.\n * @param props the Annotation editor component properties.\n * @returns the React element.\n */\nexport const ObjectInput = namedObserver('ObjectInput', RawObjectInput)\n","import styled from '@emotion/styled'\nimport type {PropertyAnnotation} from '@react-form-builder/core'\nimport {isUndefined} from 'lodash-es'\nimport {InputPicker} from 'rsuite'\nimport LabeledProperty from '../components/LabeledProperty'\nimport type {AnnotationEditorProps} from './AnnotationEditorProps'\n\nconst addCustomValue = ({data}: PropertyAnnotation, value: string) => {\n  if (isUndefined(value)) {\n    return data\n  }\n\n  if (!data.find(item => item.value === value || item.label === value)) {\n    data.push({value, label: value})\n  }\n\n  return data\n}\n\n/**\n * The property editor for property of type \"single select\", displays values as select.\n * @param props the Annotation editor component properties.\n * @returns the React element.\n */\nexport const Picker = (props: AnnotationEditorProps) => {\n  const {value, onChange, annotation, onClean} = props\n  const data = addCustomValue(annotation as PropertyAnnotation, value)\n\n  return <LabeledProperty {...props}>\n    <SInputPicker value={value ?? props.annotation.default ?? ''} data={data} onChange={onChange} onClean={onClean}\n                  block cleanable creatable size={'xs'} {...props.annotation.editorProps} placement={'autoVerticalEnd'}/>\n  </LabeledProperty>\n}\n\nconst SInputPicker = styled(InputPicker)`\n  width: 100%;\n`\n","import styled from '@emotion/styled'\nimport type {LabeledValue} from '@react-form-builder/core'\nimport {Radio, RadioGroup as RRadioGroup} from 'rsuite'\nimport type {RadioGroupProps} from 'rsuite/esm/RadioGroup/RadioGroup'\n\n/**\n * The properties of the React {@link RadioButtons} component.\n */\nexport interface RadioButtonsProps extends RadioGroupProps {\n  /**\n   * The radio group label.\n   */\n  label?: string\n  /**\n   * The radio group value.\n   */\n  value?: string\n  /**\n   * The callback function called when a value in a radio group changes.\n   * @param value the value.\n   */\n  onChange: (value: string | number) => void\n  /**\n   * The array of possible values.\n   */\n  items?: LabeledValue[]\n}\n\n/**\n * The React component that displays a group of radio buttons.\n * @param props the React component properties.\n * @param props.label the label for the group.\n * @param props.items the array with radio button data.\n * @param props.style the style of the component.\n * @param props.props the other properties of the component.\n * @returns the React element.\n */\nexport const RadioButtons = ({label, items, style, ...props}: RadioButtonsProps) => {\n  return (\n    <Container style={style}>\n      {!!label && <label>{label}</label>}\n      <RRadioGroup {...props as any} size={'xs'} inline appearance={'picker'}>\n        {items?.map(({value, label}, i) => (\n          <Radio value={value} key={i}>{label ?? value}</Radio>\n        ))\n        }\n      </RRadioGroup>\n    </Container>\n  )\n}\n\nconst Container = styled.div`\n  display: flex;\n  gap: 10px;\n  justify-content: space-between;\n  align-items: center;\n  flex: 1;\n\n  .rs-radio-group {\n    width: 100%;\n    justify-content: space-evenly;\n  }\n\n  .rs-radio-group-picker .rs-radio-inline {\n    padding: 0;\n  }\n\n  .rs-radio-checker {\n    min-height: 27px;\n    max-height: 27px;\n    margin: 0 7px !important;\n\n    label {\n      line-height: 14px !important;\n      padding: 4px 0 !important;\n    }\n  }\n`\n","import type {PropertyAnnotation} from '@react-form-builder/core'\nimport LabeledProperty from '../components/LabeledProperty'\nimport {RadioButtons} from '../components/RadioButtons'\nimport type {AnnotationEditorProps} from './AnnotationEditorProps'\n\n/**\n * The property editor for property type \"single select\", displays values as radio buttons.\n * @param props the Annotation editor component properties.\n * @returns the React element.\n */\nexport const RadioInput = (props: AnnotationEditorProps) => {\n  const {value, onChange, annotation} = props\n  return (\n    <LabeledProperty {...props}>\n      <RadioButtons items={(annotation as PropertyAnnotation).data} onChange={onChange} value={value}/>\n    </LabeledProperty>\n  )\n}\n","import {namedObserver} from '@react-form-builder/core'\nimport {useCallback} from 'react'\nimport {Input} from 'rsuite'\nimport type {LabeledPropertyProps} from '../components/LabeledProperty'\nimport LabeledProperty from '../components/LabeledProperty'\nimport type {AnnotationEditorProps, CalculableEditorProps} from './AnnotationEditorProps'\n\n/**\n * React form builder component to edit the 'Render when' component property.\n * @param props the Annotation editor component properties.\n * @returns the React element.\n */\nconst RawRenderWhenEditor = (props: AnnotationEditorProps) => {\n  const componentStore = props.componentData.store\n\n  const onChange = (value: string) => {\n    if (!componentStore.renderWhen) {\n      componentStore.renderWhen = {value}\n      return\n    }\n    componentStore.renderWhen.value = value\n  }\n\n  const getComputeCode = useCallback(() => componentStore.renderWhen?.fnSource ?? '', [componentStore])\n  const getComputeType = useCallback(() => componentStore.renderWhen?.computeType, [componentStore])\n  const hasComputeCode = useCallback<CalculableEditorProps['hasComputeCode']>(type => {\n    if (type === 'function') return !!getComputeCode()\n    return false\n  }, [getComputeCode])\n\n  const setComputeCode = useCallback((code: string) => {\n    componentStore.renderWhen ??= {}\n    componentStore.renderWhen.fnSource = code\n    componentStore.renderWhen.computeType = 'function'\n  }, [componentStore])\n\n  const disableCompute = useCallback(() => {\n    if (componentStore.renderWhen) componentStore.renderWhen.computeType = undefined\n  }, [componentStore])\n\n  const renderWhenProperties: LabeledPropertyProps = {\n    annotation: props.annotation,\n    componentData: props.componentData,\n    getComputeCode,\n    getComputeType,\n    setComputeCode,\n    disableCompute,\n    hasComputeCode,\n  }\n\n  return (\n    <LabeledProperty {...renderWhenProperties} >\n      <Input value={componentStore.renderWhen?.value ?? ''} onChange={onChange} size={'xs'}/>\n    </LabeledProperty>\n  )\n}\n\nexport const RenderWhenEditor = namedObserver('RenderWhenEditor', RawRenderWhenEditor)\n","import {cx} from '@emotion/css'\nimport styled from '@emotion/styled'\nimport {toLabeledValues} from '@react-form-builder/core'\nimport {Input, InputNumber, InputPicker} from 'rsuite'\nimport LabeledProperty from '../components/LabeledProperty'\nimport type {AnnotationEditorProps} from './AnnotationEditorProps'\n\ntype InputValue = string | number | null;\nexport const OtherUnit = 'other'\nexport const SizeUnits = ['px', '%', 'em', 'vw', 'vh']\nexport const SizeKeywords = ['max-content', 'min-content', 'fit-content', 'auto']\nconst options = toLabeledValues([...SizeUnits, ...SizeKeywords, OtherUnit], false)\n\n/**\n * The property editor for the CSS size property type.\n * @param props the Annotation editor component properties.\n * @returns the React element.\n */\nconst SizeInput = (props: AnnotationEditorProps) => {\n  const {value: CSSValue, onChange, onClean} = props\n  const {value, unit} = parseCSSValue(CSSValue)\n\n  const handleValueChange = (value: InputValue) => onChange(makeCSSValue(value, unit))\n  const handleUnitChange = (unit: string) => unit && onChange(makeCSSValue(value ?? 10, unit))\n\n  const input = unit === OtherUnit\n    ? <Input value={value} size={'xs'} onChange={handleValueChange}/>\n    : <InputNumber value={value} size={'xs'} onChange={handleValueChange}/>\n\n  return (\n    <LabeledProperty {...props}>\n      <Container>\n        {isNeedValue(unit) && input}\n        <SPicker\n          value={unit ?? ''}\n          onChange={handleUnitChange}\n          data={options}\n          className={cx({withValue: isNeedValue(unit)})}\n          creatable\n          placement={'bottomEnd'}\n          size={'xs'}\n          onClean={onClean}\n        />\n      </Container>\n    </LabeledProperty>\n  )\n}\n\nfunction parseCSSValue(cssValue?: string) {\n  if (!cssValue) return {}\n  if (SizeKeywords.includes(cssValue)) return {unit: cssValue}\n\n  //Parse '10.1%' to '10.1' and '%'\n  const match = cssValue.match(/^([+-]?(?:\\d+|\\d*\\.\\d+))([a-z]{2,4}|%)$/i)\n  if (!match) return {value: cssValue, unit: OtherUnit}\n\n  const value = parseFloat(match[1])\n  const unit = match[2]\n  return SizeUnits.includes(unit)\n    ? {value, unit}\n    : {value: `${value}${unit}`, unit: OtherUnit}\n}\n\nconst isNeedValue = (unit?: string) => typeof unit !== 'undefined' && !SizeKeywords.includes(unit)\n\nconst makeCSSValue = (value: InputValue, unit?: string) => {\n  const number = convertToNumberForNonOtherUnit(value, unit)\n  return `${isNeedValue(unit) ? number : ''}${unit === OtherUnit ? '' : unit}`\n}\n\n/**\n * Converts the measured value to a number if the value is not measured in 'other'.\n * @param value the measured value.\n * @param unit the unit of measure.\n * @returns the value converted to a number, or the original value if the unit is 'other'.\n * @internal\n */\nfunction convertToNumberForNonOtherUnit(value: InputValue, unit?: string) {\n  if (unit !== OtherUnit && typeof value === 'string') {\n    const match = value.match(/[+-]?\\d+(\\.\\d+)?/)\n    return parseFloat(match?.[0] ?? '10')\n  }\n  return value\n}\n\nconst Container = styled.div`\n  display: flex;\n  gap: 5px;\n  justify-content: space-between;\n  align-items: center;\n`\n\nconst SPicker = styled(InputPicker)`\n  width: auto;\n\n  &.withValue {\n    width: min-content;\n    min-width: 78px;\n  }\n`\n\nexport {SizeInput}\n","import styled from '@emotion/styled'\nimport {useEffect, useRef} from 'react'\nimport {Input} from 'rsuite'\nimport LabeledProperty from '../components/LabeledProperty'\nimport type {AnnotationEditorProps} from './AnnotationEditorProps'\n\n// The idea here is to have an offscreen element with exactly the same styles\n// which can autoresize natively and stretch target the element via aligning\n// inside the parent container.\n// Sync styles via DOM api can cause lags with a lot of elements on the page.\nconst STextareaSizer = styled.div`\n  display: inline-grid;\n  vertical-align: top;\n  align-items: center;\n  position: relative;\n  width: 100%;\n\n  &::after,\n  & > textarea {\n    min-width: 1em !important;\n    width: auto !important;\n    height: 100% !important;\n    grid-area: 2 / 1;\n    resize: none !important;\n    max-height: 6em !important;\n  }\n\n  &::after {\n    content: attr(data-contents) ' ';\n    visibility: hidden;\n    // text behaviour must match with textarea\n    font-size: inherit !important;\n    white-space: pre-wrap;\n    overflow-wrap: break-word;\n  }\n`\n\n/**\n * The property editor for the string property type.\n * @param props the Annotation editor component properties.\n * @returns the React element.\n */\nexport const StringInput = (props: AnnotationEditorProps) => {\n  const {value = '', annotation, onChange} = props\n  const inputRef = useRef<HTMLTextAreaElement>(null)\n  const containerRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    const container = containerRef.current\n    if (container) {\n      container.dataset.contents = value\n    }\n  }, [value])\n\n  useEffect(() => {\n    const input = inputRef.current\n    const container = containerRef.current\n    if (input && container) {\n      const style = window.getComputedStyle(input)\n      container.style.lineHeight = style.lineHeight\n      container.style.fontSize = style.fontSize\n    }\n  }, [])\n\n  return (\n    <LabeledProperty {...props} >\n      <STextareaSizer ref={containerRef}>\n        <Input ref={inputRef} rows={1} name={annotation.key} value={value} onChange={onChange} size=\"xs\" as=\"textarea\"\n               {...props.annotation.editorProps}/>\n      </STextareaSizer>\n    </LabeledProperty>\n  )\n}\n","import {timeFormat} from '@react-form-builder/core'\nimport {format as formatDate, parse} from 'date-fns'\nimport {useCallback, useMemo} from 'react'\nimport {DatePicker} from 'rsuite'\nimport LabeledProperty from '../components/LabeledProperty'\nimport type {AnnotationEditorProps} from './AnnotationEditorProps'\n\nconst parseTimeValue = (value: any, format: string) => {\n  if (typeof value === 'string') {\n    const parsedDate = parse(value, format, new Date())\n    if (!isNaN(parsedDate.getTime())) {\n      return parsedDate\n    }\n    console.error('Invalid time string:', value)\n    return null\n  }\n  return value\n}\n\n/**\n * The property editor for the time property type.\n * @param props the Annotation editor component properties.\n * @returns the React element.\n */\nexport const TimeInput = (props: AnnotationEditorProps) => {\n  const {onChange, onClean, value, annotation} = props\n  const editorProps = useMemo(() => annotation.editorProps ?? {}, [annotation])\n  const parsedValue = useMemo(() => parseTimeValue(value, timeFormat), [value])\n\n  const handleChange = useCallback((value: Date) => {\n    const formatted = value ? formatDate(value, timeFormat) : value\n    onChange?.(formatted)\n  }, [onChange])\n\n  return <LabeledProperty {...props}>\n    <DatePicker editable={false} cleanable={true} placement={'auto'}\n                value={parsedValue ?? null} onChange={handleChange} onClean={onClean} {...editorProps} format={timeFormat} size={'xs'}/>\n  </LabeledProperty>\n}\n","export const fluentLanguageId = 'fluent'\n","import {ActionEventArgsDeclaration, IFormDataDeclaration} from '@react-form-builder/core'\n\n/**\n * The additional source file to the language service.\n */\nexport type MonacoExtraLib = {\n\n  /**\n   * The file content.\n   */\n  content: string\n\n  /**\n   * The optional file path.\n   */\n  filePath?: string\n}\n\nexport const monacoJavascriptDefaults: MonacoExtraLib[] = [\n  {content: ActionEventArgsDeclaration, filePath: 'ActionEventArgs'},\n  {content: IFormDataDeclaration, filePath: 'Form'}\n]\n","import Editor, {loader} from '@monaco-editor/react'\nimport * as monaco from 'monaco-editor'\nimport {fluentLanguageId} from '../../localization/consts'\nimport {monacoJavascriptDefaults} from './monacoJavascriptDefaults'\n\nif (!import.meta.env.PROD) {\n  const toWorkerUrl = (label: string) => {\n    switch (label) {\n      case 'json':\n        return new URL('monaco-editor/esm/vs/language/json/json.worker.js', import.meta.url)\n      case 'css':\n      case 'scss':\n      case 'less':\n        return new URL('monaco-editor/esm/vs/language/css/css.worker.js', import.meta.url)\n      case 'html':\n      case 'handlebars':\n      case 'razor':\n        return new URL('monaco-editor/esm/vs/language/html/html.worker.js', import.meta.url)\n      case 'typescript':\n      case 'javascript':\n        return new URL('monaco-editor/esm/vs/language/typescript/ts.worker.js', import.meta.url)\n      default:\n        return new URL('monaco-editor/esm/vs/editor/editor.worker.js', import.meta.url)\n    }\n  }\n\n  self.MonacoEnvironment = {\n    getWorker: (_, label) => {\n      const workerUrl = toWorkerUrl(label)\n      return new Worker(workerUrl, {name: label, type: 'module'})\n    }\n  }\n\n  loader.config({monaco})\n  monaco.languages.typescript?.typescriptDefaults.setEagerModelSync(true)\n}\n\nloader.init().then(monaco => {\n  monacoJavascriptDefaults.forEach(({content, filePath}) => {\n    monaco?.languages.typescript?.javascriptDefaults.addExtraLib(content, filePath)\n  })\n  monaco?.languages.css?.scssDefaults.setOptions({lint: {emptyRules: 'ignore'}})\n  //fluent syntax reference https://projectfluent.org/fluent/guide/\n  //init fluent syntax highlight\n  const identifier = /[a-zA-Z-][a-zA-Z0-9_-]*/.source\n  const string = /([^{}\\s[\\]]+)/.source\n  //tab is two or four spaces\n  const tab = /\\s\\s|\\s\\s\\s\\s/.source\n  //two or four spaces\n  const nonTab = /\\s|\\s\\s\\s|\\s{5,}/.source\n  //several spaces\n  const spaces = /(\\s*)/.source\n  const requireNewline = /$/.source\n  //variable reference {$name} | { $name } https://projectfluent.org/fluent/guide/variables.html\n  const fluentVariable = `${spaces}({${spaces}[$])${string}${spaces}}`\n  //fluent function start { $name -> newline required https://projectfluent.org/fluent/guide/selectors.html\n  const fluentFunctionStart = `${spaces}({${spaces}[$])${string}${spaces}->${spaces}(${requireNewline})`\n  //plural category [one], *[other] https://projectfluent.org/fluent/guide/selectors.html\n  const pluralCategory = /\\*?\\[(zero|one|two|few|many|other)]/.source\n  //another category [some], *[none] etc https://projectfluent.org/fluent/guide/selectors.html\n  const category = `\\\\*?\\\\[${string}]`\n  //quoted text {\"some text\"}, attention this regexp contains groups https://projectfluent.org/fluent/guide/special.html\n  const quotedText = `(\\\\s*{\\\\s*\")(.*)(\"\\\\s*})`\n\n  monaco?.languages.register({id: fluentLanguageId})\n  monaco?.languages.setMonarchTokensProvider(fluentLanguageId, {\n    tokenizer: {\n      root: [\n        [`^-?${identifier}${spaces}=`, 'constant', '@value'],\n        [/.*/, 'invalid']\n      ],\n      value: [\n        //https://projectfluent.org/fluent/guide/variables.html\n        [fluentVariable, 'variable'],\n        //https://projectfluent.org/fluent/guide/selectors.html\n        [fluentFunctionStart, 'regexp', '@function'],\n        //https://projectfluent.org/fluent/guide/special.html\n        [quotedText, ['variable', 'string', 'variable']],\n        //new line string must be started with tab\n        //https://projectfluent.org/fluent/guide/multiline.html\n        [`^(${tab})${string}`, 'string'],\n        [`^(${nonTab})(.*)`, 'invalid'],\n        [`^${string}`, 'invalid'],\n        //first line string\n        [`${spaces}${string}`, 'string'],\n        [/.*/, 'invalid']\n      ],\n      function: [\n        //https://projectfluent.org/fluent/guide/variables.html\n        [fluentVariable, 'variable'],\n        //https://projectfluent.org/fluent/guide/selectors.html\n        [fluentFunctionStart, 'regexp', '@function'],\n        //https://projectfluent.org/fluent/guide/special.html\n        [quotedText, ['variable', 'string', 'variable']],\n        //https://projectfluent.org/fluent/guide/selectors.html\n        [`${spaces}${pluralCategory}`, 'regexp'],\n        [`${spaces}${category}`, 'regexp'],\n        [`${spaces}${string}`, 'string'],\n        [`${spaces}}`, 'regexp', '@pop'],\n        [/.*/, 'invalid']\n      ],\n    }\n  })\n  monaco.editor.defineTheme('vs-extended', vsExtendedTheme as any)\n})\n\nconst vsExtendedTheme = {\n  base: 'vs',\n  inherit: true,\n  rules: [\n    {\n      token: 'string.fluent',\n      foreground: '008000'\n    },\n    {\n      token: 'variable.fluent',\n      foreground: '1d087a'\n    },\n    {\n      token: 'regexp.fluent',\n      foreground: '1d087a'\n    },\n    {\n      token: 'constant.fluent',\n      foreground: '4978ad'\n    },\n  ],\n  colors: {\n    'editor.background': '#f7f7fa'\n  }\n}\n\nexport const MonacoCodeEditor = Editor\n","import type {OnMount} from '@monaco-editor/react'\nimport type {ConstrainedMonacoEditorModel, RangeRestrictionObject} from 'constrained-editor-plugin'\nimport {constrainedEditor} from 'constrained-editor-plugin'\nimport type {editor} from 'monaco-editor'\nimport {useCallback, useEffect, useMemo, useRef} from 'react'\nimport type {CodeEditorProps} from './CodeEditorProps'\nimport {MonacoCodeEditor} from './MonacoCodeEditor'\n\n/**\n * The React component that displays constrained code editor.\n * @param props the React component properties.\n * @returns the React element.\n */\nexport const ConstrainedCodeEditor = (props: CodeEditorProps) => {\n  const initialValue = useMemo(() => {\n    const prefix = props.beginContextLine ?? ''\n    const contentDelimiter = props.beginContextLine && props.canEditBeginContextLine ? '' : '\\n'\n    const postfix = props.endContextLine ? `\\n${props.endContextLine}` : ''\n    return prefix + contentDelimiter + props.initialValue + postfix\n  }, [props.beginContextLine, props.endContextLine, props.initialValue, props.canEditBeginContextLine])\n\n  const editorRef = useRef<editor.IStandaloneCodeEditor>(null)\n  const constrainedMonacoEditorModelRef = useRef<ConstrainedMonacoEditorModel>(null)\n\n  const getRestrictions = useCallback((model: editor.ITextModel): RangeRestrictionObject[] => {\n    const hasEndContextLine = !!props.endContextLine\n\n    const [beginContextLineEndLine, beginContextLineEndColumn] = getEndPosition(props.beginContextLine ?? '')\n    const [endContextLineEndLine] = getEndPosition(props.endContextLine ?? '')\n    const lastEditableLine = hasEndContextLine ? model.getLineCount() - (endContextLineEndLine - 1) : model.getLineCount()\n    const lastEditableColumn = hasEndContextLine ? 1 : model.getFullModelRange().endColumn\n\n    return [{\n      label: 'body',\n      allowMultiline: true,\n      range: [beginContextLineEndLine, beginContextLineEndColumn, lastEditableLine, lastEditableColumn],\n      validate: (current, _, {endLineOfRange, startLineOfRange}) => {\n        if (startLineOfRange) return current.startsWith('\\n') || props.canEditBeginContextLine\n        if (endLineOfRange) return current.endsWith('\\n') || !hasEndContextLine\n        return true\n      }\n    }]\n  }, [props.beginContextLine, props.canEditBeginContextLine, props.endContextLine])\n\n  useEffect(() => {\n    editorRef.current?.setValue(initialValue)\n    if (!constrainedMonacoEditorModelRef.current) return\n\n    const restrictions = getRestrictions(constrainedMonacoEditorModelRef.current)\n    constrainedMonacoEditorModelRef.current.updateRestrictions(restrictions)\n  }, [getRestrictions, initialValue])\n\n  const {onChange} = props\n  const handleMount: OnMount = useCallback((editor, monaco) => {\n    editorRef.current = editor\n\n    const model = editor.getModel()\n    if (!model) return\n\n    const constrainedInstance = constrainedEditor(monaco)\n    constrainedInstance.initializeIn(editor)\n    const restrictions = getRestrictions(model)\n    const constrainedModel = constrainedInstance.addRestrictionsTo(model, restrictions)\n\n    constrainedModel.onDidChangeContentInEditableRange(value => {\n      let editableCode = value.body\n      if (!editableCode) return\n\n      if (!!props.beginContextLine && editableCode.startsWith('\\n')) {\n        editableCode = editableCode.substring(1)\n      }\n      if (!!props.endContextLine && editableCode.endsWith('\\n')) {\n        editableCode = editableCode.substring(0, editableCode.length - 1)\n      }\n      onChange(editableCode)\n    })\n    constrainedMonacoEditorModelRef.current = constrainedModel\n  }, [props.beginContextLine, props.endContextLine, getRestrictions, onChange])\n\n  return <MonacoCodeEditor\n    onMount={handleMount}\n    className={props.className}\n    defaultValue={initialValue}\n    height={props.height ?? '100%'}\n    width={props.width ?? '100%'}\n    language={props.language ?? 'javascript'}\n    options={{\n      wordWrap: 'on',\n      ...props.options\n    }}\n    theme={props.theme}\n  />\n}\n\nfunction getEndPosition(str: string) {\n  const lines = str.split('\\n')\n  const lastLineLength = lines.at(-1)?.length ?? 0\n  return [lines.length, lastLineLength + 1] as const\n}\n","import type {OnMount} from '@monaco-editor/react'\nimport type {editor} from 'monaco-editor'\nimport {useEffect, useRef} from 'react'\nimport type {UnconstrainedCodeEditorProps} from './CodeEditorProps'\nimport {MonacoCodeEditor} from './MonacoCodeEditor'\n\n/**\n * The React component that displays monaco code editor.\n * @param props the React component properties.\n * @returns the React element.\n */\nexport const UnconstrainedCodeEditor = (props: UnconstrainedCodeEditorProps) => {\n  const editorRef = useRef<editor.IStandaloneCodeEditor>(null)\n\n  useEffect(() => {\n    editorRef.current?.setValue(props.initialValue)\n  }, [props.initialValue])\n\n  const handleMount: OnMount = editor => {\n    editor.onDidChangeModelContent(() => props.onChange(editor.getValue()))\n    editorRef.current = editor\n  }\n\n  return <MonacoCodeEditor\n    onMount={handleMount}\n    className={props.className}\n    defaultValue={props.initialValue}\n    height={props.height ?? '100%'}\n    width={props.width ?? '100%'}\n    language={props.language ?? 'javascript'}\n    options={{\n      wordWrap: 'on',\n      ...props.options\n    }}\n    theme={props.theme}\n  />\n}\n","import type {WrapperProps} from '@react-form-builder/core'\nimport {namedObserver} from '@react-form-builder/core'\nimport {useBuilderStore} from '../../../utils/BuilderStoreContext'\nimport type {CodeEditorProps} from './CodeEditorProps'\nimport {ConstrainedCodeEditor} from './ConstrainedCodeEditor'\nimport {UnconstrainedCodeEditor} from './UnconstrainedCodeEditor'\n\nconst LtrDiv = ({children}: WrapperProps) => {\n  return <div dir=\"ltr\" style={{width: '100%', height: '100%', minHeight: 0}}>{children}</div>\n}\n\nconst RawCodeEditor = (props: CodeEditorProps) => {\n  const builderStore = useBuilderStore()\n  const themeFromBuilder = builderStore.theme === 'light' ? 'vs-extended' : 'vs-dark'\n  const theme = props.theme ?? themeFromBuilder\n\n  const codeEditorProps = {...props, theme}\n  let editor = <ConstrainedCodeEditor {...codeEditorProps}/>\n\n  if (!props.beginContextLine && !props.endContextLine) {\n    const unconstrainedProps = {...codeEditorProps}\n    // remove unnecessary properties\n    delete unconstrainedProps.beginContextLine\n    delete unconstrainedProps.endContextLine\n    delete unconstrainedProps.canEditBeginContextLine\n    editor = <UnconstrainedCodeEditor {...unconstrainedProps}/>\n  }\n\n  return <LtrDiv>{editor}</LtrDiv>\n}\n\nexport const CodeEditor = namedObserver('CodeEditor', RawCodeEditor)\n","import styled from '@emotion/styled'\nimport type {CssPart} from '@react-form-builder/core'\nimport {namedObserver, useComponentData} from '@react-form-builder/core'\nimport {useEffect, useMemo, useState} from 'react'\nimport type {Device} from '../../utils/types'\nimport {CodeEditor} from '../components/CodeEditor/CodeEditor'\nimport {Rows} from '../components/Containers'\nimport type {RadioButtonsProps} from '../components/RadioButtons'\nimport {RadioButtons} from '../components/RadioButtons'\nimport {useTranslationPart} from '../localization/hooks'\n\n/**\n * CSSEditor React component properties.\n */\nexport interface CSSEditorProps {\n  /**\n   * Display resolution type.\n   */\n  device: Device\n  /**\n   * Flag, true if you need use wrapper styles tab, false otherwise.\n   */\n  useWrapperStyles?: boolean\n  /**\n   * The tab which is selected by default.\n   */\n  defaultActiveTab?: CssPart\n}\n\ntype Item = { value: CssPart, label: string }\n\nconst RawCSSEditor = ({device, useWrapperStyles, defaultActiveTab}: CSSEditorProps) => {\n  const {store} = useComponentData()\n  const t = useTranslationPart('style')\n  const [activeTab, setActiveTab] = useState<CssPart>(defaultActiveTab ?? 'css')\n  useEffect(() => {\n    setActiveTab(defaultActiveTab ?? 'css')\n  }, [defaultActiveTab])\n  const initialValue = useMemo(() => {\n    return store[activeTab]?.[device]?.string ?? ''\n  }, [store, device, activeTab])\n  const onChange = (value: any) => {\n    store[activeTab] ??= {}\n    store[activeTab]![device] ??= {}\n    store[activeTab]![device]!.string = value\n  }\n  const handleSelect: RadioButtonsProps['onChange'] = value => setActiveTab(value as CssPart)\n\n  const items: Item[] = [\n    {value: 'css', label: t('component')},\n    {value: 'wrapperCss', label: t('wrapper')}\n  ]\n\n  return (\n    <Rows>\n      {useWrapperStyles && <RadioButtons value={activeTab} onChange={handleSelect} items={items}/>}\n      <SCodeEditor\n        key={`${store.key}${activeTab}${device}`}\n        language=\"scss\"\n        beginContextLine={'element.style {'}\n        endContextLine=\"}\"\n        initialValue={initialValue}\n        onChange={onChange}\n        height={'20vh'}\n        options={{\n          contextmenu: false,\n          lineNumbers: 'off',\n          minimap: {enabled: false},\n          glyphMargin: false,\n          folding: false,\n          lineDecorationsWidth: 0,\n          lineNumbersMinChars: 0,\n          autoIndent: 'full'\n        }}\n      />\n    </Rows>\n  )\n}\n\nexport const CSSEditor = namedObserver('CSSEditor', RawCSSEditor)\n\nconst SCodeEditor = styled(CodeEditor)`\n  .suggest-widget {\n    width: 100% !important;\n    left: 0 !important;\n    overflow: hidden;\n  }\n`\n","import styled from '@emotion/styled'\n\nexport const CenteredLabel = styled.label`\n  display: flex;\n  flex: 1;\n  height: 100%;\n  text-align: center;\n  align-items: center;\n  justify-content: center;\n`\n","import type {Annotation, ResolvedValidator, Store} from '@react-form-builder/core'\nimport {isPromise} from '@react-form-builder/core'\nimport {isEmpty} from 'lodash-es'\n\n/**\n * Creates a validator for the specified metadata properties of the component.\n * @param data the function parameters.\n * @param data.annotation the component property metadata.\n * @param data.store the form viewer settings.\n * @returns the validation function.\n */\nexport const annotationResolver = ({annotation, store}: { annotation: Annotation, store: Store }): ResolvedValidator => {\n  const checkRequired = (value: any) => {\n    if (annotation.required) {\n      if (typeof value === 'number') return\n      if (!isEmpty(value)) return\n      return [{\n        settings: {key: 'required_property'},\n        message: 'This property is required!',\n        annotation: annotation\n      }]\n    }\n  }\n\n  const checkValidator = async (value: any) => {\n    const result = annotation.validator?.(value, store)\n    const success = isPromise(result) ? await result : result\n    if (success === false) {\n      return [{\n        settings: {key: 'property_validator'},\n        message: annotation.errorMap?.message,\n        annotation: annotation\n      }]\n    }\n  }\n\n  return async value => checkRequired(value) ?? await checkValidator(value)\n}\n","import type {ErrorMessageLocalizer, IStore, SchemaResolver, Setter} from '@react-form-builder/core'\nimport {DataValidator} from '@react-form-builder/core'\nimport {useEffect, useMemo} from 'react'\n\n/**\n * Creates a DataValidator, recreates the DataValidator if necessary.\n * Correctly disposes the DataValidator if the React component has been unmounted.\n * @param store the form viewer settings\n * @param resolver the validation function factory.\n * @param args the validation function factory arguments.\n * @param setter the callback function called to set a validation error.\n * @param localizer the function that localizes validation error messages.\n * @returns the DataValidator instance.\n */\nexport function useDataValidator<T>(store: IStore, resolver: SchemaResolver<T>, args: T,\n                                    setter: Setter<string | undefined>, localizer?: ErrorMessageLocalizer) {\n  const dataValidator = useMemo(() => DataValidator.create(store, resolver, args, setter, localizer),\n    [store, resolver, args, setter, localizer])\n\n  useEffect(() => () => dataValidator.dispose(), [dataValidator])\n\n  return dataValidator\n}\n","import styled from '@emotion/styled'\nimport type {ErrorWrapperProps, WrapperProps} from '@react-form-builder/core'\nimport {namedObserver} from '@react-form-builder/core'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {useBuilderStore} from '../../../utils/BuilderStoreContext'\nimport type {AnnotationEditorProps} from '../../annotation-editors/AnnotationEditorProps'\nimport {annotationResolver} from '../../validation'\nimport {useDataValidator} from './useDataValidator'\n\n/**\n * Represents a set of erroneous component properties.\n */\nexport interface ErroneousProps extends WrapperProps, AnnotationEditorProps {\n  /**\n   * The error message.\n   */\n  error?: string\n}\n\n/**\n * React form builder component that displays error for the component property editor.\n * @param props the React component properties.\n * @returns the React element.\n */\nconst RawErroneous = (props: ErroneousProps) => {\n  const {annotation, value, children} = props\n  const builderStore = useBuilderStore()\n  const [error, setError] = useState<string>()\n  const [mounted, setMounted] = useState(true)\n  const dataValidatorArgs = useMemo(() => ({annotation, store: builderStore.viewer}),\n    [annotation, builderStore.viewer])\n\n  const schema = useDataValidator(\n    builderStore.viewer,\n    annotationResolver,\n    dataValidatorArgs,\n    setError)\n\n  const updateErrorMessage = useCallback(async (value: any, propsError: string | undefined) => {\n    if (!mounted) return\n    if (propsError) return setError(propsError)\n    setError(undefined)\n    const validationResult = await schema.validate(value)\n    if (validationResult && mounted) setError(validationResult)\n  }, [mounted, schema])\n\n  useEffect(() => {\n    setMounted(true)\n    return () => setMounted(false)\n  }, [])\n\n  useEffect(() => {\n    updateErrorMessage(value, props.error).catch(console.error)\n  }, [value, props.error, updateErrorMessage])\n\n  return (\n    <PropertyErrorMessage error={error}>\n      {children}\n    </PropertyErrorMessage>\n  )\n}\n\nexport const Erroneous = namedObserver('Erroneous', RawErroneous)\n\nconst SDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`\n\nconst ErrorMessage = styled.p`\n  font-size: 12px;\n  color: var(--red-600);\n  margin-top: 0.25rem;\n\n  &:before {\n    content: \"❌ \";\n    font-size: 10px;\n    padding: 6px;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    color: var(--red-300);\n  }\n`\n\nconst PropertyErrorMessage = ({children, error}: ErrorWrapperProps) => (\n  <SDiv>\n    {children}\n    {error && <ErrorMessage children={error}/>}\n  </SDiv>\n)\n","import type {Annotation, ComponentProperty, PropertyBlockType} from '@react-form-builder/core'\nimport {isProperty, isValidatorPropertyBlockType, namedObserver, useComponentData} from '@react-form-builder/core'\nimport {createElement, useCallback, useEffect, useMemo, useState} from 'react'\nimport {useBuilderStore} from '../../../utils/BuilderStoreContext'\nimport type {AnnotationEditorProps, CalculableEditorProps} from '../../annotation-editors/AnnotationEditorProps'\nimport {Erroneous} from './Erroneous'\n\ninterface PropertyEditorWrapperProps {\n  annotation: Annotation\n  context: Record<string, any>\n  initContext?: () => Record<string, any>\n  propertyBlockType?: PropertyBlockType\n}\n\nconst RawPropertyEditorWrapper = ({\n                                    annotation,\n                                    context,\n                                    initContext,\n                                    propertyBlockType = 'component'\n                                  }: PropertyEditorWrapperProps) => {\n  const store = useBuilderStore()\n  const componentData = useComponentData()\n  const annotationEditor = useMemo(() => store.getPropertyEditor(annotation.editor), [annotation, store])\n\n  const [contextInitialized, setContextInitialized] = useState(false)\n  const [error, setError] = useState<string>()\n\n  const value = (isProperty(annotation) ? context[annotation.key]?.value : context[annotation.key]) ?? annotation.default\n\n  const onChange = useCallback((value: any) => {\n    let propertyContext = context\n    if (!contextInitialized) {\n      setContextInitialized(true)\n      propertyContext = initContext?.() ?? context\n    }\n    if (isProperty(annotation)) {\n      propertyContext[annotation.key] ??= {}\n      propertyContext[annotation.key].value = value\n      return\n    }\n    propertyContext[annotation.key] = value\n  }, [context, initContext, annotation, contextInitialized])\n\n  const onClean = useCallback(() => delete context[annotation.key], [context, annotation])\n\n  const setComputedFunction = useCallback((value: string) => {\n    const newComponentProperty: ComponentProperty = {computeType: 'function', fnSource: value}\n    context[annotation.key] = Object.assign(context[annotation.key] ?? {}, newComponentProperty)\n  }, [context, annotation])\n\n  const setComputedLocalization = useCallback((value: string, langCode?: string) => {\n    if (!langCode) return\n    store.viewer.form.localization.setLocalization(langCode, componentData.key, annotation.key, propertyBlockType, value)\n    if (isValidatorPropertyBlockType(propertyBlockType)) return\n    const newComponentProperty: ComponentProperty = {computeType: 'localization'}\n    context[annotation.key] = Object.assign(context[annotation.key] ?? {}, newComponentProperty)\n  }, [context, annotation, store, componentData, propertyBlockType])\n\n  const setComputeCode = useCallback<CalculableEditorProps['setComputeCode']>((value, type, params) => {\n    switch (type) {\n      case 'function':\n        return setComputedFunction(value)\n      case 'localization':\n        return setComputedLocalization(value, params?.langCode)\n    }\n  }, [setComputedFunction, setComputedLocalization])\n\n  const getComputedFunction = useCallback(() => {\n    return context[annotation.key]?.fnSource\n  }, [context, annotation])\n\n  const getComputedLocalization = useCallback((langCode: string) => {\n    const localization = store.viewer.form.localization\n      .getLocalization(langCode, componentData.key, annotation.key, propertyBlockType)\n    const defaultLocalization = store.viewer.form.localization\n      .getLocalization(store.defaultLanguage.fullCode, componentData.key, annotation.key, propertyBlockType)\n    return localization ?? defaultLocalization ?? ''\n  }, [store, componentData, annotation, propertyBlockType])\n\n  const getComputeCode = useCallback<CalculableEditorProps['getComputeCode']>((type, params) => {\n    switch (type) {\n      case 'function':\n        return getComputedFunction()\n      case 'localization':\n        return params?.langCode ? getComputedLocalization(params?.langCode) : ''\n    }\n  }, [getComputedFunction, getComputedLocalization])\n\n  const disableCompute = useCallback(() => {\n    if (isValidatorPropertyBlockType(propertyBlockType)) {\n      store.viewer.form.localization.removeLocalizationForType(componentData.key, propertyBlockType)\n      return\n    }\n    const newComponentProperty: ComponentProperty = {computeType: undefined}\n    context[annotation.key] = Object.assign(context[annotation.key] ?? {}, newComponentProperty)\n  }, [propertyBlockType, context, annotation.key, store.viewer.form.localization, componentData.key])\n\n  const hasLocalization = useCallback(() => {\n    return store.viewer.form.localization\n      .hasLocalization(componentData.key, annotation.key, propertyBlockType)\n  }, [store, componentData, annotation, propertyBlockType])\n\n  const getComputeType = useCallback(() => {\n    if (isValidatorPropertyBlockType(propertyBlockType) && hasLocalization()) return 'localization'\n    const componentProperty = context[annotation.key]\n    return componentProperty?.computeType\n  }, [propertyBlockType, hasLocalization, context, annotation.key])\n\n  const hasComputeCode = useCallback<CalculableEditorProps['hasComputeCode']>(type => {\n    if (type === 'function') return !!getComputeCode('function')\n    return hasLocalization()\n  }, [getComputeCode, hasLocalization])\n\n  const annotationEditorProps: AnnotationEditorProps = {\n    value,\n    onChange,\n    onClean,\n    annotation,\n    showError: setError,\n    componentData,\n    setComputeCode,\n    getComputeCode,\n    disableCompute,\n    getComputeType,\n    hasComputeCode,\n  }\n\n  useEffect(() => {\n    setContextInitialized(false)\n  }, [componentData, initContext])\n\n  useEffect(() => {\n    setError(undefined)\n  }, [context])\n\n  return !!annotationEditor && (\n    <Erroneous {...annotationEditorProps} error={error}>\n      {createElement(annotationEditor, annotationEditorProps)}\n    </Erroneous>\n  )\n}\n\nexport const PropertyEditorWrapper = namedObserver('PropertyEditorWrapper', RawPropertyEditorWrapper)\n","/**\n * Component property editor section.\n */\nexport enum Section {\n  Main = 'main',\n  Style = 'style',\n  Actions = 'actions',\n  Rules = 'rules',\n}\n\n/**\n * Component property editor subsection.\n */\nexport enum SubSection {\n  Additional = 'additional',\n  Tooltip = 'tooltip'\n}\n","import styled from '@emotion/styled'\nimport type {Device} from '../../../../../utils/types'\nimport {useTranslationPart} from '../../../../localization/hooks'\nimport {FixedSelectPicker} from '../../../FixedSelectPicker'\n\n/**\n * React component that select device for component styles editors.\n * @param props the React component properties.\n * @param props.value the value picker.\n * @param props.onChange onChange event of the picker.\n * @returns the React element.\n */\nexport const DevicePicker = ({value, onChange}: { value: Device, onChange: (value: Device) => void }) => {\n  const t = useTranslationPart('style')\n  const devices: Device[] = ['any', 'desktop', 'mobile', 'tablet']\n  const translatedItems = devices.map(value => ({value, label: t(value)}))\n\n  return (\n    <SHeader>\n      {t('forDevice')}\n      <SPicker value={value} data={translatedItems} onChange={val => onChange(val as Device)} appearance={'subtle'} size={'xs'}\n               searchable={false} cleanable={false} width={100}/>\n    </SHeader>\n  )\n}\n\nconst SHeader = styled.h6`\n  margin-bottom: 5px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-left: 28px;\n  gap: 10px;\n`\n\nconst SPicker = styled(FixedSelectPicker)`\n  margin-inline-end: 4px;\n\n  .rs-picker-toggle-value {\n    font-size: 15px;\n  }\n`\n","import styled from '@emotion/styled'\nimport type {Annotation, ComponentStore, CssPart, Meta, PropertyBlockType} from '@react-form-builder/core'\nimport {className, ComponentDataProvider, key, namedObserver, useTooltipType} from '@react-form-builder/core'\nimport {useCallback, useState} from 'react'\nimport {useBuilderStore} from '../../../../../utils/BuilderStoreContext'\nimport type {Device} from '../../../../../utils/types'\nimport {CSSEditor} from '../../../../annotation-editors/CSSEditor'\nimport {Hinted} from '../../../../annotation-editors/Hinted'\nimport {CenteredLabel} from '../../../../components/Labels'\nimport {PropertyEditorWrapper} from '../../../../components/PropertyEditorWrapper'\nimport {customizableObserver} from '../../../../customization'\nimport {useTranslationPart} from '../../../../localization/hooks'\nimport {Section, SubSection} from '../Section'\nimport {DevicePicker} from './DevicePicker'\n\nconst SectionMap: Record<string, Section> = {\n  validation: Section.Rules,\n  event: Section.Actions,\n}\n\nconst SubSectionMap: Record<string, SubSection> = {\n  htmlAttributes: SubSection.Additional,\n  tooltipProps: SubSection.Tooltip,\n  useTooltip: SubSection.Tooltip,\n  renderWhen: SubSection.Additional,\n}\n\nconst bySection = (section: string) => (annotation: Annotation) => (SectionMap[annotation.editor] ?? Section.Main) === section\n\nconst bySubSection = (section?: string) => (annotation: Annotation) => SubSectionMap[annotation.editor] === section\n\ninterface PropertiesProps {\n  activeTab: Section\n}\n\nconst RawProperties = ({activeTab, ...props}: PropertiesProps) => {\n  const store = useBuilderStore()\n  const tooltipType = useTooltipType()\n  const getLabel = useTranslationPart('propertiesEditor')\n  const data = store.oneSelectedComponentData\n\n  if (!data) {\n    return (\n      <Container>\n        <CenteredLabel style={{height: '40%'}}>{getLabel('selectElementForEdit')}</CenteredLabel>\n      </Container>\n    )\n  }\n\n  const meta = store.getComponentMetadata(data.store.type)\n\n  const current = meta.properties.concat(meta.modules).filter(bySection(activeTab))\n  const properties = current.filter(bySubSection())\n  const additionalProperties = current.filter(bySubSection(SubSection.Additional))\n  const tooltipProps = current.filter(bySubSection(SubSection.Tooltip))\n  const showTooltipProps = meta.kind === 'component' && !!tooltipProps?.length && !!tooltipType\n  const notSlot = meta.kind !== 'slot'\n\n  return (\n    <ComponentDataProvider value={data}>\n      <Container  {...props}>\n        <PropertiesList>\n          {activeTab === Section.Main && <PropertyEditorWrapper annotation={key} context={data.store}/>}\n          {notSlot && <PropertyBlock annotations={properties} context={data.store.props}/>}\n          {activeTab === Section.Style && notSlot &&\n            <Styles meta={meta} store={data.store}/>\n          }\n        </PropertiesList>\n\n        {showTooltipProps && notSlot &&\n          <PropertyBlock annotations={tooltipProps} context={data.store.props}/>\n        }\n\n        {!!additionalProperties?.length && notSlot &&\n          <PropertyBlock annotations={additionalProperties} context={data.store.props}\n                         header={getLabel('subSection.additionalProperties')}/>\n        }\n      </Container>\n    </ComponentDataProvider>\n  )\n}\n\nconst Properties = customizableObserver('RightPanel_Content', RawProperties)\n\nconst RawStyles = ({meta, store}: { meta: Meta, store: ComponentStore }) => {\n  const t = useTranslationPart('style')\n  const [device, setDevice] = useState<Device>('any')\n  const isComponent = meta.kind === 'component'\n  const isTemplate = meta.kind === 'template'\n  const classNameEditor = <PropertyEditorWrapper annotation={className} context={store.props}/>\n\n  return <>\n    <DevicePicker value={device} onChange={setDevice}/>\n    {!isTemplate &&\n      <StyleBlock meta={meta} store={store} device={device} cssPart={'css'} header={t('component')} headerHint={t('componentHint')}/>\n    }\n    {isComponent && classNameEditor}\n    <StyleBlock meta={meta} store={store} device={device} cssPart={'wrapperCss'} header={t('wrapper')} headerHint={t('wrapperHint')}/>\n    {!isComponent && classNameEditor}\n    <CSSEditor device={device} useWrapperStyles={isComponent} defaultActiveTab={isTemplate ? 'wrapperCss' : 'css'}/>\n  </>\n}\n\nconst Styles = namedObserver('Styles', RawStyles)\n\ninterface StyleBlockProps {\n  meta: Meta\n  store: ComponentStore\n  device: Device\n  cssPart: CssPart\n  header: string\n  headerHint: string\n}\n\nconst RawStyleBlock = ({meta, store, device, cssPart, header, headerHint}: StyleBlockProps) => {\n  const initContext = useCssContextInitializer(cssPart, store, device)\n  const context = store[cssPart]?.[device]?.object ?? {}\n  const isComponent = meta.kind === 'component' || meta.kind === 'repeater'\n\n  return (\n    <PropertyBlock header={isComponent ? header : undefined}\n                   headerHint={isComponent ? headerHint : undefined}\n                   annotations={meta[cssPart]} context={context} initContext={initContext}/>\n  )\n}\n\nconst StyleBlock = namedObserver('StyleBlock', RawStyleBlock)\n\nconst useCssContextInitializer = (fieldKey: CssPart, store: ComponentStore, device: Device) =>\n  useCallback(() => {\n    store[fieldKey] ??= {}\n    store[fieldKey]![device] ??= {}\n    store[fieldKey]![device]!.object ??= {}\n    return store[fieldKey]![device]!.object ?? {}\n  }, [fieldKey, store, device])\n\n/**\n * Represents the properties of PropertyBlock component.\n */\nexport interface PropertyBlockProps {\n  /**\n   * The array of metadata properties of a React component.\n   */\n  annotations: Annotation[],\n  /**\n   * The context containing the property data.\n   */\n  context?: object,\n  /**\n   * The function for creating an editing context, used if no context is specified.\n   */\n  initContext?: () => Record<string, any>,\n  /**\n   * The title of the component's property block.\n   */\n  header?: string,\n  /**\n   * The hint for header.\n   */\n  headerHint?: string,\n  /**\n   * The property block type.\n   */\n  propertyBlockType?: PropertyBlockType\n}\n\n/**\n * React form builder component that displays the properties of the component.\n * @param props the React component properties.\n * @param props.annotations the array of form builder component metadata.\n * @param props.context the properties of the form builder component.\n * @param props.initContext the function initializes the context for the first change.\n * @param props.header the property block title.\n * @param props.headerHint the hint for the property block title.\n * @param props.propertyBlockType the type of the property block.\n * @returns the React element.\n */\nexport const PropertyBlock = ({\n                                annotations,\n                                context,\n                                initContext,\n                                header,\n                                headerHint,\n                                propertyBlockType = 'component'\n                              }: PropertyBlockProps) => {\n  if (!context) return null\n\n  return <>\n    {!!header && <Hinted hint={headerHint}><h6>{header}</h6></Hinted>}\n    {annotations.map(annotation => <PropertyEditorWrapper\n      key={annotation.key}\n      propertyBlockType={propertyBlockType}\n      annotation={annotation}\n      context={context}\n      initContext={initContext}/>)}\n  </>\n}\n\nconst PropertiesList = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  gap: 10px;\n`\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  overflow-y: auto;\n  padding-right: 5px;\n  justify-content: space-between;\n\n  & > * {\n    margin-bottom: 5px;\n  }\n`\n\nexport {Properties}\n","import {namedObserver, useTooltipType} from '@react-form-builder/core'\nimport {useCallback} from 'react'\nimport {useBuilderStore} from '../../utils/BuilderStoreContext'\nimport {useUniqueId} from '../../utils/useUniqueId'\nimport {LabeledInput} from '../components/Containers'\nimport {useTranslationPart} from '../localization/hooks'\nimport {PropertyBlock} from '../ui/RightPanel/PropertiesEditor/components/Properties'\nimport {SCheckbox} from './BooleanInput'\nimport {HintedLabel} from './Hinted'\n\n/**\n * React form builder component that displays the tooltip property editor .\n * @returns the React element.\n */\nconst RawTooltipPropertiesEditor = () => {\n  const t = useTranslationPart('annotation.tooltipProps')\n  const id = useUniqueId('tooltip-')\n  const store = useBuilderStore()\n  const selectedComponentStore = store.oneSelected?.store\n  const tooltipProps = selectedComponentStore?.tooltipProps\n  const hasTooltipProps = !!tooltipProps\n  const selectedTooltipType = useTooltipType()\n  const tooltipAnnotations = selectedTooltipType ? store.view.getTooltipAnnotations(selectedTooltipType) : null\n\n  const handleToggle = useCallback((_: unknown, checked: boolean) => {\n    if (selectedComponentStore) {\n      selectedComponentStore.tooltipProps = checked ? {} : undefined\n    }\n  }, [selectedComponentStore])\n\n  if (!selectedTooltipType || !tooltipAnnotations) return null\n\n  return <>\n    <LabeledInput>\n      <HintedLabel hint={<>{t('hint')}</>} htmlFor={id}>\n        <h6>{t('tooltip')}</h6>\n      </HintedLabel>\n      <SCheckbox checked={hasTooltipProps} onChange={handleToggle} id={id}></SCheckbox>\n    </LabeledInput>\n    {hasTooltipProps &&\n      <PropertyBlock propertyBlockType={'tooltip'} annotations={tooltipAnnotations} context={tooltipProps}/>\n    }\n  </>\n}\n\nexport const TooltipPropertiesEditor = namedObserver('TooltipPropertiesEditor', RawTooltipPropertiesEditor)\n","import type {SchemaType, ValidatorType} from '@react-form-builder/core'\nimport {namedObserver, useComponentData, useStore} from '@react-form-builder/core'\nimport {useTranslation} from 'react-i18next'\nimport {Button, Dropdown} from 'rsuite'\nimport type {DropdownProps} from 'rsuite/esm/Dropdown/Dropdown'\nimport {useBuilderStore} from '../../../../utils/BuilderStoreContext'\n\nconst RawRulesList = ({type}: { type: SchemaType }) => {\n  const {store} = useComponentData()\n  const {t} = useTranslation()\n  const viewerStore = useStore()\n\n  const validationRules = viewerStore.getValidationRules(type)\n  const onSelect = (key: string, type: ValidatorType) => {\n    store.schema ??= {validations: []}\n    // don't keep the default 'internal' type for JSON\n    const validationRecord = type === 'internal' ? {key} : {key, type}\n    store.schema.validations?.push(validationRecord)\n  }\n  const isNotApplied = (key: string, validatorType: ValidatorType) => {\n    return !store.schema?.validations?.find(ruleSettings => {\n      const sameType = validatorType === 'internal' && !ruleSettings.type || ruleSettings.type === validatorType\n      return ruleSettings.key === key && sameType\n    })\n  }\n  const toDropdownItem = (key: string, type: ValidatorType, name: string) => {\n    return <Dropdown.Item key={key} children={name} eventKey={key} onSelect={key => onSelect(key, type)}/>\n  }\n\n  const items = Object.entries(validationRules.internal)\n    .filter(([key]) => isNotApplied(key, 'internal'))\n    .map(([key]) => toDropdownItem(key, 'internal', t(`validation.rule.${key}`)))\n  if (validationRules.custom) {\n    const customItems = Object.entries(validationRules.custom)\n      .filter(([key]) => isNotApplied(key, 'custom'))\n      .map(([key]) => toDropdownItem(key, 'custom', t(`validation.rule.${key}`, key)))\n    if (customItems.length) {\n      items.push(<Dropdown.Separator key={'separator'}/>)\n      items.push(...customItems)\n    }\n  }\n  return <>{items}</>\n}\n\nconst RulesList = namedObserver('RulesList', RawRulesList)\n\nconst RawAddRuleButton = () => {\n  const {t} = useTranslation()\n  const builderStore = useBuilderStore()\n  const componentData = useComponentData()\n  const meta = builderStore.getComponentMetadata(componentData.model.type)\n\n  const type = meta?.valuedAn?.type\n  if (!type) return null\n\n  const renderToggle: DropdownProps['renderToggle'] = (props, ref) => (\n    <Button {...props} ref={ref} block>\n      {t('validation.addRule')}\n    </Button>\n  )\n\n  return (\n    <Dropdown renderToggle={renderToggle}>\n      <RulesList type={type}/>\n    </Dropdown>\n  )\n}\n\nexport const AddRuleButton = namedObserver('AddRuleButton', RawAddRuleButton)\n","import type {ValidationRuleParameter} from '@react-form-builder/core'\nimport {createAnnotation} from '@react-form-builder/core'\n\n/**\n * Converts a ValidationRuleParameter to an annotation.\n * @param parameter the validation rule parameter object to convert.\n * @returns the generated annotation.\n */\nfunction convertValidationRuleParameterToAnnotation(parameter: ValidationRuleParameter) {\n  const annotationType = parameter.editorType === 'code' ? 'customValidator' : parameter.type\n  let annotationBuilder = createAnnotation(annotationType).typed(parameter.type).calculable(false)\n  if (parameter.required) {\n    annotationBuilder = annotationBuilder.required\n  }\n  if (parameter.default) {\n    annotationBuilder = annotationBuilder.default(parameter.default)\n  }\n  annotationBuilder = parameter.key === 'message' ? annotationBuilder.localize : annotationBuilder.notLocalize\n\n  return annotationBuilder.build(parameter.key)\n}\n\n/**\n * Converts an array of validation rule parameters to annotations.\n * @param parameters the array of validation rule parameters to convert.\n * @returns the array of annotations generated from the conversion.\n */\nexport function convertValidationRuleParametersToAnnotations(parameters: ValidationRuleParameter[]) {\n  return parameters.map(convertValidationRuleParameterToAnnotation)\n}\n","import styled from '@emotion/styled'\nimport type {Annotation, SchemaType, ValidationRuleSettings} from '@react-form-builder/core'\nimport {getValidatorPropertyBlockType, namedObserver, useComponentData, useStore} from '@react-form-builder/core'\nimport {RemindFill} from '@rsuite/icons'\nimport type {ComponentProps} from 'react'\nimport {useCallback} from 'react'\nimport {useTranslation} from 'react-i18next'\nimport {RemoveButton} from '../../../components/Buttons'\nimport {Columns, Rows} from '../../../components/Containers'\nimport {useTranslationPart} from '../../../localization/hooks'\nimport {PropertyBlock} from '../../../ui/RightPanel/PropertiesEditor/components/Properties'\nimport {convertValidationRuleParametersToAnnotations} from '../../../validation/utils/parameterConverter'\nimport {HintedIconButton} from '../../Hinted'\n\nconst WarningButton = (props: ComponentProps<any>) => {\n  const t = useTranslationPart('validation')\n  const icon = <RemindFill color=\"#f5a623\"/>\n\n  return <HintedIconButton hint={t('ruleNotFound')} icon={icon}{...props}/>\n}\n\n/**\n * The properties of the React {@link ValidationRuleEditor} component.\n */\nexport interface ValidationRuleEditorProps {\n  /**\n   * The validation rule settings.\n   */\n  rule: ValidationRuleSettings\n  /**\n   * The callback function called when a rule is removed.\n   */\n  onRemove: () => void\n}\n\nconst RawValidationRuleEditor = ({rule, onRemove}: ValidationRuleEditorProps) => {\n  const {store, model} = useComponentData()\n  const {t} = useTranslation()\n  const schema = store.schema\n  const viewerStore = useStore()\n\n  const initValidatorArgs = useCallback(() => {\n    rule.args ??= {}\n    return rule.args\n  }, [rule])\n\n  const type = model.valueType\n  if (!type || !schema) return null\n\n  const getValidationRule = (type: SchemaType, ruleKey: string) => {\n    const rulesByType = viewerStore.getValidationRules(type)\n    if (!rule.type || rule.type === 'internal') return rulesByType.internal[ruleKey]\n    if (rule.type === 'custom') return rulesByType.custom?.[ruleKey]\n  }\n\n  let annotations: Annotation[] | null = null\n\n  const ruleDefinition = getValidationRule(type, rule.key)\n  if (ruleDefinition) {\n    annotations = convertValidationRuleParametersToAnnotations(ruleDefinition.params ?? [])\n  }\n\n  return (\n    <Rows>\n      <Columns spaceBetween>\n        <div>\n          {!annotations &&\n            <WarningButton hintPlacement={'autoHorizontal'} disabled={true}/>\n          }\n          <SRuleName>{t(`validation.rule.${rule.key}`, rule.key)}</SRuleName>\n        </div>\n        <RemoveButton onClick={onRemove} hintPlacement={'autoHorizontal'}/>\n      </Columns>\n      {annotations &&\n        <PropertyBlock annotations={annotations} propertyBlockType={getValidatorPropertyBlockType(rule.key)} context={rule.args ?? {}}\n                       initContext={initValidatorArgs}/>\n      }\n    </Rows>\n  )\n}\n\nexport const ValidationRuleEditor = namedObserver('ValidationRuleEditor', RawValidationRuleEditor)\n\nconst SRuleName = styled.span`\n  font-size: medium;\n`\n","import styled from '@emotion/styled'\nimport type {ValidationRuleSettings} from '@react-form-builder/core'\nimport {boolean, namedObserver} from '@react-form-builder/core'\nimport {useCallback} from 'react'\nimport {List, ListItem, Rows} from '../../components/Containers'\nimport {PropertyEditorWrapper} from '../../components/PropertyEditorWrapper'\nimport type {AnnotationEditorProps} from '../AnnotationEditorProps'\nimport {AddRuleButton} from './components/AddRuleButton'\nimport {ValidationRuleEditor} from './components/ValidationRuleEditor'\n\nconst autoValidate = boolean\n  .setup({annotationType: 'Module', calculable: false})\n  .hinted('Validate automatically by input change')\n  .default(true)\n  .build('autoValidate')\n\n/**\n * The React form builder component that displays the validation settings for the component value.\n * @param props the React component properties.\n * @returns the React element.\n */\nconst RawComponentValidationSettingsEditor = (props: AnnotationEditorProps) => {\n  const {store, model} = props.componentData\n  const type = model.valueType\n  const schema = store.schema ?? {}\n\n  const initValidationContext = useCallback(() => {\n    store.schema ??= {}\n    store.schema.validations ??= []\n    return store.schema\n  }, [store])\n\n  if (!type) return null\n\n  return (\n    <Rows>\n      <SWrapper>\n        <PropertyEditorWrapper annotation={autoValidate} context={schema}\n                               initContext={initValidationContext}/>\n      </SWrapper>\n      <AddRuleButton/>\n      <List>{renderRules(store.schema?.validations)}</List>\n    </Rows>\n  )\n}\n\nexport const ComponentValidationSettingsEditor = namedObserver('ComponentValidationSettingsEditor', RawComponentValidationSettingsEditor)\n\nconst renderRules = (validations?: ValidationRuleSettings[]) => (\n  validations?.map((rule, index) => {\n    const key = `${rule.key}-${rule.type ?? 'internal'}`\n    const handleRemove = () => validations?.splice(index, 1)\n    return <ListItem key={key}>\n      <ValidationRuleEditor rule={rule} onRemove={handleRemove}/>\n    </ListItem>\n  })\n)\n\nconst SWrapper = styled.div`\n  label {\n    min-width: max-content;\n  }\n`\n","import {namedObserver} from '@react-form-builder/core'\nimport {useTranslation} from 'react-i18next'\nimport {Button} from 'rsuite'\nimport {useBuilderStore} from '../../../utils/BuilderStoreContext'\nimport LabeledProperty from '../../components/LabeledProperty'\nimport type {AnnotationEditorProps} from '../AnnotationEditorProps'\n\nconst RawCustomValidatorEditor = (props: AnnotationEditorProps) => {\n  const {annotation, componentData, value, onChange} = props\n  const builderStore = useBuilderStore()\n  const componentKey = `${componentData.key}[${annotation.key}][${annotation.type}]`\n  const handleEdit = () => builderStore.editCustomValidationCode(componentKey, value, getFunctionSignature(annotation.type), onChange)\n  const {t} = useTranslation()\n  const label = t(`annotation.${annotation.key}.hint`)\n\n  return (\n    <LabeledProperty {...props}>\n      <Button name={annotation.key} onClick={handleEdit} size={'xs'} appearance={'ghost'} block style={{borderStyle: 'dashed'}}>\n        {label}\n      </Button>\n    </LabeledProperty>\n  )\n}\n\nexport const CustomValidatorEditor = namedObserver('CustomValidatorEditor', RawCustomValidatorEditor)\n\nconst getFunctionSignature = (type?: string) => `/**\n * @param {${type}} value the validated value.\n * @return {boolean} the validation result.\n */\nasync (value) => {`\n","import type {EditorType} from '@react-form-builder/core'\nimport type {ComponentType} from 'react'\nimport type {AnnotationEditorProps} from './AnnotationEditorProps'\nimport {ArrayInput} from './ArrayInput'\nimport {ArrayOfObjectInput} from './ArrayOfObjectInput'\nimport {ArrayOfStringInput} from './ArrayOfStringInput'\nimport {AttributesInput} from './AttributesInput'\nimport {BooleanInput} from './BooleanInput'\nimport {ColorInput} from './ColorInput'\nimport {DateInput} from './DateInput'\nimport {EventEditor} from './EventEditor'\nimport {KeyInput} from './KeyInput'\nimport {MultiPicker} from './MultiPicker'\nimport {NumberInput} from './NumberInput'\nimport {ObjectInput} from './ObjectInput'\nimport {Picker} from './Picker'\nimport {RadioInput} from './RadioInput'\nimport {RenderWhenEditor} from './RenderWhenEditor'\nimport {SizeInput} from './SizeInput'\nimport {StringInput} from './StringInput'\nimport {TimeInput} from './TimeInput'\nimport {TooltipPropertiesEditor} from './TooltipPropertiesEditor'\nimport {ComponentValidationSettingsEditor} from './ValidateEditor'\nimport {CustomValidatorEditor} from './ValidateEditor/CustomValidatorEditor'\n\nexport const EditorMap: Record<EditorType, ComponentType<AnnotationEditorProps>> = {\n  key: KeyInput,\n  htmlAttributes: AttributesInput,\n  validation: ComponentValidationSettingsEditor,\n  string: StringInput,\n  boolean: BooleanInput,\n  number: NumberInput,\n  date: DateInput,\n  time: TimeInput,\n  size: SizeInput,\n  array: ArrayInput,\n  object: ObjectInput,\n  arrayOfString: ArrayOfStringInput,\n  arrayOfObject: ArrayOfObjectInput,\n  color: ColorInput,\n  event: EventEditor,\n  oneOf: Picker,\n  someOf: MultiPicker,\n  radio: RadioInput,\n  tooltipProps: TooltipPropertiesEditor,\n  useTooltip: BooleanInput,\n  renderWhen: RenderWhenEditor,\n  customValidator: CustomValidatorEditor\n}\n","import type {Language} from '@react-form-builder/core'\nimport i18next from 'i18next'\nimport LanguageDetector from 'i18next-browser-languagedetector'\nimport resourcesToBackend from 'i18next-resources-to-backend'\nimport {initReactI18next} from 'react-i18next'\n\n/**\n * A callback function that returns JSON with a translation by the specified language.\n */\nexport type TranslationResolver = (language: string) => Promise<any>\n\n/**\n * I18n for the Form Builder.\n */\nexport class BuilderI18n {\n\n  /**\n   * Creates i18n for the form builder.\n   * @param defaultLanguage the default language.\n   * @param translationResolver the callback function that returns JSON with a translation by the specified language.\n   */\n  constructor(defaultLanguage: Language, translationResolver: TranslationResolver) {\n    i18next\n      .use(resourcesToBackend((language, _, callback) => {\n        translationResolver(language)\n          .then(resources => callback(null, resources))\n          .catch(error => callback(error, null))\n      }) as any)\n      .use(LanguageDetector)\n      .use(initReactI18next)\n      .init({\n          fallbackLng: defaultLanguage.fullCode,\n          load: 'currentOnly',\n          interpolation: {\n            escapeValue: false,\n          },\n        },\n        this.onLoadError.bind(this)\n      )\n      .catch(e => console.error(e))\n  }\n\n  /**\n   * Sets the language for the web page.\n   * @param language the language.\n   * @returns the {@link Promise} with the result of the language setting.\n   */\n  async changeWebDocumentLanguage(language: Language) {\n    await i18next.changeLanguage(language.fullCode)\n    document.documentElement.lang = language.fullCode\n    document.documentElement.dir = language.bidi\n  }\n\n  private onLoadError(error: any) {\n    // eslint-disable-next-line no-console\n    if (error) console.log('An error occurred while initializing the language', error)\n  }\n}\n","import {BiDi, Language} from '@react-form-builder/core'\nimport {arEG, deDE, enUS, esES, faIR, frFR, itIT, zhCN} from 'rsuite/esm/locales/index.js'\nimport type {FormBuilderI18n} from './FormBuilderLanguage'\n\nconst rSuiteLocales: Record<string, any> = {\n  'ar-EG': arEG,\n  'de-DE': deDE,\n  'en-US': enUS,\n  'it-IT': itIT,\n  'fa-IR': faIR,\n  'fr-FR': frFR,\n  'es-ES': esES,\n  'zh-CN': zhCN\n}\n\nexport const defaultComponentsLocale = enUS\n\nexport const builtInLanguages: FormBuilderI18n = {\n  languages: [\n    new Language('en', 'US', 'English', 'American English'),\n    new Language('de', 'DE', 'Deutsch', 'German'),\n    new Language('ar', 'EG', 'عرب', 'Arabic (Egypt)', BiDi.RTL),\n    new Language('it', 'IT', 'Italiano', 'Italian'),\n    new Language('fa', 'IR', 'فارسی', 'Persian', BiDi.RTL),\n    new Language('fr', 'FR', 'Français', 'French'),\n    new Language('es', 'ES', 'Español', 'Spanish'),\n    new Language('zh', 'CN', '中文', 'Chinese')\n  ],\n  getData: async languageFullCode => {\n    const data = await import(`../../../public/locales/${languageFullCode}.json`)\n    return {\n      data: data,\n      componentsLocale: rSuiteLocales[languageFullCode]\n    }\n  }\n}\n\nfunction findLanguageByCode(availableLanguages: Language[], code: string) {\n  return availableLanguages.find(language => language.code === code)\n}\n\n/**\n * Finds {@link Language} by language code.\n * @param availableLanguages the available languages.\n * @param language the language code.\n * @returns found {@link Language}, or the default Language if no Language exists for the language code.\n */\nexport function findLanguage(availableLanguages: Language[], language: string): Language | undefined {\n  const codes = language.split('-')\n\n  if (codes.length > 1) {\n    const code = codes[0]\n    const dialect = codes[1]\n    const langByFullCode = availableLanguages\n      .find(language => language.code === code && language.dialect === dialect)\n    if (langByFullCode) return langByFullCode\n    const languageByCode = findLanguageByCode(availableLanguages, code)\n    if (languageByCode) return languageByCode\n  }\n\n  return findLanguageByCode(availableLanguages, language)\n}\n","import type {BuilderTheme} from './types'\n\n/**\n * @returns the {@link BuilderTheme} from the current browser settings.\n */\nexport const getSystemTheme = (): BuilderTheme => {\n  return window.matchMedia('(prefers-color-scheme: dark)')?.matches\n    ? 'dark' : 'light'\n}\n","import type {FormBuilderTheme} from '../FormBuilderTheme'\nimport {getSystemTheme} from './getSystemTheme'\nimport type {BuilderTheme} from './types'\n\n/**\n * Determines the theme based on the given theme preference.\n * @param theme the theme preference.\n * @returns the {@link BuilderTheme} based on the given theme preference.\n */\nexport const determineTheme = (theme?: FormBuilderTheme): BuilderTheme => {\n  return theme === 'system' ? getSystemTheme() : (theme ?? getSystemTheme())\n}\n","import type {IFormStorage} from './IFormStorage'\n\n/**\n * The external form storage that always returns an error.\n * Used if the external form storage is not connected to the form builder.\n */\nexport class AlwaysRejectFormStorage implements IFormStorage {\n  #reason = 'Not implemented'\n\n  /**\n   * @inheritDoc\n   */\n  getForm(): Promise<string> {\n    return Promise.reject(this.#reason)\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getFormNames(): Promise<string[]> {\n    return Promise.reject(this.#reason)\n  }\n\n  /**\n   * @inheritDoc\n   */\n  removeForm(): Promise<any> {\n    return Promise.reject(this.#reason)\n  }\n\n  /**\n   * @inheritDoc\n   */\n  saveForm(): Promise<any> {\n    return Promise.reject(this.#reason)\n  }\n}\n","import type {BuilderComponent} from '@react-form-builder/core'\nimport {BuilderView, nameObservable} from '@react-form-builder/core'\nimport {makeAutoObservable} from 'mobx'\nimport type {IFormStorage} from './IFormStorage'\n\n/**\n * An implementation of the IFormStorage interface that stores forms metadata in a cache.\n */\nexport class CachedFormStorage implements IFormStorage {\n\n  private readonly cache = new Map<string, BuilderComponent>\n\n  /**\n   * Constructor.\n   * @param delegate IFormStorage delegate.\n   */\n  constructor(private readonly delegate: IFormStorage) {\n    makeAutoObservable(this, undefined, {name: nameObservable('CachedFormStorage')})\n  }\n\n  /**\n   * @returns the cached instances of BuilderComponent.\n   */\n  get builderComponents(): BuilderComponent[] {\n    return Array.from(this.cache.values())\n  }\n\n  /**\n   * @inheritDoc\n   */\n  async getForm(formName: string): Promise<string> {\n    const result = await this.delegate.getForm(formName)\n    this.#addToCache(formName)\n    return result\n  }\n\n  /**\n   * @inheritDoc\n   */\n  async getFormNames(): Promise<string[]> {\n    const result = await this.delegate.getFormNames()\n\n    const keysToRemove = []\n    for (const [key] of this.cache) {\n      if (result.indexOf(key) < 0) keysToRemove.push(key)\n    }\n    result.forEach(formName => this.#addToCache(formName))\n    keysToRemove.forEach(key => this.cache.delete(key))\n\n    return result\n  }\n\n  /**\n   * @inheritDoc\n   */\n  async removeForm(formName: string): Promise<any> {\n    const result = await this.delegate.removeForm(formName)\n    this.cache.delete(formName)\n    return result\n  }\n\n  /**\n   * @inheritDoc\n   */\n  async saveForm(formName: string, formValue: string): Promise<any> {\n    const result = await this.delegate.saveForm(formName, formValue)\n    this.#addToCache(formName)\n    return result\n  }\n\n  /**\n   * Creates and adds a new value to the cache if the key does not exist in the cache.\n   * @param name the cache key.\n   */\n  #addToCache(name: string) {\n    if (this.cache.has(name)) return\n    this.cache.set(name, BuilderView.createTemplateComponent(name))\n  }\n}\n","import type {PanelPlacement} from '../features/ui/PanelPlacement'\n\nexport const defaultViewMode = 'desktop'\nexport const defaultOpenedPanels: PanelPlacement[] = ['left', 'right']\nexport const defaultBottomPanelHeight = 380\n","/**\n * Reads the file as a string and passes the result to the onRead callback function.\n * @param file the file to read.\n * @param onRead the callback to process the contents of the file.\n * @internal\n */\nfunction readAsString(file: File, onRead: (content: string) => void) {\n  const reader = new FileReader()\n  reader.readAsText(file, 'UTF-8')\n\n  reader.onload = readerEvent => {\n    const content: string = readerEvent.target?.result as string ?? ''\n    onRead(content)\n  }\n}\n\n/**\n * Creates an HTML input element, passes the onFile callback to the onchange event of that input.\n * @param onFile the callback for the onchange event.\n * @internal\n */\nfunction uploadFile(onFile: (file: File) => void) {\n  const input = document.createElement('input')\n  input.type = 'file'\n\n  input.onchange = e => {\n    const target = e.target as HTMLInputElement\n    const file: File = (target.files as FileList)[0]\n\n    onFile(file)\n  }\n\n  input.click()\n}\n\n/**\n * Uploads a file with string content.\n * @param onUpload the callback to process the contents of the file.\n * @internal\n */\nexport function uploadStringFile(onUpload: (content: string) => void) {\n  uploadFile(file => readAsString(file, onUpload))\n}\n\n/**\n * Uploads a file with binary content.\n * @param onUpload the callback to process the contents of the file.\n * @internal\n */\nexport function uploadBinaryFile(onUpload: (content: Promise<ArrayBuffer>) => void) {\n  uploadFile(file => onUpload(file.arrayBuffer()))\n}\n","import {action, observable, reaction} from 'mobx'\n\n// Based on https://github.com/httptoolkit/mobx-shallow-undo/\n\n/**\n * Drop-in undo & redo for shallow changes in Mobx\n * @param readObservable the getter, this will be observed.\n * @param setObservable the setter, to reset the value on undo/redo.\n * @param maxStackSize the maximum length of the undo/redo stack.\n * @returns the undoer instance.\n */\nexport function trackUndo<T>(\n  readObservable: () => T,\n  setObservable: (value: T) => void,\n  maxStackSize?: number,\n) {\n  let isDisposed = false\n\n  const undoStack: T[] = [readObservable()]\n  // Always points to the current value\n  const undoPointer = observable.box(undoStack.length - 1)\n\n  let stopTrackingChanges: () => void = () => {\n  }\n  const trackChanges = () => {\n    stopTrackingChanges = reaction(readObservable, (newValue) => {\n      if (isDisposed) throw new Error('Undo already disposed')\n\n      undoPointer.set(undoPointer.get() + 1)\n      undoStack[undoPointer.get()] = newValue\n      // On change, trim any trailing redo's\n      undoStack.length = undoPointer.get() + 1\n\n      if (maxStackSize && maxStackSize > 0 && undoStack.length > maxStackSize) {\n        undoPointer.set(undoPointer.get() - 1)\n        undoStack.splice(0, 1)\n      }\n    })\n  }\n\n  trackChanges()\n\n  return observable({\n      undo: action(() => {\n        if (isDisposed) throw new Error('Undo already disposed')\n        // No undos available\n        if (undoPointer.get() === 0) return\n\n        undoPointer.set(undoPointer.get() - 1)\n\n        // We have to make this change without our undo stack including it, but\n        // whilst still letting other external viewers observe this as normal.\n        stopTrackingChanges()\n        setObservable(undoStack[undoPointer.get()])\n        trackChanges()\n      }),\n      redo: action(() => {\n        if (isDisposed) throw new Error('Undo already disposed')\n        // No redos available\n        if (undoPointer.get() >= undoStack.length - 1) return\n        undoPointer.set(undoPointer.get() + 1)\n\n        stopTrackingChanges()\n        setObservable(undoStack[undoPointer.get()])\n        trackChanges()\n      }),\n      get hasUndo() {\n        return undoPointer.get() !== 0\n      },\n      get hasRedo() {\n        return undoPointer.get() < undoStack.length - 1\n      },\n      dispose: () => {\n        stopTrackingChanges()\n        isDisposed = true\n      }\n    }\n  )\n}\n","import type {\n  Annotation,\n  BuilderMode,\n  ComponentData,\n  EditorType,\n  Language,\n  NamedActionDefinition,\n  PersistedForm,\n  Store,\n  ViewMode\n} from '@react-form-builder/core'\nimport {\n  ActionDefinition,\n  BiDi,\n  BuilderView,\n  ComponentStore,\n  namedObserver,\n  nameObservable,\n  PersistedFormVersion,\n  screenModel,\n  treeForEach\n} from '@react-form-builder/core'\nimport {assign, cloneDeep} from 'lodash-es'\nimport type {IReactionDisposer} from 'mobx'\nimport {action, makeAutoObservable, observable, reaction} from 'mobx'\nimport {debounceTime, distinctUntilChanged, Subject} from 'rxjs'\nimport {EditorMap} from '../features/annotation-editors'\nimport type {CalculableEditorProps} from '../features/annotation-editors/AnnotationEditorProps'\nimport type {CodeActionEditorData, CodeActionEditorProps} from '../features/annotation-editors/EventEditor/components/CodeActionEditor'\nimport type {TranslationResolver} from '../features/localization/BuilderI18n'\nimport {BuilderI18n} from '../features/localization/BuilderI18n'\nimport type {FormBuilderI18nData} from '../features/localization/FormBuilderLanguage'\nimport {builtInLanguages, findLanguage} from '../features/localization/languageUtils'\nimport type {PanelPlacement} from '../features/ui/PanelPlacement'\nimport type {PromptDialogProps} from '../features/ui/PromptDialogProps'\nimport {annotationResolver} from '../features/validation'\nimport type {FormBuilderProps} from '../FormBuilderProps'\nimport {determineTheme} from '../utils/determineTheme'\nimport {getSystemTheme} from '../utils/getSystemTheme'\nimport type {BuilderTheme, IFormBuilder, InsertPosition} from '../utils/types'\nimport {AlwaysRejectFormStorage} from './AlwaysRejectFormStorage'\nimport {CachedFormStorage} from './CachedFormStorage'\nimport {defaultBottomPanelHeight, defaultOpenedPanels, defaultViewMode} from './constants'\nimport {uploadStringFile} from './fileUpload'\nimport {trackUndo} from './undo'\n\nfunction toPrettyJsonString(value: any) {\n  return JSON.stringify(value, null, 2)\n}\n\n/**\n * Parameters of the editable component property.\n */\nexport class EditableProperty implements CalculableEditorProps {\n  /**\n   * Creates the editable property settings.\n   * @param disableCompute the function to set the property as not computed.\n   * @param setComputeCode the function to set the code value.\n   * @param getComputeCode the function to get the code value.\n   * @param getComputeType the function to get the computed type of the property.\n   * @param hasComputeCode the function for checking the existence of the computed code.\n   * @param annotation the annotation object for the property.\n   * @param componentKey the key of the component that the property belongs to.\n   */\n  constructor(\n    readonly disableCompute: CalculableEditorProps['disableCompute'],\n    readonly setComputeCode: CalculableEditorProps['setComputeCode'],\n    readonly getComputeCode: CalculableEditorProps['getComputeCode'],\n    readonly getComputeType: CalculableEditorProps['getComputeType'],\n    readonly hasComputeCode: CalculableEditorProps['hasComputeCode'],\n    readonly annotation: Annotation,\n    readonly componentKey: string\n  ) {\n  }\n}\n\n/**\n * The callback function called when a component is selected in a modal window.\n */\nexport type OnSelectCallback = (source: ComponentData) => void\n\n/**\n * The editable custom validation code.\n */\nexport class CustomValidationCode {\n\n  /**\n   * Creates the editable custom validation code.\n   * @param editorKey the unique code editor key.\n   * @param code the custom validation code.\n   * @param functionSignature the function signature.\n   * @param onSave the callback function called when data should be saved.\n   */\n  constructor(readonly editorKey: string,\n              readonly code: string,\n              readonly functionSignature: string,\n              readonly onSave: (value: string) => void) {\n  }\n}\n\n/**\n * The editable json value.\n */\nexport class JsonCode {\n\n  /**\n   * Creates an editor for JSON.\n   * @param editorKey the unique code editor key.\n   * @param editorTitle the editor's title.\n   * @param json the editable JSON.\n   * @param onSave the callback function called when data should be saved.\n   * @param onValidate the optional callback function called when data should be validated.\n   */\n  constructor(readonly editorKey: string,\n              readonly editorTitle: string,\n              readonly json: string,\n              readonly onSave: (value: string) => void,\n              readonly onValidate?: (value: string) => void) {\n  }\n}\n\n/**\n * The editable action data.\n */\nexport class EditableAction implements CodeActionEditorProps {\n  codeAction: CodeActionEditorData\n\n  /**\n   * Creates the editable action settings.\n   * @param namedAction the named custom action.\n   * @param onSave the callback function called when data should be saved.\n   */\n  constructor(readonly namedAction: NamedActionDefinition,\n              readonly onSave: (namedAction: NamedActionDefinition) => void) {\n    const clone = JSON.parse(JSON.stringify(namedAction.actionDefinition))\n    this.codeAction = {\n      name: namedAction.name,\n      body: clone.body ?? '',\n      params: clone.params\n    }\n  }\n}\n\n/**\n * The state of the modal window of the component list.\n */\nexport interface ComponentsModalState {\n  /**\n   * The flag of modal window visibility, if true - the window is shown, if false - the window is hidden.\n   */\n  opened: boolean\n  /**\n   * The callback function called when a component is selected in a modal window.\n   */\n  onSelect: OnSelectCallback\n}\n\n/**\n * The state of the modal window for entering a value.\n */\nexport interface PromptModalState extends PromptDialogProps {\n  /**\n   * The flag of modal window visibility, if true - the window is shown, if false - the window is hidden.\n   */\n  opened: boolean\n\n  /**\n   * The error message.\n   */\n  errorMessage?: string\n}\n\nclass BuilderUndoer {\n  private serializedForm: string\n  readonly undoer\n  readonly #formChanged = new Subject<string>()\n  readonly #subscriptions\n  #disposer: IReactionDisposer\n\n  constructor(readonly builderStore: BuilderStore, maxStackSize?: number, debounceInterval = 1000) {\n    makeAutoObservable(this, undefined, {name: nameObservable('BuilderUndoer')})\n\n    const createReaction = () => {\n      return reaction(() => this.builderStore.formAsString, formString => this.#formChanged.next(formString))\n    }\n\n    this.serializedForm = this.builderStore.formAsString\n    this.#disposer = createReaction()\n\n    this.undoer = trackUndo(\n      () => this.serializedForm,\n      value => {\n        // turn off reaction\n        this.#disposer()\n        this.builderStore.parseForm(value)\n        // turn on reaction\n        this.#disposer = createReaction()\n      },\n      maxStackSize\n    )\n\n    const stream = this.#formChanged\n      .pipe(\n        debounceTime(debounceInterval),\n        distinctUntilChanged(),\n      )\n\n    this.#subscriptions = [\n      stream.subscribe(value => this.serializedForm = value),\n    ]\n  }\n\n  undo() {\n    this.undoer.undo()\n    this.builderStore.selected.clear()\n  }\n\n  redo() {\n    this.undoer.redo()\n    this.builderStore.selected.clear()\n  }\n\n  get hasUndo() {\n    return this.undoer.hasUndo\n  }\n\n  get hasRedo() {\n    return this.undoer.hasRedo\n  }\n\n  /**\n   * Releases allocated resources, must be used when destroying an object instance.\n   */\n  dispose() {\n    this.#disposer()\n    this.#subscriptions.forEach(s => s.unsubscribe())\n    this.undoer.dispose()\n  }\n}\n\n/**\n * Insert component options.\n */\nexport type InsertComponentOptions = {\n  /**\n   * The component to be added to the component tree.\n   */\n  source: ComponentData\n  /**\n   * The parent component for the component to be added.\n   */\n  target: ComponentData\n  /**\n   * The insertion position relative to the new parent component.\n   */\n  insertPosition?: InsertPosition\n  /**\n   * The property name of the parent component where the new component will be added.\n   */\n  slot?: string\n  /**\n   * The source code of the function that checks if the component can be bound to parent.\n   */\n  slotCondition?: string\n  /**\n   * The index in the array, if the parent property is an array property.\n   */\n  slotIndex?: number\n  /**\n   * If true, the component will be selected after adding.\n   */\n  selectAfterInsert?: boolean\n}\n\n/**\n * Form builder settings.\n */\nexport class BuilderStore implements IFormBuilder {\n  builderMode: BuilderMode = 'viewer'\n  viewMode: ViewMode = defaultViewMode\n  landscapeMode?: boolean\n  theme: BuilderTheme = getSystemTheme()\n  openedPanels: PanelPlacement[] = defaultOpenedPanels\n  bottomPanelHeight = defaultBottomPanelHeight\n  testingData?: string\n  testingAutorun = true\n\n  private readonly builderI18n: BuilderI18n\n  formBuilderLanguage: Language\n  localizationLanguage: Language\n  private readonly loadedLanguages: Record<string, FormBuilderI18nData> = {}\n\n  currentEditable?: EditableProperty | EditableAction | CustomValidationCode | JsonCode\n  lastSaveTime = new Date()\n  readonly componentsModalState: ComponentsModalState = {\n    opened: false,\n    onSelect: () => {\n    }\n  }\n  readonly promptModalState: PromptModalState = {\n    opened: false,\n    title: '',\n    value: '',\n    onOk: () => {\n    }\n  }\n  readonly errorMap = new Map<ComponentData, Record<string, string | undefined>>\n  readonly view: BuilderView\n  readonly formStorageEnabled: boolean\n  readonly selected = new Set<ComponentData>()\n  readonly expanded = new Set<ComponentData>()\n  private readonly formStorage: CachedFormStorage\n  readonly #props: Readonly<FormBuilderProps>\n  readonly undoer: BuilderUndoer\n  activeFormName?: string\n\n  /**\n   * Creates the form builder settings.\n   * @param viewer the form viewer settings.\n   * @param props the form viewer properties.\n   */\n  constructor(\n    readonly viewer: Store,\n    readonly props: Readonly<FormBuilderProps>,\n  ) {\n    makeAutoObservable(this, {\n        selected: observable,\n        formBuilderLanguage: observable.ref,\n        localizationLanguage: observable.ref,\n        dispose: false,\n        builderMode: true,\n        viewMode: true,\n        openedPanels: true,\n        changeBuilderMode: action,\n        view: false\n      }\n      , {name: nameObservable('BuilderStore')})\n    this.formStorageEnabled = !!props.formStorage\n    this.formStorage = new CachedFormStorage(props.formStorage ?? new AlwaysRejectFormStorage())\n    if (this.formStorageEnabled) {\n      this.formStorage.getFormNames().catch(console.error)\n    }\n\n    this.#props = props\n    this.theme = determineTheme(props.theme)\n\n    this.view = props.view\n    this.activeFormName = props.formName\n    this.formBuilderLanguage = this.availableLanguages[0]\n    this.localizationLanguage = this.formBuilderLanguage\n\n    const translationResolver: TranslationResolver = async language => {\n      const loaded = this.loadedLanguages[language]\n      if (loaded) return loaded.data\n\n      const found = findLanguage(this.availableLanguages, language) ?? this.defaultLanguage\n      const i18nData = await this.i18n.getData(found.fullCode)\n      this.loadedLanguages[language] = i18nData\n      return i18nData.data\n    }\n    this.builderI18n = new BuilderI18n(this.defaultLanguage, translationResolver)\n\n    this.undoer = new BuilderUndoer(this, 100)\n  }\n\n  /**\n   * Opens the code action editor to add a new code action.\n   * @param afterAdd the callback function called after a new code action added.\n   */\n  addCodeAction(afterAdd?: (namedAction: NamedActionDefinition) => void) {\n    const emptyActionDefinition = ActionDefinition.sourceAction('')\n    const namedAction: NamedActionDefinition = {name: '', actionDefinition: emptyActionDefinition}\n    this.editCodeAction(namedAction, namedAction => {\n      afterAdd?.(namedAction)\n    })\n  }\n\n  /**\n   * Opens the code action editor.\n   * @param namedAction the named action name.\n   * @param afterEdit callback function called after data editing.\n   */\n  editCodeAction(namedAction: NamedActionDefinition,\n                 afterEdit?: (namedAction: NamedActionDefinition) => void) {\n    this.currentEditable = new EditableAction(namedAction, action => {\n      this.viewer.form.updateOrAddAction(namedAction.name, action)\n      afterEdit?.(action)\n      // recreate action editor with the new data\n      this.editCodeAction(action)\n    })\n  }\n\n  /**\n   * Opens the custom validation code editor.\n   * @param componentKey the component key.\n   * @param code the custom validation code.\n   * @param functionSignature the function signature.\n   * @param onChange the callback function called when data should be saved.\n   */\n  editCustomValidationCode(componentKey: string, code: string, functionSignature: string,\n                           onChange: (value: string) => void) {\n    this.currentEditable = new CustomValidationCode(componentKey, code, functionSignature, onChange)\n  }\n\n  /**\n   * Opens the editor for JSON.\n   * @param componentKey the component key.\n   * @param editorTitle the editor's title.\n   * @param json the editable JSON.\n   * @param onChange the callback function called when data should be saved.\n   * @param onValidate the optional callback function called when data should be validated.\n   */\n  editJsonCode(componentKey: string, editorTitle: string, json: string, onChange: (value: string) => void,\n               onValidate?: (value: string) => void) {\n    this.currentEditable = new JsonCode(componentKey, editorTitle, json, onChange, onValidate)\n  }\n\n  /**\n   * Changes the language in the form builder.\n   * @param language the language to be set.\n   */\n  changeLanguage(language: Language) {\n    this.builderI18n.changeWebDocumentLanguage(language)\n      .then(() => this.formBuilderLanguage = language)\n      .catch(e => console.error(e))\n  }\n\n  /**\n   * @returns the i18n data of the form builder.\n   */\n  get i18n() {\n    return this.#props.i18n && this.#props.i18n.languages.length > 0\n      ? this.#props.i18n\n      : builtInLanguages\n  }\n\n  /**\n   * @returns set of languages for translating the Form Builder interface.\n   */\n  get availableLanguages() {\n    return this.i18n.languages\n  }\n\n  /**\n   * @returns the default language.\n   */\n  get defaultLanguage() {\n    return this.availableLanguages[0]\n  }\n\n  /**\n   * @returns the current locale for the components.\n   */\n  get componentsLocale() {\n    return this.loadedLanguages[this.formBuilderLanguage.fullCode]?.componentsLocale\n  }\n\n  /**\n   * Validates all properties of all components on the form.\n   */\n  validate = async () => {\n    await Promise.allSettled(this.viewer.reduceScreen((acc: Promise<string | undefined>[], current) => {\n      const meta = this.getComponentMetadata(current.store.type)\n\n      meta.properties.forEach(annotation => {\n        const validator = annotationResolver({annotation, store: this.viewer})\n        if (!this.errorMap.has(current)) {\n          this.errorMap.set(current, {})\n        }\n        const errors = this.errorMap.get(current)!\n        for (const key in current.store.props) {\n          acc.push(validator(current.store.props[key].value, this.viewer)\n            .then(error => {\n              if (!error) return errors[annotation.key] = undefined\n\n              const messages = error.map(e => e.message)\n                .filter(e => e !== 'undefined')\n                .join('; ')\n              return errors[annotation.key] = messages\n            }))\n        }\n      })\n\n      return acc\n    }, []))\n  }\n\n  /**\n   * @returns selected component if only one component is selected in the form builder, otherwise undefined.\n   */\n  get oneSelected() {\n    return this.selected.size === 1 ? Array.from(this.selected)[0] : undefined\n  }\n\n  /**\n   * @returns the selected tree element if only one component is selected in the form builder, otherwise undefined.\n   */\n  get oneSelectedComponentData() {\n    const selected = this.oneSelected\n    if (selected) return this.viewer.form.componentTree.findByKey(selected.key)\n  }\n\n  /**\n   * @returns the current form name.\n   */\n  get formName() {\n    return this.activeFormName || '__DefaultForm__'\n  }\n\n  /**\n   * @returns true if the form builder is in RTL mode, false otherwise.\n   */\n  get isRTL(): boolean {\n    return this.formBuilderLanguage.bidi === BiDi.RTL\n  }\n\n  /**\n   * Correctly clears allocated resources, the function must be called when destroying an instance of the class.\n   */\n  dispose() {\n    this.undoer.dispose()\n  }\n\n  /**\n   * Changes the form builder mode.\n   * @param value the new form builder mode.\n   */\n  changeBuilderMode(value: BuilderMode) {\n    this.builderMode = value\n    this.currentEditable = undefined\n  }\n\n  /**\n   * Expands all elements in the component tree.\n   */\n  expandAll() {\n    treeForEach(this.viewer.form.componentTree, componentData => this.expanded.add(componentData))\n  }\n\n  /**\n   * Collapses all elements in the component tree.\n   */\n  collapseAll() {\n    this.expanded.clear()\n  }\n\n  /**\n   * @inheritDoc\n   */\n  parseForm(text: string) {\n    this.viewer.applyStringForm(text)\n\n    this.currentEditable = undefined\n  }\n\n  /**\n   * Clones the component and adds the clone to the component tree.\n   * @param source the cloning component.\n   */\n  clone(source: ComponentData) {\n    this.add(source, source)\n  }\n\n  /**\n   * Moves one selected component in the component tree.\n   * @param source the selected component.\n   * @param target the new parent component for the selected component.\n   * @param insertPosition the insertion position relative to the new parent component.\n   * @param slot the property name of the parent component where the new component will be added.\n   * @param slotCondition the source code of the function that checks if the component can be bound to parent.\n   * @returns void\n   */\n  move(source: ComponentData, target: ComponentData, insertPosition: InsertPosition = 'after', slot?: string, slotCondition?: string): void {\n    if (source === target || source === this.viewer.form.componentTree) return\n\n    source.store.slot = slot\n    source.store.slotCondition = slotCondition\n\n    if (insertPosition === 'inner' || target.isRoot) return source.setParent(target)\n    if (insertPosition === 'before') return target.insertBeforeMe(source)\n    if (insertPosition === 'after') return target.insertAfterMe(source)\n\n    throw new Error(`Unknown insert position ${insertPosition}`)\n  }\n\n  /**\n   * Moves several selected components in the component tree.\n   * @param target the new parent component for relocatable components.\n   * @param insertPosition the insertion position relative to the new parent component.\n   * @param slot the property name of the parent component where the new component will be added.\n   * @param slotCondition the source code of the function that checks if the component can be bound to parent.\n   */\n  multipleMove(target: ComponentData, insertPosition: InsertPosition = 'after', slot?: string, slotCondition?: string) {\n    this.selected.forEach((store) => {\n      const sourceComponentData = this.viewer.form.componentTree.findByKey(store.key)\n      if (!sourceComponentData) throw Error(`Component with key ${store.key} not found`)\n      this.move(sourceComponentData, target, insertPosition, slot, slotCondition)\n    })\n  }\n\n  /**\n   * Adds the new component to the component tree (it's better to use {@link insert} function).\n   * @param source the component to be added to the component tree.\n   * @param target the parent component for the component to be added.\n   * @param insertPosition the insertion position relative to the new parent component.\n   * @param slot the property name of the parent component where the new component will be added.\n   * @param slotCondition the source code of the function that checks if the component can be bound to parent.\n   * @returns the new added component.\n   */\n  add(source: ComponentData, target: ComponentData, insertPosition: InsertPosition = 'after',\n      slot?: string, slotCondition?: string) {\n    return this.insert({\n      source,\n      target,\n      insertPosition,\n      slot,\n      slotCondition,\n      selectAfterInsert: true\n    })\n  }\n\n  /**\n   * Inserts the new component to the component tree.\n   * @param options the insert options.\n   * @returns the new inserted component.\n   */\n  insert(options: InsertComponentOptions) {\n    const {source, target, insertPosition, slot, slotCondition, selectAfterInsert} = options\n\n    const clone = assign(new ComponentStore('', ''), cloneDeep(source.store))\n\n    const componentData = this.viewer.createComponentData(clone)\n\n    const keysMap = componentData.unifyKeys(this.viewer.form.componentTree)\n\n    this.move(componentData, target, insertPosition ?? 'after', slot, slotCondition)\n\n    treeForEach(componentData, cd => {\n      const oldKey = keysMap.get(cd.key)\n      if (!oldKey) return\n      const localization = this.viewer.form.localization.getLocalizationForComponent(oldKey)\n      if (localization) this.viewer.form.localization.addLocalizationWithNewKey(localization, oldKey, cd.key)\n    })\n\n    if (selectAfterInsert) this.selectNode(componentData)\n\n    return clone\n  }\n\n  /**\n   * Removes the component from the component tree.\n   * @param source the component for removal.\n   */\n  remove(source: ComponentData) {\n    this.selected.delete(source)\n    this.viewer.form.localization.removeLocalization(source.key)\n    source.delete()\n  }\n\n  /**\n   * Clears the current form.\n   */\n  clear() {\n    this.viewer.clear()\n    this.selected.clear()\n  }\n\n  /**\n   * @inheritDoc\n   */\n  get formAsString() {\n    const actions = this.viewer.form.actionNames.length ? this.viewer.form.actions : undefined\n    const errorProps = Object.keys(this.viewer.form.errorProps).length ? this.viewer.form.errorProps : undefined\n    const serializedObject: PersistedForm = {\n      version: PersistedFormVersion.version1,\n      actions: actions,\n      errorProps: errorProps,\n      tooltipType: this.viewer.form.tooltipType,\n      errorType: this.viewer.form.errorType,\n      form: this.viewer.form.componentTree.store,\n      localization: this.viewer.form.localization.value,\n      languages: this.formAvailableLanguages,\n      defaultLanguage: this.viewer.form.defaultLanguage.fullCode\n    }\n    return toPrettyJsonString(serializedObject)\n  }\n\n  /**\n   * @returns the list of available languages for the form.\n   */\n  get formAvailableLanguages() {\n    return this.availableLanguages.filter(l => {\n      return l.fullCode === this.defaultLanguage.fullCode\n        || this.viewer.form.localization.hasLanguage(l.fullCode)\n    })\n  }\n\n  /**\n   * Downloads the current form to a file in the browser.\n   */\n  download = () => {\n    const data = 'data:text/json;charset=utf-8,' + encodeURIComponent(this.formAsString)\n\n    const link = document.createElement('a')\n    link.setAttribute('href', data)\n    link.setAttribute('download', 'form.json')\n    document.body.appendChild(link)\n    link.onclick = () => {\n      document.body.removeChild(link)\n    }\n    link.click()\n  }\n\n  /**\n   * Loads a form from the file selected in the browser.\n   */\n  upload = () => {\n    uploadStringFile(this.parseForm.bind(this))\n  }\n\n  /**\n   * Saves the current form in the form storage.\n   * @param formName the form name.\n   * @returns the {@link Promise} with the result of saving the form.\n   */\n  async save(formName?: string) {\n    const name = formName || this.activeFormName\n    if (!name) return\n\n    return await this.saveForm(name, this.formAsString)\n  }\n\n  /**\n   * Saves the form in the form storage.\n   * @param formName the form name.\n   * @param formValue the form serialized to JSON.\n   * @returns the {@link Promise} with the result of saving the form.\n   */\n  saveForm(formName: string, formValue: string) {\n    this.lastSaveTime = new Date()\n    this.activeFormName = formName\n    return this.formStorage.saveForm(formName, formValue)\n  }\n\n  /**\n   * Creates a new form in the form storage.\n   * @param formName the form name.\n   * @returns the Promise with the result of the form creation.\n   */\n  async createForm(formName: string) {\n    const persistedForm: PersistedForm = {\n      form: new ComponentStore(screenModel.name, screenModel.type),\n      localization: {},\n      languages: [],\n      defaultLanguage: this.defaultLanguage.fullCode\n    }\n    return this.saveForm(formName, toPrettyJsonString(persistedForm))\n  }\n\n  /**\n   * @returns the {@link Promise} with all form names from the form storage.\n   */\n  async getFormKeys() {\n    const keys = await this.formStorage.getFormNames()\n    return keys.map(value => `${value}`) || []\n  }\n\n  /**\n   * Removes the form from the form storage by form name.\n   * @param value the form name.\n   * @param onSuccess the callback function that is called when a form is successfully removed.\n   */\n  removeForm(value: string, onSuccess: () => void) {\n    this.activeFormName = undefined\n    this.formStorage.removeForm(value).then(onSuccess)\n  }\n\n  /**\n   * Loads the form from the form storage into the form builder.\n   * @param value the form name.\n   * @param onSuccess the callback function that is called when the form is loaded successfully.\n   * @param onError the callback function that is called if the form fails to load.\n   */\n  loadForm(value: string, onSuccess?: () => void, onError?: (err: any) => void) {\n    this.getStoredFormJson(value)\n      .then(data => {\n        this.parseForm(data)\n        this.activeFormName = value\n        onSuccess?.()\n      })\n      .catch(err => onError?.(err))\n  }\n\n  /**\n   * @param formName the form name.\n   * @returns the {@link Promise} with a form serialized in JSON.\n   */\n  getStoredFormJson(formName: string) {\n    return this.formStorage.getForm(formName)\n  }\n\n  /**\n   * Hides or shows the form builder panel.\n   * @param placement placement of the form builder panel.\n   * @param visible true if you want to show the panel, false otherwise.\n   */\n  setPanelVisible(placement: PanelPlacement, visible: boolean) {\n    const filtered = this.openedPanels?.filter(key => key !== placement) ?? []\n    this.openedPanels = [\n      ...filtered,\n      ...visible ? [placement] : []\n    ]\n  }\n\n  /**\n   * Expands all the parents of a component in the form builder's component tree.\n   * @param target the expanded component.\n   * @param componentTree the initial node of the component tree.\n   * @returns true if at least one component has been marked as expanded,\n   * or if the beginning of the tree matches the component's key, undefined otherwise.\n   */\n  expandParents(target: ComponentData, componentTree: ComponentData = this.viewer.form.componentTree) {\n    if (!componentTree.children?.length) return componentTree.key === target.key\n\n    if (componentTree.children.some(child => this.expandParents(target, child))) {\n      this.expanded.add(componentTree)\n      return true\n    }\n  }\n\n  /**\n   * Adds a component to the list of selected components.\n   * @param target the component to be added to the list.\n   * @param multipleSelection true if you need to add the component to the list of components,\n   * false if you need to leave only the component you want to add in the list of selected components.\n   */\n  selectNode = (target: ComponentData, multipleSelection = false) => {\n    const isSelected = this.selected.has(target)\n\n    if (multipleSelection) {\n      isSelected\n        ? this.selected.delete(target)\n        : this.addNodeToSelection(target)\n    }\n\n    if (!multipleSelection && !isSelected) {\n      this.selected.clear()\n      this.addNodeToSelection(target)\n    }\n\n    if (!isSelected) this.expandParents(target)\n  }\n\n  /**\n   * Returns the component metadata for the specified component type name.\n   * @param type the component type name.\n   * @returns the component metadata for the specified component type name.\n   */\n  getComponentMetadata(type: string) {\n    return this.view.findMeta(type)\n      ?? this.builderComponents.find(value => value.model.type === type)?.meta\n      ?? this.view.getMeta(type)\n  }\n\n  /**\n   * @returns the array of metadata of form builder components.\n   */\n  get builderComponents() {\n    const result = [...this.view.builderComponents]\n    const types = result.map(value => value.model.type)\n    const typeSet = new Set<string>(types)\n    const currentFormComponent = BuilderView.createTemplateComponent(this.formName)\n    const externalForms = this.formsMetadata\n      .filter(value => !typeSet.has(value.model.type) && currentFormComponent.model.type !== value.model.type)\n    result.push(...externalForms)\n    return result\n  }\n\n  /**\n   * @returns form metadata from an external form storage.\n   */\n  get formsMetadata() {\n    return this.formStorageEnabled ? this.formStorage.builderComponents : []\n  }\n\n  /**\n   * Returns the property editor for the specified editorType.\n   * @param editorType the property editor type.\n   * @returns the property editor for the specified editorType.\n   */\n  getPropertyEditor(editorType: EditorType) {\n    const CustomEditor = this.#props.propertyEditors?.[editorType]\n    if (CustomEditor) {\n      return namedObserver(CustomEditor.displayName ?? editorType, CustomEditor)\n    }\n    return EditorMap[editorType]\n  }\n\n  /**\n   * Displays the modal window of the components.\n   * @param onSelect the callback function called when a component is selected.\n   */\n  showComponentsModal(onSelect: OnSelectCallback) {\n    this.componentsModalState.onSelect = onSelect\n    this.componentsModalState.opened = true\n  }\n\n  /**\n   * Displays the modal window for entering a value.\n   * @param props the modal window properties.\n   */\n  showPromptModal(props: PromptDialogProps) {\n    Object.assign(this.promptModalState, props, {opened: true, errorMessage: undefined})\n  }\n\n  private addNodeToSelection = (target: ComponentData) => {\n    this.selected.add(target)\n    treeForEach(this.viewer.form.componentTree, componentData => {\n      const meta = this.view.findMeta(componentData.model.type)\n      meta?.eventListeners?.onSelectNode?.(target, componentData)\n    })\n  }\n\n  /**\n   * Deletes the selected components from the component tree.\n   */\n  deleteSelectedComponents() {\n    const selectedComponents = Array.from(this.selected)\n\n    if (selectedComponents.length <= 0) return\n\n    const root = this.viewer.form.componentTree\n    const resultArray: ComponentData[] = []\n    const firstSelectedComponent = selectedComponents[0]\n\n    const firstSelectedParent = firstSelectedComponent.parent\n    if (firstSelectedParent) {\n      const index = firstSelectedParent.children.indexOf(firstSelectedComponent)\n      // Add components before the first selected component in reverse order\n      resultArray.push(...firstSelectedParent.children.slice(0, index).reverse())\n      resultArray.push(...firstSelectedParent.children.slice(index + 1))\n    }\n\n    let current = firstSelectedParent\n    while (current) {\n      resultArray.push(current)\n      current = current.parent\n    }\n\n    selectedComponents.forEach((component) => {\n      if (component !== root) {\n        this.remove(component)\n      }\n    })\n\n    const nextComponent = resultArray.find((component) => !!root.findByKey(component.key))\n    if (nextComponent) {\n      this.selectNode(nextComponent)\n    }\n  }\n}\n","/**\n * Converts number of bytes to human-readable string.\n * @param size number of bytes.\n * @returns number of bytes to human-readable string.\n */\nexport const humanizeFileSize = (size: number): string => {\n  const units = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n  let i = 0\n  while (size >= 1024) {\n    size /= 1024\n    ++i\n  }\n  const res = [size.toFixed(2), units[i]]\n  return res.join(' ')\n}\n","import {isUndefined} from 'lodash-es'\nimport {humanizeFileSize} from './formatters'\n\nconst isValidDate = (value: any) => value instanceof Date && !Number.isNaN(value.getTime())\n\n/**\n * Parses the JSON string into a JavaScript object.\n * @param value the JSON string.\n * @returns the JSON object or null if JSON parsing failed.\n */\nexport const parseJson = (value?: string) => {\n  if (isUndefined(value)) return undefined\n\n  try {\n    return JSON.parse(value)\n  } catch (objError) {\n    if (objError instanceof SyntaxError) {\n      console.error(objError.name)\n    }\n    return null\n  }\n}\n\nconst createFilePreview = ({lastModified, name, type, webkitRelativePath, size}: File): object => ({\n  lastModified: new Date(lastModified).toISOString(),\n  name,\n  type,\n  webkitRelativePath,\n  size: humanizeFileSize(size)\n})\n\n\n/**\n * Prepares data for JSON.stringify.\n * @param data the data for preparing.\n * @param options serialize options\n * @param options.previewNativeObjects create human-readable value for non-serializable objects\n * @returns the object prepared for JSON.stringify.\n */\nexport const prepareForJson = (data: any, options?: {\n  previewNativeObjects: boolean\n}) => {\n  if (typeof data !== 'object' || data === null) return data\n\n  const {previewNativeObjects} = options || {}\n\n  const filtered: any = {}\n  Object.entries(data).forEach(([key, value]) => {\n    const typeIs = (valueType: string) => typeof value == valueType\n\n    if (Array.isArray(value)) {\n      filtered[key] = value.map(item => prepareForJson(item, options))\n      return\n    }\n\n    if (previewNativeObjects && (value instanceof File)) {\n      filtered[key] = createFilePreview(value)\n      return\n    }\n\n    if (value instanceof Date) {\n      const data = isValidDate(value) ? value.toISOString() : 'Invalid date'\n      filtered[key] = data\n      return\n    }\n\n    if (typeIs('object')) {\n      filtered[key] = prepareForJson(value, options)\n      return\n    }\n\n    if (!(typeIs('string') || typeIs('number') || typeIs('boolean'))) {\n      return\n    }\n\n    filtered[key] = value\n  })\n\n  return filtered\n}\n","import {css} from '@emotion/react'\nimport styled from '@emotion/styled'\nimport type {IconDefinition} from '@fortawesome/fontawesome-common-types'\nimport * as faPlay from '@fortawesome/free-solid-svg-icons/faPlay.js'\nimport type {ComponentData, IFormData} from '@react-form-builder/core'\nimport {CalculableResult, forwardRef, initFormFields, namedObserver, useStore} from '@react-form-builder/core'\nimport {isUndefined} from 'lodash-es'\nimport type {editor} from 'monaco-editor'\nimport type {RefObject} from 'react'\nimport {useCallback, useEffect, useState} from 'react'\nimport {Button, Checkbox, Message} from 'rsuite'\nimport type {CheckboxProps} from 'rsuite/esm/Checkbox/Checkbox'\nimport type {TypeAttributes} from 'rsuite/esm/internals/types'\nimport {useBuilderStore} from '../../../utils/BuilderStoreContext'\nimport {prepareForJson} from '../../../utils/parseJson'\nimport {CodeEditor} from '../../components/CodeEditor/CodeEditor'\nimport {Columns, Rows} from '../../components/Containers'\nimport {FaIcon} from '../../components/Icons'\nimport {useTranslationPart} from '../../localization/hooks'\n\nconst editorOptions: editor.IStandaloneEditorConstructionOptions = {\n  contextmenu: false,\n  lineNumbers: 'off',\n  minimap: {enabled: false},\n  glyphMargin: false,\n  folding: false,\n  lineDecorationsWidth: 0,\n  lineNumbersMinChars: 0,\n  autoIndent: 'full'\n}\n\n/**\n * The TestingEditor instance\n */\nexport type TestingEditorRef = {\n  /**\n   * The testing function.\n   * @returns the {@link CalculableResult}.\n   */\n  test?: () => CalculableResult\n}\ntype TestingFunction = (data: IFormData) => CalculableResult\ntype TestingEditorProps = { testingFunction: TestingFunction }\ntype TestRunnerProps = { data?: string, testingFunction: TestingFunction, compact?: boolean }\n\nconst RawTestingEditor = forwardRef(({testingFunction}: TestingEditorProps, ref) => {\n  const t = useTranslationPart('testingEditor')\n  const builderStore = useBuilderStore()\n  const {formData} = useStore()\n  const [data, setData] = useState(builderStore.testingData ?? init(formData))\n  const [initialData] = useState(data)\n\n  useEffect(() => () => {\n    builderStore.testingData = data\n  }, [builderStore, data])\n\n  return (\n    <Rows style={{flex: 1, minHeight: 100, minWidth: 0, alignItems: 'start', position: 'relative'}}>\n      <span style={{marginTop: -40, paddingBlock: 7, opacity: 0.6}}>{t('testFormData')}</span>\n      <div style={{flex: 1, minHeight: 20, width: '100%'}}>\n        <CodeEditor language=\"json\" initialValue={initialData} onChange={setData} options={editorOptions}/>\n      </div>\n      <TestRunner data={data} testingFunction={testingFunction} ref={ref}/>\n    </Rows>\n  )\n})\n\nexport const TestingEditor = namedObserver('TestingEditor', RawTestingEditor)\n\nconst RawTestRunner = forwardRef(({data, testingFunction, compact}: TestRunnerProps, ref) => {\n  const t = useTranslationPart('testingEditor')\n  const builderStore = useBuilderStore()\n  const [result, setResult] = useState<CalculableResult>()\n\n  const test = useCallback(() => {\n    const calculated = calculate(data ?? '{}', testingFunction)\n    setResult(calculated)\n    return calculated\n  }, [data, testingFunction])\n\n  useEffect(() => {\n    if (ref && typeof ref === 'object') {\n      ((ref as RefObject<TestingEditorRef>).current ?? {}).test = test\n    }\n\n    if (builderStore.testingAutorun) {\n      test()\n      return\n    }\n    setResult(undefined)\n  }, [test, builderStore.testingAutorun, ref])\n\n  const handleAutorunChecked: CheckboxProps['onChange'] = (_, val) => builderStore.testingAutorun = val\n\n  const buttons = <Columns\n    style={{justifyContent: compact ? 'end' : 'space-between', paddingInlineEnd: 10, paddingTop: 3, alignItems: 'end', flex: 1}}>\n    {compact && result && <TestingResult compact result={result} onClose={() => setResult(undefined)}/>}\n    <Button onClick={test} size={'sm'} appearance={'ghost'} style={{display: 'flex', gap: 10}}>\n      <FaIcon icon={faPlay as unknown as IconDefinition}/> {t('run')}\n    </Button>\n    <Checkbox checked={builderStore.testingAutorun} onChange={handleAutorunChecked} style={{height: 32}}>{t('autorun')}</Checkbox>\n  </Columns>\n\n  return compact\n    ? buttons\n    : <Rows style={{width: '100%', flex: 0}}>\n      {result && <TestingResult result={result} onClose={() => setResult(undefined)}/>}\n      {buttons}\n    </Rows>\n})\n\nexport const TestRunner = namedObserver('TestRunner', RawTestRunner)\n\nconst messageColor: Partial<Record<TypeAttributes.Status, string>> = {\n  error: 'var(--rs-red-500)',\n  warning: 'var(--rs-orange-400)',\n  success: 'var(--rs-green-500)'\n}\n\nconst messageColors = (type: TypeAttributes.Status) => css`\n  .rs-theme-dark && {\n    background-color: initial !important;\n\n    .rs-message-body, .rs-btn-close {\n      color: white;\n    }\n\n    .rs-message-icon-wrapper .rs-icon {\n      color: ${messageColor[type]} !important;\n    }\n  }\n`\n\nconst SCompactMessage = styled(Message)<{ type: TypeAttributes.Status }>`\n  ${({type}) => messageColors(type)};\n  background-color: initial !important;\n  flex: 1;\n\n  .rs-message-container {\n    padding: 5px;\n  }\n`\n\nconst SMessage = styled(Message)<{ type: TypeAttributes.Status }>`\n  ${({type}) => messageColors(type)};\n  border-radius: 6px;\n  border: 2px solid ${({type}) => messageColor[type]};\n`\n\nconst TestingResult = ({result, onClose, compact}: { result: CalculableResult, onClose: () => void, compact?: boolean }) => {\n  const MessageComponent = compact ? SCompactMessage : SMessage\n  const formattedContent = (\n    <div style={{maxHeight: 80, overflow: 'auto', wordBreak: 'break-word'}}>\n        <pre style={{whiteSpace: 'pre-wrap', margin: 0}}>\n          <ResultMessage result={result}/>\n        </pre>\n    </div>\n  )\n  return (\n    <MessageComponent type={getType(result)} closable={!compact} onClose={onClose} showIcon>\n      {compact ? <ResultMessage result={result}/> : formattedContent}\n    </MessageComponent>\n  )\n}\n\nconst ResultMessage = ({result}: { result: CalculableResult }) => {\n  const t = useTranslationPart('testingEditor')\n  return <div>\n    {!isUndefined(result.result)\n      ? stringify(result?.result)\n      : result.exceptions?.map(e => e.message) ?? t('hasNotReturnedValue')\n    }\n  </div>\n}\n\nfunction calculate(data: string, testingFunction: TestingFunction) {\n  try {\n    const {data: parsedData, errors} = JSON.parse(data)\n    return testingFunction(new TestFormData(parsedData, errors))\n  } catch (e: any) {\n    return CalculableResult.error([e])\n  }\n}\n\nconst init = (data: ComponentData) => {\n  return stringify({data: initFormFields(data), errors: {}})\n}\n\nconst stringify = (data: any) => {\n  if (typeof data === 'string') return data\n  return JSON.stringify(prepareForJson(data, {previewNativeObjects: true}), null, 2)\n}\n\nconst getType = (result: CalculableResult): TypeAttributes.Status => {\n  if (!isUndefined(result.result) && !result.warning) {\n    return 'success'\n  }\n\n  if (result.warning) {\n    return 'warning'\n  }\n\n  if (result.error || result.exceptions) {\n    return 'error'\n  }\n\n  return 'warning'\n}\n\n/**\n * The class for accessing the test form data.\n */\nexport class TestFormData implements IFormData {\n  index = undefined\n  state = {}\n  hasErrors = false\n  isValidating = false\n  parentData: Record<string, unknown> = {}\n  rootData: Record<string, unknown> = {}\n\n  /**\n   * Constructor\n   * @param data the test form data.\n   * @param errors the test form errors.\n   */\n  constructor(public data = {}, public errors = {}) {\n  }\n\n  /** @inheritDoc */\n  clear() {\n    this.data = {}\n  }\n\n  /** @inheritDoc */\n  validate() {\n    return Promise.resolve()\n  }\n\n  /** @inheritDoc */\n  reset() {\n  }\n\n  /** @inheritDoc */\n  setAllErrors() {\n  }\n\n  /** @inheritDoc */\n  getValidationResult() {\n    return Promise.resolve(undefined)\n  }\n\n  /** @inheritDoc */\n  get fluentData() {\n    return this.data\n  }\n}\n","import styled from '@emotion/styled'\nimport type {BaseCompilationResult, IFormData} from '@react-form-builder/core'\nimport {action} from 'mobx'\nimport {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {useTranslation} from 'react-i18next'\nimport {Button, ButtonGroup} from 'rsuite'\nimport {CodeEditor} from '../components/CodeEditor/CodeEditor'\nimport type {CodeEditorLanguage} from '../components/CodeEditor/CodeEditorProps'\nimport {Columns, Rows} from '../components/Containers'\nimport type {TestingEditorRef} from '../ui/BottomPanel/TestingEditor'\nimport {TestingEditor, TestRunner} from '../ui/BottomPanel/TestingEditor'\n\n/**\n * Properties of the React component {@link GenericCodeEditor}.\n */\nexport interface GenericCodeEditorProps {\n  /**\n   * Context line before the source code.\n   */\n  beginContextLine?: string\n  /**\n   * Context line after the source code.\n   */\n  endContextLine?: string\n  /**\n   * Language mode.\n   */\n  language?: CodeEditorLanguage;\n  /**\n   * The source code.\n   */\n  source?: string\n  /**\n   * The callback function called when the source code is saved.\n   * @param the source code.\n   */\n  onSave: (value: string) => void\n  /**\n   * The callback function called when the editor is closed.\n   */\n  onClose: () => void\n  /**\n   * The callback function called at compile time.\n   * @param sourceCode the source code.\n   * @param formData the test form data.\n   * @returns the compilation result.\n   */\n  onCompile: (sourceCode: string, formData: IFormData) => BaseCompilationResult\n  /**\n   * The compact style without test data.\n   */\n  compact?: boolean\n}\n\n/**\n * Generic code editor.\n * @param props the React component properties\n * @returns the React element.\n */\nexport const GenericCodeEditor = (props: GenericCodeEditorProps) => {\n  const {t} = useTranslation()\n  const codePlaceHolder = t('codeEditor.codePlaceholder')\n  const {onCompile, onSave} = props\n  const propsSourceCode = useMemo(() => props.source ?? codePlaceHolder, [props.source, codePlaceHolder])\n  const [sourceCode, setSourceCode] = useState(propsSourceCode)\n  const [initialValue, setInitialValue] = useState(propsSourceCode)\n  const testingEditor = useRef<TestingEditorRef>({})\n\n  const handleSave = useCallback(() => {\n    const result = testingEditor.current.test?.()\n    if (result?.error) return\n    action(() => onSave(sourceCode))()\n    setInitialValue(sourceCode)\n  }, [onSave, sourceCode])\n\n  useEffect(() => {\n    setInitialValue(propsSourceCode)\n    setSourceCode(propsSourceCode)\n  }, [propsSourceCode])\n\n  const testingFunction = useCallback((formData: IFormData) => onCompile(sourceCode, formData), [sourceCode, onCompile])\n\n  return <Columns style={{minHeight: 0, flex: 1}}>\n    <Rows gap={10} style={{minHeight: 0, flex: 1.5}}>\n      <CodeEditor beginContextLine={props.beginContextLine} endContextLine={props.endContextLine}\n                  initialValue={initialValue} language={props.language} onChange={setSourceCode}/>\n      <SDiv>\n        <ButtonGroup size={'sm'}>\n          <Button appearance=\"primary\" onClick={handleSave}>{t('common.save')}</Button>\n          <Button appearance=\"ghost\" onClick={() => props.onClose()}>{t('common.close')}</Button>\n        </ButtonGroup>\n        {props.compact && <TestRunner testingFunction={testingFunction} ref={testingEditor} compact/>}\n      </SDiv>\n    </Rows>\n    {!props.compact && <TestingEditor testingFunction={testingFunction} ref={testingEditor}/>}\n  </Columns>\n}\n\nconst SDiv = styled.div`\n  display: flex;\n  gap: 10px;\n  align-items: end;\n  justify-content: space-between;\n`\n","import styled from '@emotion/styled'\n\nexport const Header = styled.div`\n  display: flex;\n  gap: 25px;\n  width: 100%;\n  align-items: center;\n`\n","import styled from '@emotion/styled'\nimport type {ParameterName, ParameterType} from '@react-form-builder/core'\nimport {toLabeledValues} from '@react-form-builder/core'\nimport {ArrowDownLine, ArrowUpLine, Close} from '@rsuite/icons'\nimport {useRef, useState} from 'react'\nimport {useTranslation} from 'react-i18next'\nimport type {FormInstance} from 'rsuite'\nimport {Animation, Form, InputPicker, Schema} from 'rsuite'\nimport {Columns, Rows} from '../../../../../components/Containers'\nimport type {Parameter} from '../../ActionList/ActionItem/components/ArgumentList/ArgumentItem/Parameter'\n\ninterface ParameterItemProps {\n  value: Parameter\n  onRemove: () => void\n  onChange: (value: Parameter) => void\n  parameters?: Parameter[]\n}\n\nconst ArgumentTypes = toLabeledValues(['string', 'number', 'boolean'], false)\n\ntype FormModel = { name: ParameterName, type: ParameterType }\n\nconst validParamName = /^[A-Za-z_]+[A-Za-z0-9_]*$/\nconst isValidParamName = (name: string) => validParamName.test(name)\n\nconst ParamName = ({value, collapsed, onClick}: { value: Parameter, collapsed: boolean, onClick: () => void }) => {\n  const [name, type] = value\n  const ParamIcon = collapsed ? ArrowDownLine : ArrowUpLine\n  return <SParamName onClick={onClick}><ParamIcon/> {name}: {type}</SParamName>\n}\n\n/**\n * The React form builder component that displays the action parameter.\n * @param props the React component properties.\n * @param props.value the parameter description.\n * @param props.onRemove the callback function called when data should be removed.\n * @param props.onChange the callback function called when data should be changed.\n * @param props.parameters the action parameters.\n * @returns the React element.\n */\nexport const ParameterItem = ({value, onRemove, onChange, parameters}: ParameterItemProps) => {\n  const [paramName, paramType] = value\n  const [collapsed, setCollapsed] = useState(true)\n  const {t} = useTranslation()\n  const [formState, setFormState] = useState<FormModel>({name: paramName, type: paramType})\n  const formRef = useRef<FormInstance>(null)\n\n  const isValid = (name: string) => name === paramName || !parameters?.find(([pName]) => pName === name)\n\n  const isFormValid = (value: FormModel) => {\n    return isValid(value.name) && isValidParamName(value.name)\n  }\n\n  const updateFormState = (value: FormModel) => {\n    setFormState(value)\n    if (isFormValid(value)) onChange([value.name, value.type])\n  }\n\n  const model = Schema.Model({\n    name: Schema.Types.StringType()\n      .isRequired(t('codeActionEditor.parameterNameIsRequired'))\n      .addRule(isValid, t('codeActionEditor.parameterNameExists'))\n      .addRule(isValidParamName, t('codeActionEditor.parameterNameIsNotValid'))\n  })\n\n  return <div>\n    <Columns style={{justifyContent: 'space-between'}}>\n      <ParamName value={[formState.name, formState.type]} collapsed={collapsed} onClick={() => setCollapsed(!collapsed)}/>\n      <RemoveButton onClick={onRemove}/>\n    </Columns>\n\n    <Animation.Collapse in={!collapsed} unmountOnExit>\n      <Rows gap={10}>\n        <Form model={model} checkTrigger={'change'} formValue={formState} ref={formRef}\n              onChange={data => updateFormState({name: data.name, type: data.type})}>\n          <Form.Group>\n            <Form.ControlLabel>{t('actions.name')}</Form.ControlLabel>\n            <Form.Control name=\"name\" style={{maxWidth: '100%'}}/>\n          </Form.Group>\n          <Form.Group>\n            <Form.ControlLabel>{t('actions.type')}</Form.ControlLabel>\n            <Form.Control name=\"type\" accepter={InputPicker} data={ArgumentTypes}\n                          cleanable={false} creatable={false}/>\n          </Form.Group>\n        </Form>\n      </Rows>\n    </Animation.Collapse>\n  </div>\n}\n\nconst RemoveButton = styled(Close)`\n  margin-top: 5px;\n  cursor: pointer;\n`\n\nconst SParamName = styled.span`\n  cursor: pointer;\n`\n","import {generateUniqueName} from '@react-form-builder/core'\nimport {useEffect, useState} from 'react'\nimport {Button} from 'rsuite'\nimport {Columns, Rows} from '../../../../../components/Containers'\nimport {useTranslationPart} from '../../../../../localization/hooks'\nimport type {Parameter} from '../../ActionList/ActionItem/components/ArgumentList/ArgumentItem/Parameter'\nimport {ParameterItem} from './ParameterItem'\n\n/**\n * The React {@link ParameterList} component properties.\n */\ninterface ParameterPanelProps {\n\n  /**\n   * The array of action parameters.\n   */\n  value?: Parameter[]\n\n  /**\n   * the callback function called when data should be changed.\n   * @param value the array of parameters.\n   */\n  onChange: (value?: Parameter[]) => void\n}\n\n/**\n * React form builder component that displays the list of action parameters.\n * @param props the React component properties.\n * @param props.value the array of action parameters.\n * @param props.onChange the callback function called when data should be changed.\n * @returns the React element.\n */\nexport const ParameterList = ({value, onChange}: ParameterPanelProps) => {\n  const t = useTranslationPart('actions')\n  const [params, setParams] = useState(value)\n\n  useEffect(() => {\n    setParams(value)\n  }, [value])\n\n  const changeParams = (value?: Parameter[]) => {\n    setParams(value)\n    onChange(value)\n  }\n\n  const handleCreateParam = () => {\n    const names = params?.map(value => value[0]) ?? []\n    const existingNames = new Set(names)\n    const paramName = generateUniqueName('prop', existingNames)\n    const newParam: Parameter = [paramName, 'string']\n    const paramArray = params ? [...params, newParam] : [newParam]\n    changeParams(paramArray)\n  }\n\n  const handleRemoveParam = (index: number) => {\n    const paramArray = params ? [...params] : []\n    paramArray?.splice(index, 1)\n    changeParams(paramArray)\n  }\n\n  const handleChangeParam = (value: Parameter, index: number) => {\n    const paramArray = params ? [...params] : []\n    paramArray[index] = value\n    changeParams(paramArray)\n  }\n\n  const items = params?.map((param, index) => {\n    return <ParameterItem key={index} value={param} onRemove={() => handleRemoveParam(index)} parameters={params}\n                          onChange={value => handleChangeParam(value, index)}/>\n  })\n\n  return (\n    <Rows style={{maxWidth: 240}}>\n      <Columns style={{alignItems: 'center', justifyContent: 'space-between', height: 34}}>\n        <h6>{t('parameters')}</h6>\n        <Button onClick={handleCreateParam} appearance={'link'}><h6>{t('add')}</h6></Button>\n      </Columns>\n\n      <Rows style={{overflow: 'auto'}}>\n        {items}\n      </Rows>\n    </Rows>\n  )\n}\n","import styled from '@emotion/styled'\nimport type {ActionParameters, NamedActionDefinition} from '@react-form-builder/core'\nimport {ActionDefinition, AsyncFunction, CalculableResult, useStore} from '@react-form-builder/core'\nimport {useEffect, useMemo, useRef, useState} from 'react'\nimport {useTranslation} from 'react-i18next'\nimport type {FormInstance} from 'rsuite'\nimport {Form, Schema} from 'rsuite'\nimport {useBuilderStore} from '../../../../../utils/BuilderStoreContext'\nimport {GenericCodeEditor} from '../../../../calculation/GenericCodeEditor'\nimport {Columns, Rows} from '../../../../components/Containers'\nimport {Header} from '../../../../ui/BottomPanel/Header'\nimport type {Parameter} from '../ActionList/ActionItem/components/ArgumentList/ArgumentItem/Parameter'\nimport {ParameterList} from './components/ParameterList'\n\n/**\n * Represents data for the code action editor.\n */\nexport type CodeActionEditorData = {\n  /**\n   * The action name.\n   */\n  name: string\n  /**\n   * The action source code.\n   */\n  body: string\n  /**\n   * The set of action parameters.\n   */\n  params?: ActionParameters\n}\n\ntype FormModel = CodeActionEditorData & { actionParameters?: Parameter[] }\n\nconst paramsToArray = (params?: ActionParameters): Parameter[] | undefined => {\n  if (!params) return\n  return Object.entries(params).map(([name, type]) => [name, type])\n}\n\nconst paramsFromArray = (params?: Parameter[]): ActionParameters | undefined => {\n  if (!params) return\n  const result: ActionParameters = {}\n  params.forEach(([name, type]) => result[name] = type)\n  return result\n}\n\n/**\n * The properties of the CodeActionEditor component.\n */\nexport interface CodeActionEditorProps {\n  /**\n   * The data for the custom action editor.\n   */\n  codeAction: CodeActionEditorData\n  /**\n   * The callback function called when a custom action is saved.\n   * @param namedAction the named action definition.\n   */\n  onSave: (namedAction: NamedActionDefinition) => void\n}\n\n/**\n * React form builder component that displays a custom action code editor.\n * @param props the EditableAction data\n * @param props.codeAction the code action.\n * @param props.onSave the callback function called when data should be saved.\n * @returns the React element.\n */\nexport const CodeActionEditor = ({codeAction, onSave}: CodeActionEditorProps) => {\n  const {t} = useTranslation()\n  const store = useStore()\n  const builderStore = useBuilderStore()\n  const initialFormModel: FormModel = useMemo(() => ({...codeAction, actionParameters: paramsToArray(codeAction.params)}),\n    [codeAction])\n\n  const [formState, setFormState] = useState<FormModel>(initialFormModel)\n  const [initialBody, setInitialBody] = useState(codeAction.body)\n\n  const formRef = useRef<FormInstance>(null)\n\n  const functionHeader = useMemo(() => makeFunctionHeader(formState.actionParameters), [formState.actionParameters])\n\n  useEffect(() => {\n    setFormState(initialFormModel)\n    setInitialBody(initialFormModel.body)\n    formRef.current?.cleanErrors()\n  }, [codeAction, initialFormModel])\n\n  const model = Schema.Model({\n    name: Schema.Types.StringType()\n      .isRequired(t('codeActionEditor.nameIsRequired'))\n      .addRule(name => {\n        return codeAction.name === formState.name || !store.form.actions[name]\n      }, t('codeActionEditor.actionNameExists'))\n  })\n\n  const updateFormState = (delta: Partial<FormModel>) => {\n    setFormState(prevState => ({...prevState, ...delta}))\n  }\n\n  const close = () => builderStore.currentEditable = undefined\n\n  const save = (source: string) => {\n    if (!formRef.current?.check()) return\n    const actionDefinition = ActionDefinition.sourceAction(source, paramsFromArray(formState.actionParameters))\n    const namedAction: NamedActionDefinition = {name: formState.name, actionDefinition}\n    onSave?.(namedAction)\n  }\n\n  const compile = (source: string): CalculableResult => {\n    AsyncFunction(source)\n    return CalculableResult.success(t('testingEditor.compilationOk'))\n  }\n\n  return <>\n    <Header>\n      {t('bottomPanel.editCodeAction')}\n    </Header>\n    <Container>\n      <Rows gap={10}>\n        <Form model={model} checkTrigger={'change'} formValue={formState} ref={formRef}\n              onChange={data => updateFormState({name: data.name})}>\n          <Form.Control name={'name'} style={{width: '100%'}}/>\n        </Form>\n        <GenericCodeEditor beginContextLine={functionHeader}\n                           endContextLine=\"}\" source={initialBody ?? ''}\n                           onSave={save} onClose={close}\n                           onCompile={compile} compact\n        />\n      </Rows>\n      <ParameterList value={formState.actionParameters}\n                     onChange={value => updateFormState({actionParameters: value})}/>\n    </Container>\n  </>\n}\n\nconst Container = styled(Columns)`\n  gap: 20px;\n  flex: 1;\n  min-height: 0;\n`\n\nconst makeFunctionHeader = (params?: Parameter[]) => {\n  let types = '@param {} args - the action parameters arguments.'\n  if (params?.length) {\n    const names: string[] = params.map(([name, type]) => `${name}: ${type}`)\n    types = `@param {{${names.join(', ')}}} args - the action parameters arguments.`\n  }\n\n  return `/**\n * @param {ActionEventArgs} e - the action arguments.\n * ${types}\n */\nasync function Action (e, args) {`\n}\n","import {calculatePropertyValue} from '@react-form-builder/core'\nimport type {EditableProperty} from '../../stores/BuilderStore'\nimport type {GenericCodeEditorProps} from './GenericCodeEditor'\nimport {GenericCodeEditor} from './GenericCodeEditor'\n\n/**\n * Properties of the React component {@link CalculableCodeEditor}.\n */\nexport interface CalculableCodeEditorProps {\n  /**\n   * The editable property.\n   */\n  editableProperty: EditableProperty\n  /**\n   * The callback function called when the editor is closed.\n   */\n  onClose: () => void\n}\n\n/**\n * The React form builder component that displays a code editor for a calculated property.\n * @param props props the React component properties.\n * @param props.editableProperty the parameters of the calculated component property.\n * @param props.onClose the callback function called when closing the code editor.\n * @returns the React element.\n */\nexport const CalculableCodeEditor = ({editableProperty, onClose}: CalculableCodeEditorProps) => {\n  const saveCode = (sourceCode: string) => {\n    editableProperty.setComputeCode(sourceCode, 'function')\n  }\n\n  const functionHeader = `/**\n * @param {IFormData} form\n * @return {${editableProperty.annotation.type}}\n */\nfunction Calculation (form) {`\n\n  const onCompile: GenericCodeEditorProps['onCompile'] = (sourceCode, formData) => {\n    return calculatePropertyValue({fnSource: sourceCode}, formData)\n  }\n\n  return <GenericCodeEditor key={editableProperty.annotation.key}\n                            beginContextLine={functionHeader}\n                            endContextLine=\"}\"\n                            source={editableProperty.getComputeCode('function')}\n                            onSave={saveCode}\n                            onClose={onClose}\n                            onCompile={onCompile}\n  />\n}\n","import styled from '@emotion/styled'\nimport type {Language} from '@react-form-builder/core'\nimport {namedObserver} from '@react-form-builder/core'\nimport {toUpper} from 'lodash-es'\nimport type {ReactNode} from 'react'\nimport {useCallback, useMemo} from 'react'\nimport type {ItemDataType} from 'rsuite/esm/internals/types'\nimport type {SelectProps} from 'rsuite/esm/SelectPicker'\nimport {useBuilderStore} from '../../../utils/BuilderStoreContext'\nimport {FixedSelectPicker} from '../../ui/FixedSelectPicker'\n\n/**\n * LocalizationPicker React component properties.\n */\nexport interface LocalizationPickerProps {\n  /**\n   * The full code of the selected language.\n   */\n  value: string\n  /**\n   * The callback function called when the selected language is changed.\n   * @param language the selected language.\n   */\n  onSelect: (language: Language) => void\n}\n\nconst RawLocalizationPicker = ({value, onSelect}: LocalizationPickerProps) => {\n  const {availableLanguages} = useBuilderStore()\n\n  const langData = useMemo(() => {\n    return availableLanguages.reduce((result, language) => {\n      result[language.fullCode] = language\n      return result\n    }, {} as Record<string, Language>)\n  }, [availableLanguages])\n\n  const data = useMemo(() => Object.entries(langData).map(([key, {code}]) => {\n    return ({value: key, label: toUpper(code)} as ItemDataType<string>)\n  }), [langData])\n\n  const handleSelect = useCallback((code: string) => onSelect(langData[code]), [langData, onSelect])\n\n  const renderMenuItem: SelectProps<string>['renderMenuItem'] = useCallback((_: ReactNode, {value}: ItemDataType) => {\n    return !!value && renderLanguageItem(langData[value])\n  }, [langData])\n\n  return <SPicker value={value}\n                  data={data}\n                  onSelect={handleSelect}\n                  cleanable={false}\n                  placement={'autoVerticalEnd'}\n                  size={'sm'}\n                  searchable={false}\n                  width={62}\n                  renderMenuItem={renderMenuItem}/>\n}\n\nexport const LocalizationPicker = namedObserver('LocalizationPicker', RawLocalizationPicker)\n\n/**\n * The function that renders the languages list item.\n * @param language the language.\n * @returns the React element.\n */\nexport const renderLanguageItem = (language: Language) => {\n  const {name, code} = language\n  return <LanguageItem><label>{toUpper(code)}</label>{name}</LanguageItem>\n}\n\nconst LanguageItem = styled.div`\n  display: flex;\n  gap: 10px;\n\n  label {\n    min-width: 20px;\n    text-align: center;\n    font-weight: bold;\n  }\n`\n\nconst SPicker = styled(FixedSelectPicker)`\n  .rs-picker-toggle-value {\n    color: var(--rs-btn-default-text) !important;\n    line-height: 22px;\n  }\n\n  .rs-picker-toggle {\n    background-color: var(--rs-btn-default-bg) !important;\n    border: none;\n    min-width: 30px;\n  }\n`\n","import styled from '@emotion/styled'\nimport type {IFormData} from '@react-form-builder/core'\nimport {getFluentCompatibleId, getFluentData, namedObserver, testFluentLocalization} from '@react-form-builder/core'\nimport {action} from 'mobx'\nimport {useCallback, useEffect, useMemo, useRef, useState} from 'react'\nimport {Button, ButtonGroup} from 'rsuite'\nimport {useBuilderStore} from '../../utils/BuilderStoreContext'\nimport type {CalculableCodeEditorProps} from '../calculation/CalculableCodeEditor'\nimport {CodeEditor} from '../components/CodeEditor/CodeEditor'\nimport {Columns, Rows} from '../components/Containers'\nimport type {TestingEditorRef} from '../ui/BottomPanel/TestingEditor'\nimport {TestingEditor} from '../ui/BottomPanel/TestingEditor'\nimport {LocalizationPicker} from './components/LocalizationPicker'\nimport {fluentLanguageId} from './consts'\nimport {useTranslationPart} from './hooks'\n\nconst RawLocalizationEditor = ({editableProperty, onClose}: CalculableCodeEditorProps) => {\n  const t = useTranslationPart('common')\n  const localizationStringId = getFluentCompatibleId(`${editableProperty.componentKey}_${editableProperty.annotation.key}`)\n  const builderStore = useBuilderStore()\n  const testingEditor = useRef<TestingEditorRef>({})\n\n  const [language, setLanguage] = useState(builderStore.localizationLanguage)\n  const initialValue = useMemo(() => {\n    return editableProperty.getComputeCode('localization', {langCode: language.fullCode})\n  }, [editableProperty, language])\n  const [value, setValue] = useState(initialValue)\n  useEffect(() => {\n    setValue(initialValue)\n  }, [initialValue, language, editableProperty])\n\n  const handleSave = () => {\n    const result = testingEditor.current.test?.()\n    if (result?.error || result?.exceptions) return\n    action(() => editableProperty.setComputeCode(value, 'localization', {langCode: language.fullCode}))()\n  }\n\n  const beginContextLine = `${localizationStringId} =`\n  const endContextLine = ''\n\n  const testingFunction = useCallback(\n    (formData: IFormData) => testFluentLocalization({\n      localizationStringId: localizationStringId,\n      localization: value,\n      data: getFluentData(formData.data),\n      language\n    }),\n    [localizationStringId, value, language]\n  )\n\n  return <Columns style={{minHeight: 0, flex: 1}}>\n    <Rows gap={10} style={{minHeight: 0, minWidth: 0, flex: 1.5}}>\n      <CodeEditor key={`${editableProperty.annotation.key}_${language.fullCode}`} language={fluentLanguageId}\n                  initialValue={initialValue}\n                  beginContextLine={beginContextLine}\n                  endContextLine={endContextLine} canEditBeginContextLine={true} onChange={setValue}/>\n      <SDiv>\n        <ButtonGroup size={'sm'}>\n          <Button appearance=\"primary\" onClick={handleSave}>{t('save')}</Button>\n          <Button appearance=\"ghost\" onClick={onClose}>{t('close')}</Button>\n        </ButtonGroup>\n        <LocalizationPicker value={language.fullCode} onSelect={setLanguage}/>\n      </SDiv>\n    </Rows>\n    <TestingEditor testingFunction={testingFunction} ref={testingEditor}/>\n  </Columns>\n}\n\nexport const LocalizationEditor = namedObserver('LocalizationEditor', RawLocalizationEditor)\n\nconst SDiv = styled.div`\n  display: flex;\n  gap: 10px;\n  align-items: center;\n`\n","import styled from '@emotion/styled'\nimport {useTranslation} from 'react-i18next'\nimport {Button, ButtonGroup} from 'rsuite'\nimport type {CalculableCodeEditorProps} from '../../calculation/CalculableCodeEditor'\nimport {Rows} from '../../components/Containers'\n\n/**\n * The React form builder component that displays a simple value editor for a property.\n * @param props the React component properties.\n * @param props.editableProperty the parameters of the calculated component property.\n * @param props.onClose the callback function called when closing the code editor.\n * @returns the React element.\n */\nexport const SimpleValueEditor = ({editableProperty, onClose}: CalculableCodeEditorProps) => {\n  const {t} = useTranslation()\n  return <Rows>\n    <SDiv>{t('bottomPanel.simpleValueHint')}</SDiv>\n    <ButtonGroup size={'sm'}>\n      <Button appearance=\"ghost\" onClick={editableProperty.disableCompute}>{t('common.save')}</Button>\n      <Button appearance=\"ghost\" onClick={onClose}>{t('common.close')}</Button>\n    </ButtonGroup>\n  </Rows>\n}\n\nconst SDiv = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n","import type {Annotation, ComponentPropertyComputeType} from '@react-form-builder/core'\nimport {namedObserver} from '@react-form-builder/core'\nimport {useCallback, useEffect, useState} from 'react'\nimport {useTranslation} from 'react-i18next'\nimport type {EditableProperty} from '../../../stores/BuilderStore'\nimport {useBuilderStore} from '../../../utils/BuilderStoreContext'\nimport {CalculableCodeEditor} from '../../calculation/CalculableCodeEditor'\nimport {RadioButtons} from '../../components/RadioButtons'\nimport {LocalizationEditor} from '../../localization/LocalizationEditor'\nimport {Header} from './Header'\nimport {SimpleValueEditor} from './SimpleValueEditor'\n\ntype ComputeType = ComponentPropertyComputeType | 'simpleValue'\n\nconst editors: Record<ComputeType, any> = {\n  function: CalculableCodeEditor,\n  localization: LocalizationEditor,\n  simpleValue: SimpleValueEditor\n}\n\n/**\n * ComputedPropertyEditor React component properties.\n */\nexport interface ComputedPropertyEditorProps {\n  /**\n   * The editable computable property.\n   */\n  property: EditableProperty\n}\n\nconst buttonsStyle = {flex: 0}\n\nconst RawComputedPropertyEditor = ({property}: ComputedPropertyEditorProps) => {\n  const builderStore = useBuilderStore()\n  const {t} = useTranslation()\n  const initialComputeType = property.getComputeType() ?? 'simpleValue'\n  const [computeType, setComputeType] = useState<ComputeType>(initialComputeType)\n  const {annotation, componentKey} = property\n  const Editor = editors[computeType]\n  const toggleItems = getToggleItems(annotation, t)\n  const handleClose = useCallback(() => builderStore.currentEditable = undefined, [builderStore])\n  const handleComputeTypeChange = useCallback((value: string | number) => setComputeType(value as ComponentPropertyComputeType), [])\n\n  useEffect(() => setComputeType(initialComputeType), [initialComputeType])\n\n  return <>\n    <Header>\n      {`${t('bottomPanel.editProperty')}: ${componentKey}.${annotation.name}`}\n      {toggleItems.length &&\n        <RadioButtons value={computeType} label={'Use'} items={toggleItems} style={buttonsStyle} onChange={handleComputeTypeChange}/>\n      }\n    </Header>\n    <Editor editableProperty={property} onClose={handleClose}/>\n  </>\n}\n\nexport const ComputedPropertyEditor = namedObserver('ComputedPropertyEditor', RawComputedPropertyEditor)\n\nconst getToggleItems = ({calculable, localizable}: Annotation, translate: (key: string) => string) => [\n  ...calculable ? ['function'] : [],\n  ...localizable ? ['localization'] : [],\n  ...calculable || localizable ? ['simpleValue'] : []\n].map(value => ({label: translate(`bottomPanel.${value}`), value}))\n","import {AsyncFunction, CalculableResult, namedObserver} from '@react-form-builder/core'\nimport {useCallback} from 'react'\nimport {useTranslation} from 'react-i18next'\nimport type {CustomValidationCode} from '../../../stores/BuilderStore'\nimport {useBuilderStore} from '../../../utils/BuilderStoreContext'\nimport {GenericCodeEditor} from '../../calculation/GenericCodeEditor'\nimport {Header} from './Header'\n\nconst RawCustomValidationCodeEditor = (props: CustomValidationCode) => {\n  const {t} = useTranslation()\n  const builderStore = useBuilderStore()\n\n  const beginContextLine = props.functionSignature\n  const endContextLine = '}'\n\n  const handleClose = useCallback(() => builderStore.currentEditable = undefined, [builderStore])\n  const handleCompile = useCallback((value: string) => {\n    const source = `${beginContextLine}\\n${value}\\n${endContextLine}`\n    try {\n      AsyncFunction(source)\n      return CalculableResult.success(t('testingEditor.compilationOk'))\n    } catch (e) {\n      return CalculableResult.error([e as Error])\n    }\n  }, [beginContextLine, endContextLine, t])\n\n  return <>\n    <Header>{t('validation.editCustomValidationCode')} '{props.editorKey}'</Header>\n    <GenericCodeEditor key={props.editorKey}\n                       beginContextLine={beginContextLine}\n                       endContextLine={endContextLine}\n                       source={props.code}\n                       onSave={props.onSave}\n                       onClose={handleClose}\n                       onCompile={handleCompile}\n                       compact\n    />\n  </>\n}\n\nexport const CustomValidationCodeEditor = namedObserver('CustomValidationCodeEditor', RawCustomValidationCodeEditor)\n","import {CalculableResult, namedObserver} from '@react-form-builder/core'\nimport {useCallback} from 'react'\nimport {useTranslation} from 'react-i18next'\nimport type {JsonCode} from '../../../stores/BuilderStore'\nimport {useBuilderStore} from '../../../utils/BuilderStoreContext'\nimport {GenericCodeEditor} from '../../calculation/GenericCodeEditor'\nimport {Header} from './Header'\n\nconst RawJsonCodeEditor = (props: JsonCode) => {\n  const {editorTitle, json, editorKey, onSave, onValidate} = props\n  const {t} = useTranslation()\n  const builderStore = useBuilderStore()\n\n  const handleClose = useCallback(() => builderStore.currentEditable = undefined, [builderStore])\n\n  const handleCompile = useCallback((value: string) => {\n    try {\n      onValidate ? onValidate(value) : JSON.parse(value)\n      return CalculableResult.success(t('testingEditor.compilationOk'))\n    } catch (e) {\n      return CalculableResult.error([e as Error])\n    }\n  }, [t, onValidate])\n\n  const handleSave = useCallback((code: string) => {\n    try {\n      const object = JSON.parse(code)\n      onSave(object)\n    } catch (e) {\n      // do nothing\n    }\n  }, [onSave])\n\n  return <>\n    <Header>{`${t('codeEditor.generic.json.title')} '${editorTitle}'`}</Header>\n    <GenericCodeEditor key={editorKey}\n                       source={json}\n                       onSave={handleSave}\n                       onClose={handleClose}\n                       onCompile={handleCompile}\n                       language=\"json\"\n                       compact\n    />\n  </>\n}\n\nexport const JsonCodeEditor = namedObserver('JsonCodeEditor', RawJsonCodeEditor)\n","import {css} from '@emotion/css'\nimport {namedObserver} from '@react-form-builder/core'\nimport type {ResizableProps} from 're-resizable'\nimport {Resizable} from 're-resizable'\nimport {CustomValidationCode, EditableAction, EditableProperty, JsonCode} from '../../../stores/BuilderStore'\nimport {useBuilderStore} from '../../../utils/BuilderStoreContext'\nimport {CodeActionEditor} from '../../annotation-editors/EventEditor/components/CodeActionEditor/CodeActionEditor'\nimport {ComputedPropertyEditor} from './ComputedPropertyEditor'\nimport {CustomValidationCodeEditor} from './CustomValidationCodeEditor'\nimport {JsonCodeEditor} from './JsonCodeEditor'\n\nconst RawBottomPanel = () => {\n  const store = useBuilderStore()\n  const {currentEditable, bottomPanelHeight} = store\n\n  let editor = null\n  if (currentEditable instanceof EditableAction) {\n    editor = <CodeActionEditor {...currentEditable}/>\n  }\n\n  if (currentEditable instanceof EditableProperty) {\n    editor = <ComputedPropertyEditor property={currentEditable}/>\n  }\n\n  if (currentEditable instanceof CustomValidationCode) {\n    editor = <CustomValidationCodeEditor {...currentEditable}/>\n  }\n\n  if (currentEditable instanceof JsonCode) {\n    editor = <JsonCodeEditor {...currentEditable}/>\n  }\n\n  if (!editor) return null\n\n  const resizableProps: ResizableProps = {\n    className: resizableStyles,\n    enable: {top: true},\n    onResizeStop: (e, direction, ref, delta) => store.bottomPanelHeight += delta.height,\n    defaultSize: {width: 'initial', height: bottomPanelHeight},\n    minHeight: 250,\n    maxHeight: '92vh'\n  }\n\n  return <Resizable {...resizableProps}>{editor}</Resizable>\n}\n\nexport const BottomPanel = namedObserver('BottomPanel', RawBottomPanel)\n\nconst resizableStyles = css`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  min-width: 980px;\n  padding: 10px;\n  gap: 10px;\n  box-shadow: 0 -5px 20px 0 rgb(0 0 0 / 15%);\n`\n","import type {ViewMode} from '@react-form-builder/core'\nimport {nameAutorun} from '@react-form-builder/core'\nimport type {IReactionDisposer} from 'mobx'\nimport {autorun} from 'mobx'\nimport {getSystemTheme} from '../utils/getSystemTheme'\nimport {parseJson} from '../utils/parseJson'\nimport type {BuilderTheme} from '../utils/types'\nimport type {BuilderStore} from './BuilderStore'\nimport {defaultBottomPanelHeight, defaultOpenedPanels, defaultViewMode} from './constants'\n\n/**\n * Synchronizes and saves form builder settings to the browser's localStorage.\n */\nexport class LocalStorageSynchronizer {\n  readonly #disposers: IReactionDisposer[]\n\n  /**\n   * Creates {@LocalStorageSynchronizer}.\n   * @param builderStore the form builder settings.\n   */\n  constructor(builderStore: BuilderStore) {\n    const resolutionKey = 'resolution'\n    builderStore.viewMode = this.getItem<ViewMode>(resolutionKey, defaultViewMode)\n\n    const openedPanelsKey = 'openedPanels'\n    builderStore.openedPanels = parseJson(this.getItem<string>(openedPanelsKey)) ?? defaultOpenedPanels\n\n    const bottomPanelHeightKey = 'bottomPanelHeight'\n    builderStore.bottomPanelHeight = parseJson(this.getItem<string>(bottomPanelHeightKey)) ?? defaultBottomPanelHeight\n\n    const themeKey = 'theme'\n    builderStore.theme = this.getItem<BuilderTheme>(themeKey, getSystemTheme()) === 'dark' ? 'dark' : 'light'\n\n    const testingAutorunKey = 'testingAutorun'\n    builderStore.testingAutorun = this.getItem<string>(testingAutorunKey) === 'true'\n\n    const className = 'LocalStorageSynchronizer'\n\n    const formNameKey = 'formName'\n    const formName = this.getItem<string>(formNameKey)\n    if (formName) builderStore.activeFormName = formName\n\n    const i18nextLngKey = 'i18nextLng'\n    const i18nextLng = this.getItem<string>(i18nextLngKey)\n    if (i18nextLng) {\n      const i18nextLang = builderStore.availableLanguages.find(l => l.fullCode === i18nextLng)\n      builderStore.changeLanguage(i18nextLang ?? builderStore.defaultLanguage)\n    }\n\n    this.#disposers = [\n      autorun(\n        () => this.updateItem(resolutionKey, builderStore.viewMode),\n        {name: nameAutorun(className, 'saveResolution')}\n      ),\n      autorun(\n        () => this.updateItem(openedPanelsKey, JSON.stringify(builderStore.openedPanels)),\n        {name: nameAutorun(className, 'saveOpenedPanels')}\n      ),\n      autorun(\n        () => this.updateItem(bottomPanelHeightKey, builderStore.bottomPanelHeight),\n        {name: nameAutorun(className, 'saveBottomPanelHeight')}\n      ),\n      autorun(\n        () => this.updateItem(themeKey, builderStore.theme),\n        {name: nameAutorun(className, 'saveTheme')}\n      ),\n      autorun(\n        () => this.updateItem(testingAutorunKey, builderStore.testingAutorun),\n        {name: nameAutorun(className, 'saveTestingAutorunSetting')}\n      ),\n      autorun(\n        () => this.updateItem(formNameKey, builderStore.activeFormName),\n        {name: nameAutorun(className, 'saveFormName')}\n      ),\n    ]\n  }\n\n  /**\n   * Releases allocated resources, must be used when destroying an object instance.\n   */\n  dispose = () => {\n    this.#disposers.forEach(disposer => disposer())\n  }\n\n  private getItem = <T>(key: string, defaultValue?: T) => {\n    const value = localStorage.getItem(key) ?? defaultValue\n    return value as T\n  }\n\n  private updateItem = <T>(key: string, value: T) => {\n    if (typeof value === 'undefined') {\n      localStorage.removeItem(key)\n      return\n    }\n    localStorage.setItem(key, value as string)\n  }\n}\n","import {cx} from '@emotion/css'\nimport styled from '@emotion/styled'\nimport type {XYCoord} from 'react-dnd'\nimport {useDragLayer} from 'react-dnd'\nimport {useBuilderStore} from '../../../utils/BuilderStoreContext'\n\nfunction getItemStyles(\n  initialOffset: XYCoord | null,\n  currentOffset: XYCoord | null) {\n  if (!initialOffset || !currentOffset) {\n    return {display: 'none'}\n  }\n\n  const {x, y} = currentOffset\n\n  const transform = `translate(${x}px, ${y}px)`\n  return {\n    transform,\n    WebkitTransform: transform\n  }\n}\n\n/**\n * The React component that displays a drag-and-drop container layer.\n * @returns the React element.\n */\nexport const CustomDragLayer = () => {\n  const isMultiSelection = useBuilderStore().selected.size > 1\n  const {isDragging, initialOffset, currentOffset} =\n    useDragLayer((monitor) => ({\n      item: monitor.getItem(),\n      initialOffset: monitor.getInitialSourceClientOffset(),\n      currentOffset: monitor.getClientOffset(),\n      isDragging: monitor.isDragging(),\n    }))\n\n  if (!isDragging) {\n    return null\n  }\n  return (\n    <Layer>\n      <Container className={cx({isMultiSelection})} style={getItemStyles(initialOffset, currentOffset)} id={'fb-drag-preview'}/>\n    </Layer>\n  )\n}\n\nconst Layer = styled.div`\n  position: fixed;\n  pointer-events: none;\n  z-index: 100;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n`\n\nconst Container = styled.div`\n  box-shadow: 0 5px 20px 0 rgb(0 0 0 / 35%);\n  width: fit-content;\n\n  &, & > *, &::before, &::after {\n    background-color: white;\n    border-radius: 5px;\n  }\n\n  &.isMultiSelection {\n    & > *, &::before, &::after {\n      box-shadow: 2px 1px 1px rgba(0, 0, 0, 0.15);\n    }\n\n    &::before, &::after {\n      content: \"\";\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    &::before {\n      left: 7px;\n      top: 5px;\n      z-index: -1;\n    }\n\n    &::after {\n      left: 12px;\n      top: 10px;\n      z-index: -2;\n    }\n  }\n\n  .rs-theme-dark & {\n    &, & > *, &::before, &::after {\n      background-color: #414549;\n    }\n  }\n`\n","import {useCallback, useEffect} from 'react'\nimport type {BuilderStore} from '../../stores/BuilderStore'\n\n/**\n * Stop the event from propagating and prevent its default action.\n * @param event the Keyboard event.\n */\nconst stopEvent = (event: KeyboardEvent) => {\n  event.preventDefault()\n  event.stopPropagation()\n}\n\n/**\n * Handle the \"Delete\" key action.\n * @param event the Keyboard event.\n * @param builderStore the form builder settings store.\n */\nconst handleDeleteKey = (event: KeyboardEvent, builderStore: BuilderStore) => {\n  if (document.activeElement === document.body) {\n    builderStore.deleteSelectedComponents()\n    stopEvent(event)\n  }\n}\n\n/**\n * The global hotkeys handler hook.\n * @param builderStore the form builder settings store.\n */\nexport const useHotkeys = (builderStore: BuilderStore) => {\n  const handleKeyDown = useCallback((event: KeyboardEvent) => {\n    if (event.key === 'Delete') {\n      handleDeleteKey(event, builderStore)\n    }\n  }, [builderStore])\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown)\n    return () => window.removeEventListener('keydown', handleKeyDown)\n  }, [handleKeyDown])\n}\n","import {faGlobe} from '@fortawesome/free-solid-svg-icons'\nimport {namedObserver} from '@react-form-builder/core'\nimport {useTranslation} from 'react-i18next'\nimport {Dropdown} from 'rsuite'\nimport {useBuilderStore} from '../../../utils/BuilderStoreContext'\nimport {FaIcon} from '../../components/Icons'\nimport {renderLanguageItem} from './LocalizationPicker'\n\nconst RawMenuLanguageSwitch = () => {\n  const {t} = useTranslation()\n  const builderStore = useBuilderStore()\n\n  const children = builderStore.availableLanguages\n    .map(language => {\n      return <Dropdown.Item key={language.fullCode} eventKey={language.fullCode}\n                            onSelect={() => builderStore.changeLanguage(language)}>\n        {renderLanguageItem(language)}\n      </Dropdown.Item>\n    })\n\n  return <Dropdown.Menu title={t('leftMenu.translation')} icon={<FaIcon icon={faGlobe}/>}>\n    {children}\n  </Dropdown.Menu>\n}\n\nexport const MenuLanguageSwitch = namedObserver('MenuLanguageSwitch', RawMenuLanguageSwitch)\n","import {CacheProvider} from '@emotion/react'\nimport {BiDi, emotionCache, loadResource, namedObserver, unloadResource} from '@react-form-builder/core'\nimport type {ReactNode} from 'react'\nimport {useEffect} from 'react'\nimport {CustomProvider} from 'rsuite'\nimport {useBuilderStore} from '../../../utils/BuilderStoreContext'\nimport {defaultComponentsLocale} from '../languageUtils'\n\nconst styles = {\n  [BiDi.LTR]: () => import('../../../../public/css/rsuite-no-reset.min.css?url'),\n  [BiDi.RTL]: () => import('../../../../public/css/rsuite-no-reset-rtl.min.css?url'),\n  ['common']: () => import('../../../../public/css/formengine-rsuite.css?url')\n}\n\nconst loadRsuiteCss = async (biDi: BiDi) => {\n  const href = (await styles[biDi]()).default\n  await loadResource(`rsuite-${biDi}-css`, href, 'stylesheet')\n  const previousBidi = biDi === BiDi.LTR ? BiDi.RTL : BiDi.LTR\n  unloadResource(`rsuite-${previousBidi}-css`)\n}\n\nconst loadFormEngineCss = async () => {\n  const href = (await styles['common']()).default\n  await loadResource('form-engine-css', href, 'stylesheet')\n}\n\ninterface LocalizationProps {\n  children: ReactNode\n}\n\nconst RawLocalizationProvider = (props: LocalizationProps) => {\n  const builderStore = useBuilderStore()\n  const {bidi} = builderStore.formBuilderLanguage\n  const componentsLocale = builderStore.componentsLocale ?? defaultComponentsLocale\n  const selectedCache = builderStore.isRTL ? emotionCache.RTL : emotionCache.LTR\n\n  useEffect(() => {\n    loadRsuiteCss(bidi).catch(console.error)\n  }, [bidi])\n\n  useEffect(() => {\n    loadFormEngineCss().catch(console.error)\n  }, [])\n\n  return (\n    <CacheProvider value={selectedCache}>\n      <CustomProvider rtl={builderStore.isRTL} locale={componentsLocale} theme={builderStore.theme}>\n        {props.children}\n      </CustomProvider>\n    </CacheProvider>\n  )\n}\n\nexport const LocalizationProvider = namedObserver('LocalizationProvider', RawLocalizationProvider)\n","import {cx} from '@emotion/css'\nimport styled from '@emotion/styled'\nimport {namedObserver} from '@react-form-builder/core'\nimport type {ComponentProps} from 'react'\nimport {useBuilderStore} from '../../utils/BuilderStoreContext'\n\nconst builderClassName = 'optimajet-formbuilder'\n\nconst SDiv = styled.div`\n  height: 100%;\n`\n\nconst RawStylesProvider = (props: ComponentProps<any>) => {\n  const {theme} = useBuilderStore()\n  return <SDiv className={cx(builderClassName, theme)}>\n    {props.children}\n  </SDiv>\n}\n\nexport const StylesProvider = namedObserver('StylesProvider', RawStylesProvider)\n","import {FormViewerPropsStore, namedObserver, Store, StoreProvider, useDisposable, ViewerPropsProvider} from '@react-form-builder/core'\nimport type {ReactNode} from 'react'\nimport {useCallback, useEffect, useImperativeHandle} from 'react'\nimport {DndProvider} from 'react-dnd'\nimport {HTML5Backend} from 'react-dnd-html5-backend'\nimport type {FormBuilderProps} from '../../FormBuilderProps'\nimport {BuilderStore} from '../../stores/BuilderStore'\nimport {LocalStorageSynchronizer} from '../../stores/LocalStorageSynchronizer'\nimport {BuilderStoreProvider} from '../../utils/BuilderStoreContext'\nimport {determineTheme} from '../../utils/determineTheme'\nimport {TooltipPlacementProvider} from '../../utils/TooltipPlacementContext'\nimport {CustomDragLayer} from '../dnd/components/CustomDragLayer'\nimport {useHotkeys} from '../hotkeys/useHotKeys'\nimport {LocalizationProvider} from '../localization'\nimport {StylesProvider} from './StylesProvider'\n\nclass BuilderProviderData {\n  constructor(public readonly store: Store,\n              public readonly builderStore: BuilderStore,\n              public readonly localStorageSynchronizer: LocalStorageSynchronizer\n  ) {\n  }\n\n  dispose() {\n    this.localStorageSynchronizer.dispose()\n    this.builderStore.dispose()\n    this.store.dispose()\n  }\n}\n\ninterface RawBuilderProvidersProps {\n  props: FormBuilderProps\n  children: ReactNode\n}\n\ninterface BuilderProvidersProps extends RawBuilderProvidersProps {\n  builderStore: BuilderStore\n  store: Store\n}\n\nconst useBuilderProviderData = (props: FormBuilderProps) => useCallback(() => {\n  const {builderRef, ...viewerProps} = props\n\n  const store = new Store(new FormViewerPropsStore(viewerProps))\n\n  const builderStore = new BuilderStore(store, props)\n  builderStore.changeBuilderMode('builder')\n\n  const localStorageSynchronizer = new LocalStorageSynchronizer(builderStore)\n  return new BuilderProviderData(store, builderStore, localStorageSynchronizer)\n}, [props])\n\n/**\n * React component encapsulating MobX storage for the form builder.\n * @param props the React component properties.\n * @param props.children the children of the React component.\n * @param props.props the properties of the form builder component.\n * @param props.builderStore the form builder settings.\n * @param props.store the form viewer settings.\n * @returns the React element.\n */\nconst RawProviders = ({children, props, builderStore, store}: BuilderProvidersProps) => {\n  const {builderRef, ...viewerProps} = props\n\n  useHotkeys(builderStore)\n\n  useImperativeHandle(builderRef, () => builderStore, [builderStore])\n\n  useEffect(() => {\n    // If activeFormName is already set from LocalStorageSynchronizer, do not change it\n    if (!builderStore.activeFormName) builderStore.activeFormName = props.formName\n  }, [builderStore, props.formName])\n\n  useEffect(() => {\n    store.formViewerPropsStore.applyProps(viewerProps)\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.initialData, props.view, props.validators, props.formValidators, props.localize, props.language, props.actions,\n    props.errorWrapper])\n\n  useEffect(() => {\n    props.onFormSchemaChange?.(builderStore.formAsString)\n  }, [builderStore.formAsString, props])\n\n  useEffect(() => {\n    if (!props.theme) return\n    builderStore.theme = determineTheme(props.theme)\n  }, [builderStore, props.theme])\n\n  return (\n    <ViewerPropsProvider value={viewerProps}>\n      <BuilderStoreProvider value={builderStore}>\n        <StoreProvider value={store}>\n          <LocalizationProvider>\n            <StylesProvider>\n              <TooltipPlacementProvider value={'auto'}>\n                <DndProvider backend={HTML5Backend}>\n                  {children}\n                  <CustomDragLayer/>\n                </DndProvider>\n              </TooltipPlacementProvider>\n            </StylesProvider>\n          </LocalizationProvider>\n        </StoreProvider>\n      </BuilderStoreProvider>\n    </ViewerPropsProvider>\n  )\n}\n\nconst Providers = namedObserver('Providers', RawProviders)\n\n/**\n * React component encapsulating MobX storage for the form builder.\n * @param props the React component properties.\n * @returns the React element.\n */\nconst RawBuilderProviders = (props: RawBuilderProvidersProps) => {\n  const builderProviderDataFactory = useBuilderProviderData(props.props)\n  const builderProviderData = useDisposable(builderProviderDataFactory)\n\n  const builderStore = builderProviderData?.builderStore\n  const store = builderProviderData?.store\n\n  if (!builderStore || !store) return null\n\n  return <Providers {...props} builderStore={builderStore} store={store}/>\n}\n\nexport const BuilderProviders = namedObserver('BuilderProviders', RawBuilderProviders)\n","/**\n * The type of item being dragged.\n */\nexport enum ItemType {\n  Component = 'Component',\n  AddedComponent = 'AddedComponent'\n}\n\nexport const AcceptDrop = [ItemType.Component, ItemType.AddedComponent]\n","import {useComponentData} from '@react-form-builder/core'\nimport {useEffect} from 'react'\nimport type {ConnectDragSource} from 'react-dnd'\nimport {useDrag} from 'react-dnd'\nimport {getEmptyImage} from 'react-dnd-html5-backend'\nimport type {ItemType} from '../../../consts'\n\ninterface DragState {\n  isDragging: boolean,\n}\n\n/**\n * Returns the array with the drag state and wrapper of the dragged preview item.\n * @param type the type of item being dragged.\n * @returns the array with the drag state and wrapper of the dragged preview item.\n */\nexport const useDragWithPreview = (type: ItemType): [DragState, ConnectDragSource] => {\n  const item = useComponentData()\n  const [state, drag, preview] = useDrag(() => ({\n    type, item,\n    collect: (monitor) => ({isDragging: monitor.isDragging()}),\n  }), [])\n\n  useEffect(() => {\n    preview(getEmptyImage())\n  }, [state.isDragging, preview])\n\n  return [state, drag]\n}\n","import styled from '@emotion/styled'\nimport type {ComponentProps} from 'react'\nimport {createPortal} from 'react-dom'\n\nconst getDragPreview = () => document.getElementById('fb-drag-preview') || document.body\n\n/**\n * The React component that displays a preview for the dragged item.\n * @param props the React component properties.\n * @param props.children the draggable component.\n * @returns the React element.\n */\nexport const DragPreview = ({children}: ComponentProps<any>) => createPortal(<Container>{children}</Container>, getDragPreview())\n\nconst Container = styled.div`\n  display: flex;\n  width: 136px;\n  height: 34px;\n  align-items: center;\n  overflow: hidden;\n\n  .rs-theme-dark & {\n    background-color: #414549;\n  }\n`\n","import styled from '@emotion/styled'\nimport {forwardRef, useComponentData} from '@react-form-builder/core'\nimport {Plus as PlusIcon} from '@rsuite/icons'\nimport type {PropsWithoutRef, RefCallback} from 'react'\nimport {IconButton} from 'rsuite'\nimport {useBuilderStore} from '../../../../../utils/BuilderStoreContext'\n\nconst InnerContainer = styled.div`\n  position: relative;\n  display: flex;\n  flex: 1;\n  width: 100%;\n  height: 100%;\n  min-height: 36px;\n  z-index: 12;\n  align-items: center;\n  justify-content: center;\n  outline: 1px solid var(--rs-btn-default-disabled-text);\n\n  &.isActive {\n    background-color: rgba(0, 116, 255, 0.15);\n    outline: 1px solid blue;\n  }\n\n  .selected & {\n    outline: none !important;\n  }\n`\n\ninterface DropViewProps extends PropsWithoutRef<any> {\n  className?: string\n  slot?: string\n  slotCondition?: string\n}\n\nconst AddButton = ({slot, slotCondition}: { slot?: string, slotCondition?: string }) => {\n  const builderStore = useBuilderStore()\n  const target = useComponentData()\n  const handleClick = () => {\n    builderStore.showComponentsModal(source => {\n      builderStore.add(source, target, 'inner', slot, slotCondition)\n    })\n  }\n  return <>\n    <IconButton onClick={handleClick} icon={<PlusIcon/>} color=\"green\"\n                appearance={'primary'} circle size={'xs'}/>\n  </>\n}\n\n/**\n * The React form builder component that displays the inner container into which you can drag and drop a component.\n * @param props the React component properties.\n * @returns the React element.\n */\nexport const InnerDropView = forwardRef<any, DropViewProps>(({slot, slotCondition, className}, ref) => {\n  // TODO FE-1065\n  return <InnerContainer className={className} ref={ref as unknown as RefCallback<HTMLDivElement>}>\n    <AddButton slot={slot} slotCondition={slotCondition}/>\n  </InnerContainer>\n})\n\n/**\n * The React form builder component that displays the container into which you can drag and drop a component.\n * @param props the React component properties.\n * @returns the React element.\n */\nexport const DropView = styled.div`\n  position: absolute;\n  top: -6px;\n  height: 2px;\n  width: 100%;\n  inset-inline-start: 0;\n  opacity: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  .isTree & {\n    top: 0;\n  }\n\n  &.isAfter {\n    top: initial;\n    bottom: -6px;\n\n    .isTree & {\n      bottom: 0;\n    }\n  }\n\n  .horizontal.isContainer > * > & {\n    inset-block: 0;\n    inset-inline-start: -6px;\n    inset-inline-end: initial;\n    height: 100%;\n    width: 2px;\n\n    &.isAfter {\n      inset-inline-start: initial;\n      inset-inline-end: -6px;\n    }\n  }\n\n  &.isActive {\n    opacity: 1;\n    background-color: blue;\n\n    .isInner & {\n      background-color: rgba(0, 116, 255, 0.15);\n      outline: 1px solid blue;\n    }\n  }\n`\n","import {cx} from '@emotion/css'\nimport styled from '@emotion/styled'\nimport type {ComponentData} from '@react-form-builder/core'\nimport {namedObserver, useComponentData} from '@react-form-builder/core'\nimport type {ComponentProps, RefCallback} from 'react'\nimport {useDrop} from 'react-dnd'\nimport type {ConnectDropTarget} from 'react-dnd/dist/types/types'\nimport {useBuilderStore} from '../../../../../utils/BuilderStoreContext'\nimport {AcceptDrop, ItemType} from '../../../consts'\nimport {DropView, InnerDropView} from './DropView'\n\ninterface DropZoneProps extends ComponentProps<any> {\n  isAfter?: boolean\n  isInner?: boolean\n  slot?: string\n  slotCondition?: string\n}\n\nconst RawDropZone = ({isAfter, isInner, ...props}: DropZoneProps) => {\n  const componentData = useComponentData()\n  const {store, isRoot} = componentData\n  const isContainer = Boolean(store.children)\n\n  const inner = isRoot || isInner\n  const [{isActive, isOver}, drop] = useDropZone(isAfter, inner, props.slot, props.slotCondition)\n  const className = cx({isAfter, isActive, isContainer, isRoot, isInner, isOver})\n  // TODO FE-1065\n  const ref = drop as unknown as RefCallback<HTMLDivElement>\n\n  return <>\n    {inner\n      ? <InnerDropView ref={ref} className={className} {...props}/>\n      : <SContainer ref={ref} className={className}/>\n    }\n    {!inner && <DropView className={className}/>}\n  </>\n}\n\ninterface DropState {\n  isActive: boolean,\n  isOver: boolean,\n}\n\nconst useDropZone = (isAfter?: boolean, isInner?: boolean, slot?: string, slotCondition?: string): [DropState, ConnectDropTarget] => {\n  const store = useBuilderStore()\n  const target = useComponentData()\n  const insertPosition = isInner\n    ? 'inner'\n    : isAfter ? 'after' : 'before'\n\n  const [{isActive, isOver}, drop] = useDrop({\n    accept: AcceptDrop,\n    drop: (source: ComponentData, monitor) => {\n      const type = monitor.getItemType() as ItemType\n      switch (type) {\n        case ItemType.AddedComponent:\n          store.add(source, target, insertPosition, slot, slotCondition)\n          break\n        case ItemType.Component:\n          if (store.selected.size > 1) {\n            store.multipleMove(target, insertPosition, slot, slotCondition)\n          } else {\n            store.move(source, target, insertPosition, slot, slotCondition)\n          }\n          break\n      }\n    },\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n      isActive: monitor.isOver() && monitor.canDrop(),\n    })\n  })\n\n  return [{isActive, isOver}, drop]\n}\n\nconst SContainer = styled.div`\n  position: absolute;\n  top: -5px;\n  inset-inline-start: 0;\n  height: calc(50% + 5px);\n  width: 100%;\n  z-index: 10;\n  display: flex;\n\n  &.isContainer {\n    height: 36px;\n    z-index: 9;\n  }\n\n  &.isAfter {\n    top: initial;\n    bottom: -5px;\n\n    &.isRoot {\n      position: relative;\n      flex: 1;\n    }\n  }\n\n  .horizontal > * > & {\n    top: 0;\n    inset-inline-start: -5px;\n    height: 100%;\n    width: calc(50% + 5px);\n\n    &.isAfter {\n      inset-inline-start: initial;\n      inset-inline-end: -5px;\n    }\n  }\n`\n\nexport const DropZone = namedObserver('DropZone', RawDropZone)\n","import {cx} from '@emotion/css'\nimport styled from '@emotion/styled'\nimport type {ComponentData} from '@react-form-builder/core'\nimport {namedObserver, useComponentData} from '@react-form-builder/core'\nimport type {ComponentProps, RefObject} from 'react'\nimport {useMemo, useRef} from 'react'\nimport {useDragLayer, useDrop} from 'react-dnd'\nimport {useBuilderStore} from '../../../../../utils/BuilderStoreContext'\nimport {AcceptDrop, ItemType} from '../../../consts'\nimport {useDragWithPreview} from '../hooks/useDragWithPreview'\nimport {DragPreview} from './DragPreview'\nimport {DropZone} from './DropZone'\n\ninterface DraggableProps extends ComponentProps<any> {\n  isInner?: boolean\n  isTree?: boolean\n}\n\nconst useDirection = () => {\n  const {viewMode} = useBuilderStore()\n  const {css} = useComponentData().store\n  const direction = css?.[viewMode]?.object?.flexDirection ?? css?.any?.object?.flexDirection ?? ''\n  return ['row', 'row-reverse', 'initial'].includes(direction as string)\n}\n\nconst RawDraggable = ({children, isInner, className, isTree, ...props}: DraggableProps) => {\n  const {key, isRoot, model, parent} = useComponentData()\n  const isContainer = model.kind === 'container'\n  const direction = useDirection()\n  const horizontal = !isTree && direction\n  const [{isActive, isDragging: isDraggingCurrent}, dnd] = useDnd(isRoot)\n  const {isDragging} = useDragLayer(monitor => ({isDragging: monitor.isDragging()}))\n  const dragPreview = <DragPreview><SLabel>{key}</SLabel></DragPreview>\n  const afterChildren = isDragging && !isRoot\n  const beforeChildren = isDragging && !isRoot && !isInner\n\n  const clsName = useMemo(() => {\n    const parentType = parent ? `parent-type-${parent?.model.type}` : ''\n    const type = `type-${model.type}`\n    return cx(className, {isActive, isContainer, isRoot, isInner, isDragging, isDraggingCurrent, horizontal, isTree}, parentType, type)\n  }, [className, horizontal, isActive, isContainer, isDragging, isDraggingCurrent, isInner, isRoot, isTree, model.type, parent])\n\n  return <>\n    {isDraggingCurrent && dragPreview}\n    <Container ref={dnd} {...props} className={clsName}>\n      <label className={'containerLabel'}>{key}</label>\n      {!isTree && <DraggableBody/>}\n      {beforeChildren && <DropZone/>}\n      {children}\n      {afterChildren && <DropZone isAfter={!isInner && true} isInner={isInner}/>}\n    </Container>\n  </>\n}\n\nexport const Draggable = namedObserver('Draggable', RawDraggable)\n\ninterface DndState {\n  isDragging: boolean,\n  isActive: boolean,\n  isOver: boolean,\n  canDrop: boolean,\n}\n\nconst useDnd = (isRoot?: boolean): [DndState, RefObject<any>] => {\n  const dnd = useRef(null)\n  const data = useComponentData()\n\n  const [dropProps, drop] = useDrop({\n    accept: AcceptDrop,\n    canDrop: (item: ComponentData) => data.store.key !== item.store.key,\n    collect: (monitor) => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop(),\n      isActive: monitor.isOver() && monitor.canDrop(),\n    }),\n  }, [])\n\n  const [dragState, drag] = useDragWithPreview(ItemType.Component)\n  const state: DndState = useMemo(() => ({...dropProps, ...dragState}), [dropProps, dragState])\n\n  if (!isRoot) drag(dnd)\n  drop(dnd)\n\n  return [state, dnd]\n}\n\nconst DraggableBody = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: 7;\n`\n\nconst SLabel = styled.label`\n  padding: 10px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nconst Container = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  transition: padding 200ms ease-in-out;\n\n  .containerLabel {\n    display: none;\n    position: absolute;\n    justify-self: center;\n    color: var(--rs-primary-300);\n    inset: 2px;\n    line-height: 13px;\n\n    .rs-theme-dark & {\n      color: var(--rs-primary-400);\n      opacity: 0.4;\n    }\n  }\n\n  &.isDraggingCurrent {\n    opacity: 0.4;\n  }\n\n  &.hovered {\n    outline: 2px dashed #3498ff !important;\n    cursor: pointer !important;\n  }\n\n  &.selected {\n    outline: 2px solid #3498ff !important;\n    cursor: move !important;\n  }\n\n  &:not(.isRoot):not(.isTree) {\n    &.isActive.isContainer {\n      outline: 1px dashed rgba(0, 116, 255, 0.25);\n    }\n\n    &.isDragging.isContainer {\n      padding: 20px 10px;\n      background-color: rgb(from var(--rs-primary-200) r g b/20%);\n      outline: 1px dashed rgba(0, 116, 255, 0.25);\n\n      .rs-theme-dark & {\n        background-color: rgb(from var(--rs-primary-600) r g b/10%);\n      }\n\n      & > .containerLabel {\n        display: initial;\n      }\n    }\n\n    .horizontal > &.isDragging.isContainer {\n      padding: 10px 20px;\n    }\n  }\n\n  .horizontal > & {\n    flex-direction: row;\n  }\n`\n","import type {EventHandler} from 'react'\n\n/**\n * Cancels the event if it is cancelable. **Internal use only.**\n * @param e the event object.\n */\nexport const stopEvent: EventHandler<any> = e => {\n  e.preventDefault()\n  e.stopPropagation()\n}\n","import {cx} from '@emotion/css'\nimport {useComponentData} from '@react-form-builder/core'\nimport type {MouseEvent} from 'react'\nimport {useEffect} from 'react'\nimport {useCallback, useMemo, useState} from 'react'\nimport {useDragLayer} from 'react-dnd'\nimport {useBuilderStore} from '../../../../../utils/BuilderStoreContext'\nimport {stopEvent} from '../../../../../utils/stopEvent'\n\n/**\n * Represents the selection state of the component.\n */\nexport interface SelectionState {\n  /**\n   * Flag, if true then the component is hovered, false otherwise.\n   */\n  hovered: boolean\n  /**\n   * Flag, if true then the component is selected, false otherwise.\n   */\n  selected: boolean\n}\n\n/**\n * Represents mouse event handlers for the selected component.\n */\nexport interface SelectionHandlers {\n  /**\n   * The callback function called when a component is clicked.\n   * @param e the original mouse event.\n   */\n  onClick: (e: MouseEvent) => void\n  /**\n   * The callback function called when the mouse hits the component area.\n   * @param e the original mouse event.\n   */\n  onMouseOver: (e: MouseEvent) => void\n  /**\n   * The callback function called when the mouse exits the component area.\n   */\n  onMouseOut: () => void\n}\n\n/**\n * The type for the CSS class name.\n */\nexport type ClassName = string\n\n/**\n * @returns the array [{@link SelectionState}, {@link SelectionHandlers}, {@link ClassName}] with component selection data.\n */\nexport const useSelection = (): [SelectionState, SelectionHandlers, ClassName] => {\n  const store = useBuilderStore()\n  const data = useComponentData()\n  const {isDragging} = useDragLayer(monitor => ({isDragging: monitor.isDragging()}))\n  const [hovered, setHovered] = useState(false)\n  const selected = store.selected.has(data)\n\n  const onClick = useCallback((event: MouseEvent) => {\n    stopEvent(event)\n    store.selectNode(data, event.ctrlKey || event.shiftKey)\n  }, [data, store])\n\n  const onMouseOver = useCallback((event: MouseEvent) => {\n    stopEvent(event)\n    setHovered(true)\n  }, [])\n\n  const onMouseOut = useCallback(() => {\n    setHovered(false)\n  }, [])\n\n  useEffect(() => {\n    if (!isDragging) {\n      setHovered(false)\n    }\n  }, [isDragging])\n\n  const className = useMemo(() => (cx({\n    hovered: hovered && !selected && !isDragging,\n    selected: selected && !isDragging,\n  })), [hovered, selected, isDragging])\n\n  return [{hovered, selected}, {onClick, onMouseOver, onMouseOut}, className]\n}\n","import styled from '@emotion/styled'\nimport {namedObserver, useComponentData} from '@react-form-builder/core'\nimport {Plus as PlusIcon, SortDown, SortUp} from '@rsuite/icons'\nimport {useRef} from 'react'\nimport type {WhisperInstance} from 'rsuite'\nimport {ButtonGroup, IconButton, Popover, Whisper} from 'rsuite'\nimport {useBuilderStore} from '../../../../../utils/BuilderStoreContext'\nimport type {InsertPosition} from '../../../../../utils/types'\nimport {useTranslationPart} from '../../../../localization/hooks'\n\nconst RawAddButton = () => {\n  const builderStore = useBuilderStore()\n  const target = useComponentData()\n  const t = useTranslationPart('componentToolbar')\n  const whisperRef = useRef<WhisperInstance>(null)\n  const handleClick = (position: InsertPosition) => {\n    whisperRef.current?.close()\n    builderStore.showComponentsModal(source => {\n      builderStore.add(source, target, position)\n    })\n  }\n\n  const popover = <SPopover arrow={false}>\n    <Container>\n      <Label>{t('add')}</Label>\n      <ButtonGroup vertical>\n        <IconButton onClick={() => handleClick('before')} icon={<SortUp/>} size={'xs'}\n                    appearance={'primary'}>{t('before')}</IconButton>\n        <IconButton onClick={() => handleClick('after')} icon={<SortDown/>} size={'xs'}\n                    appearance={'primary'}>{t('after')}</IconButton>\n      </ButtonGroup>\n    </Container>\n  </SPopover>\n\n  return <>\n    <Whisper placement={builderStore.isRTL ? 'right' : 'left'} speaker={popover} ref={whisperRef} enterable trigger=\"hover\">\n      <PlusIcon className={'add-button'}/>\n    </Whisper>\n  </>\n}\n\nexport const AddButton = namedObserver('AddButton', RawAddButton)\n\nconst SPopover = styled(Popover)`\n  transform: translateX(24px) !important;\n  padding: 8px !important;\n  border-radius: 14px !important;\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: baseline;\n  gap: 10px;\n`\n\nconst Label = styled.p`\n  width: 48px;\n  font-weight: bolder;\n  line-height: 1.9;\n  text-align: center;\n  margin-inline-start: 8px;\n  color: var(--rs-text-primary);\n`\n","import {cx} from '@emotion/css'\nimport styled from '@emotion/styled'\nimport type {IconDefinition} from '@fortawesome/fontawesome-common-types'\nimport * as faClone from '@fortawesome/free-regular-svg-icons/faClone.js'\nimport * as faTrash from '@fortawesome/free-regular-svg-icons/faTrashAlt.js'\nimport {namedObserver, useComponentData} from '@react-form-builder/core'\nimport type {MouseEventHandler} from 'react'\nimport {useCallback, useEffect, useMemo, useRef} from 'react'\nimport scrollIntoView from 'scroll-into-view-if-needed'\nimport {useBuilderStore} from '../../../../../utils/BuilderStoreContext'\nimport {stopEvent} from '../../../../../utils/stopEvent'\nimport {Hinted} from '../../../../annotation-editors/Hinted'\nimport {FaIcon} from '../../../../components/Icons'\nimport {useTranslationPart} from '../../../../localization/hooks'\nimport {useSelection} from '../hooks/useSelection'\nimport {AddButton} from './AddButton'\n\n/**\n * Toolbar React component properties.\n */\nexport interface ToolbarProps {\n  /**\n   * Flag if true - the toolbar is displayed in compact mode, false otherwise.\n   */\n  compact?: boolean\n}\n\nconst RawToolbar = ({compact}: ToolbarProps) => {\n  const store = useBuilderStore()\n  const data = useComponentData()\n  const [{selected}] = useSelection()\n  const ref = useRef<HTMLDivElement>(null)\n  const t = useTranslationPart('toolbar')\n\n  const onClone: MouseEventHandler = useCallback(e => {\n    stopEvent(e)\n    store.clone(data)\n  }, [data, store])\n\n  const onRemove: MouseEventHandler = useCallback(e => {\n    stopEvent(e)\n    store.remove(data)\n  }, [data, store])\n\n  useEffect(() => {\n    if (!compact && selected && ref.current) {\n      scrollIntoView(ref.current, {scrollMode: 'if-needed'})\n    }\n  }, [selected, compact])\n\n  const clsName = useMemo(() => {\n    const parentType = data.parent ? `parent-type-${data.parent?.model.type}` : ''\n    const type = `type-${data.model.type}`\n    return cx({compact: compact}, 'Toolbar', parentType, type)\n  }, [compact, data.model.type, data.parent])\n\n  return <ToolbarContainer ref={ref} className={clsName}>\n    {!compact && <Title>\n      {data.store.key}\n      <label>{` (${data.store.type})`}</label>\n    </Title>\n    }\n    <AddButton/>\n    {!data.isRoot && <>\n      <Hinted hint={t('cloneComponent')} placement={'autoVertical'}>\n        <FaIcon onClick={onClone} icon={faClone as unknown as IconDefinition} className={'clone-button'}/>\n      </Hinted>\n      <Hinted hint={t('removeComponent')} placement={'autoVertical'}>\n        <FaIcon onClick={onRemove} icon={faTrash as unknown as IconDefinition} className={'remove-button'}/>\n      </Hinted>\n    </>}\n  </ToolbarContainer>\n}\n\nexport const Toolbar = namedObserver('Toolbar', RawToolbar)\n\nconst ToolbarContainer = styled.div`\n  inset: initial;\n  right: 5px;\n  top: -13px;\n\n  &.compact {\n    top: 8px;\n  }\n\n  position: absolute;\n  z-index: 11;\n  color: var(--rs-btn-ghost-text);\n  cursor: pointer !important;\n  white-space: nowrap;\n  border-radius: 5px;\n  height: 20px;\n  width: fit-content;\n  padding-inline: 5px;\n  font-weight: 400;\n  font-size: 14px;\n  background-color: white;\n\n  .rs-theme-dark & {\n    background-color: #3b3f43;\n  }\n\n  display: flex;\n  gap: 5px;\n  align-items: center;\n\n  & > .rs-icon {\n    cursor: pointer;\n  }\n`\n\nconst Title = styled.label`\n  display: inline;\n  cursor: move;\n`\n","import {namedObserver, useComponentData} from '@react-form-builder/core'\nimport type {ErrorInfo, ReactNode} from 'react'\nimport {Component} from 'react'\n\ninterface ComponentRenderErrorProps {\n  error?: Error\n  info?: ErrorInfo\n}\n\nconst preStyle = {\n  fontSize: 'small',\n  marginTop: '0',\n  marginLeft: 20,\n}\n\nconst RawComponentRenderError = (props: ComponentRenderErrorProps) => {\n  const componentData = useComponentData()\n  return <div>\n    <p>Component <code>{componentData.key}</code> render error: </p>\n    <p>\n      <strong>{props.error?.message}:</strong>\n      <pre style={preStyle}>{props.error?.stack}</pre>\n    </p>\n    <p>\n      <strong>Component stack</strong>:\n      <pre style={preStyle}>{props.info?.componentStack}</pre>\n    </p>\n  </div>\n}\n\nconst ComponentRenderError = namedObserver('ComponentRenderError', RawComponentRenderError)\n\n/**\n * The ErrorBoundary component state.\n */\nexport interface ErrorBoundaryState {\n\n  /**\n   * Flag, if true, a rendering error occurred.\n   */\n  hasError: boolean\n\n  /**\n   * The rendering error.\n   */\n  error?: Error\n\n  /**\n   * The rendering error info.\n   */\n  info?: ErrorInfo\n}\n\n/**\n * The ErrorBoundary component properties.\n */\nexport interface ErrorBoundaryProps {\n  /**\n   * The React child node.\n   */\n  children: ReactNode\n}\n\n/**\n * The component for showing rendering errors.\n */\nexport class ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n\n  state: ErrorBoundaryState = {hasError: false}\n\n  /**\n   * React method for catching errors.\n   * @param error the error that was thrown.\n   * @returns the component state.\n   */\n  static getDerivedStateFromError(error: any) {\n    return {hasError: true, error}\n  }\n\n  /**\n   * @inheritDoc\n   */\n  componentDidCatch(error: Error, info: ErrorInfo) {\n    this.setState({hasError: true, error, info})\n  }\n\n  /**\n   * @inheritDoc\n   */\n  render() {\n    if (this.state.hasError) {\n      return <ComponentRenderError error={this.state.error} info={this.state.info}/>\n    }\n\n    return this.props.children\n  }\n}\n","import {cx} from '@emotion/css'\nimport type {ComponentData, ComponentStore, WrapperProps} from '@react-form-builder/core'\nimport {\n  checkSlotCondition,\n  ComponentState,\n  ComponentTree,\n  DefaultWrapper,\n  groupBy,\n  isContainer,\n  namedObserver,\n  node,\n  slotModel,\n  TemplateField,\n  toArray,\n  useStore\n} from '@react-form-builder/core'\nimport {useDragLayer} from 'react-dnd'\nimport type {BuilderStore} from '../../../../stores/BuilderStore'\nimport {Draggable} from './components/Draggable'\nimport {DropZone} from './components/DropZone'\nimport {Toolbar} from './components/Toolbar'\nimport {ErrorBoundary} from './ErrorBoundary'\nimport {useSelection} from './hooks/useSelection'\n\nconst childrenSlot = 'children'\n\nfunction getSlot(componentStore: ComponentStore) {\n  return componentStore.slot ?? childrenSlot\n}\n\n/**\n * Returns the {@link Record} with all child components.\n * @param builderStore the form builder settings.\n * @param componentData the parent component's data necessary to display the component.\n * @param componentProps the properties of the parent component.\n * @returns the {@link Record} with all child components.\n */\nexport function getBuilderChildren(builderStore: BuilderStore, componentData: ComponentData, componentProps: Record<string, any>) {\n  const containers = componentData.children\n  const currentProps: Record<string, any> = {}\n  const meta = builderStore.getComponentMetadata(componentData.model.type)\n\n  const availableSlots = meta.properties.filter(isContainer)\n  const templateSlots = getTemplateSlots(componentData)\n  availableSlots.push(...templateSlots)\n\n  const closedSlots = componentData.store\n    .children?.filter(componentStore => checkSlotCondition(componentStore, componentProps))\n    .map(getSlot) ?? []\n  const openSlots = availableSlots.filter(an => !closedSlots.includes(an.key))\n\n  const groups = groupBy(containers, value => getSlot(value.store))\n  const isSlotConditionSatisfied = (child: ComponentData) => checkSlotCondition(child.store, componentProps)\n\n  for (const [key, children] of Object.entries(groups)) {\n    const filteredChildren = children\n      .filter(isSlotConditionSatisfied)\n\n    if (filteredChildren.length) {\n      currentProps[key] = componentData.model.propsBindingTypes[key] === 'array'\n        ? filteredChildren.map((item, index) => <ComponentTree key={index} data={[item]}/>)\n        : <ComponentTree data={filteredChildren}/>\n    }\n  }\n\n  openSlots.forEach(container => {\n    const viewerStore = builderStore.viewer\n    const dataContext = componentData.dataRootProvider ?? viewerStore.dataContext\n    const localize = viewerStore.localizeComponent.bind(viewerStore, 'component', dataContext.dataRoot)\n    const componentState = new ComponentState(componentData, viewerStore, localize, () => ({}), {})\n    const slotCondition = container?.slotConditionBuilder?.(componentState.propsWithoutChildren)\n    const slot = container.key === childrenSlot ? undefined : container.key\n    currentProps[container.key] = <DropZone isInner={true} slot={slot} slotCondition={slotCondition}/>\n  })\n\n  return currentProps\n}\n\nconst RawEditableWrapper = ({children, ...props}: WrapperProps) => {\n  const viewerStore = useStore()\n  const Wrapper = viewerStore.parentStore ? DefaultWrapper : Editable\n  return <Wrapper children={children} {...props}/>\n}\n\nexport const EditableWrapper = namedObserver('EditableWrapper', RawEditableWrapper)\n\nconst RawEditable = ({children, className}: WrapperProps) => {\n  const [{selected}, selectionHandlers, selectionClassName] = useSelection()\n  const {isDragging} = useDragLayer(monitor => ({isDragging: monitor.isDragging()}))\n  const toolbars = selected && !isDragging && <Toolbar/>\n\n  return (\n    <ErrorBoundary>\n      <Draggable {...selectionHandlers} className={cx(selectionClassName, className)}>\n        {children}\n        {toolbars}\n      </Draggable>\n    </ErrorBoundary>\n  )\n}\n\nconst Editable = namedObserver('Editable', RawEditable)\n\nfunction getTemplateSlots(data: ComponentData) {\n  if (!(data.field instanceof TemplateField)) return []\n\n  const slots = data.field.viewerStore.form.componentTree\n    .store.children?.filter(cs => cs.type === slotModel.type)\n\n  const ans = slots?.reduce((acc: Record<string, any>, cs) => {\n    acc[cs.key] = node\n    return acc\n  }, {})\n\n  return toArray(ans)\n}\n","import styled from '@emotion/styled'\nimport {ComponentTree, findTreeElementDepth, namedObserver, useComponentData} from '@react-form-builder/core'\nimport {ArrowDownLine as ArrowDownLineIcon, ArrowRightLine as ArrowRightLineIcon, Icon} from '@rsuite/icons'\nimport {useCallback, useEffect, useRef, useState} from 'react'\nimport scrollIntoView from 'scroll-into-view-if-needed'\nimport {useBuilderStore} from '../../../../../utils/BuilderStoreContext'\nimport {useComputed} from '../../../../../utils/useComputed'\nimport {useSelection} from '../hooks/useSelection'\nimport {Toolbar} from './Toolbar'\n\n/**\n * TreeNode React component properties.\n */\nexport interface TreeNodeProps {\n  /**\n   * The CSS class name.\n   */\n  className: string\n}\n\nconst RawTreeNode = ({className}: TreeNodeProps) => {\n  const componentData = useComponentData()\n  const {expanded: expandedNodes, viewer} = useBuilderStore()\n  const [hovered, setHovered] = useState(false)\n  const [{selected}] = useSelection()\n  const ref = useRef<HTMLDivElement>(null)\n\n  const findDepth = useCallback(() => findTreeElementDepth(viewer.form.componentTree, componentData) || 0,\n    [componentData, viewer.form.componentTree])\n  const depth = useComputed(findDepth)\n\n  const expanded = expandedNodes.has(componentData)\n  const toggleExpand = useCallback(() => {\n    expandedNodes.has(componentData)\n      ? expandedNodes.delete(componentData)\n      : expandedNodes.add(componentData)\n  }, [componentData, expandedNodes])\n\n  const onMouseEnter = useCallback(() => setHovered(true), [])\n  const onMouseLeave = useCallback(() => setHovered(false), [])\n\n  useEffect(() => {\n    if (selected && ref.current) {\n      scrollIntoView(ref.current, {scrollMode: 'if-needed'})\n    }\n  }, [selected])\n\n  const withChildren = (componentData.store.children?.length ?? 0) > 0\n\n  return (\n    <>\n      <SNodeItem className={className} ref={ref}\n                 onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n        <SIndent depth={depth}>\n          {withChildren &&\n            <Icon onClick={toggleExpand} as={expanded ? ArrowDownLineIcon : ArrowRightLineIcon} style={{cursor: 'pointer'}}/>\n          }\n        </SIndent>\n        <div>{componentData.key}</div>\n        <label>{componentData.model.name}</label>\n        {hovered && <Toolbar compact/>}\n      </SNodeItem>\n      {expanded && componentData.children && <ComponentTree data={componentData.children}/>}\n    </>\n  )\n}\n\nexport const TreeNode = namedObserver('TreeNode', RawTreeNode)\n\nconst SIndent = styled.div<{ depth: number }>`\n  min-width: ${({depth}) => 14 * (depth + 1) + 14}px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: end;\n  padding-inline-end: 4px;\n`\n\nconst SNodeItem = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: start;\n  flex-direction: row;\n  padding-block: 8px;\n  padding-right: 8px;\n\n  label {\n    opacity: 0.4;\n    margin-left: 6px;\n  }\n\n  &.hovered {\n    background-color: var(--rs-listbox-option-selected-bg);\n    cursor: pointer !important;\n  }\n\n  &.selected {\n    background-color: var(--rs-listbox-option-selected-bg);\n    color: var(--rs-listbox-option-selected-text);\n  }\n`\n","import {namedObserver} from '@react-form-builder/core'\nimport {Draggable} from './Editable/components/Draggable'\nimport {TreeNode} from './Editable/components/TreeNode'\nimport {useSelection} from './Editable/hooks/useSelection'\n\nconst RawDraggableTreeNode = () => {\n  const [_, selectionHandlers, selectionClassName] = useSelection()\n  return (\n    <Draggable {...selectionHandlers} isTree={true} style={{width: '100%'}}>\n      <TreeNode className={selectionClassName}/>\n    </Draggable>\n  )\n}\n\nexport const DraggableTreeNode = namedObserver('DraggableTreeNode', RawDraggableTreeNode)\n","import * as React from \"react\";\nconst SvgBreadcrumb = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M2.7516 18.3516C2.63699 18.4623 2.54557 18.5947 2.48268 18.7411C2.41979 18.8875 2.38668 19.045 2.3853 19.2043C2.38391 19.3637 2.41428 19.5217 2.47461 19.6691C2.53495 19.8166 2.62405 19.9506 2.73673 20.0633C2.8494 20.1759 2.98338 20.265 3.13085 20.3254C3.27833 20.3857 3.43635 20.4161 3.59568 20.4147C3.75502 20.4133 3.91248 20.3802 4.05889 20.3173C4.20529 20.2544 4.3377 20.163 4.4484 20.0484L11.6484 12.8484C11.8734 12.6234 11.9997 12.3182 11.9997 12C11.9997 11.6818 11.8734 11.3766 11.6484 11.1516L4.4484 3.9516C4.22208 3.73301 3.91895 3.61205 3.60432 3.61479C3.28968 3.61752 2.98871 3.74372 2.76622 3.96621C2.54373 4.1887 2.41753 4.48968 2.41479 4.80432C2.41206 5.11895 2.53301 5.42207 2.7516 5.6484L9.1032 12L2.7516 18.3516ZM12.3516 18.3516C12.237 18.4623 12.1456 18.5947 12.0827 18.7411C12.0198 18.8875 11.9867 19.045 11.9853 19.2043C11.9839 19.3637 12.0143 19.5217 12.0746 19.6691C12.135 19.8166 12.2241 19.9506 12.3367 20.0633C12.4494 20.1759 12.5834 20.265 12.7309 20.3254C12.8783 20.3857 13.0363 20.4161 13.1957 20.4147C13.355 20.4133 13.5125 20.3802 13.6589 20.3173C13.8053 20.2544 13.9377 20.163 14.0484 20.0484L21.2484 12.8484C21.4734 12.6234 21.5997 12.3182 21.5997 12C21.5997 11.6818 21.4734 11.3766 21.2484 11.1516L14.0484 3.9516C13.9377 3.83698 13.8053 3.74557 13.6589 3.68268C13.5125 3.61978 13.355 3.58668 13.1957 3.5853C13.0363 3.58391 12.8783 3.61427 12.7309 3.67461C12.5834 3.73495 12.4494 3.82405 12.3367 3.93672C12.2241 4.04939 12.135 4.18338 12.0746 4.33085C12.0143 4.47833 11.9839 4.63634 11.9853 4.79568C11.9867 4.95501 12.0198 5.11248 12.0827 5.25888C12.1456 5.40529 12.237 5.5377 12.3516 5.6484L18.7032 12L12.3516 18.3516Z\", fill: \"#9CA3AF\" }));\nexport default SvgBreadcrumb;\n","import * as React from \"react\";\nconst SvgButton = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M11 15L13.7158 12.2842C13.8728 12.1272 13.8728 11.8728 13.7158 11.7158L11 9\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M3 12C3 4.5885 4.5885 3 12 3C19.4115 3 21 4.5885 21 12C21 19.4115 19.4115 21 12 21C4.5885 21 3 19.4115 3 12Z\", stroke: \"#9CA3AF\", strokeWidth: 2 }));\nexport default SvgButton;\n","import * as React from \"react\";\nconst SvgCard = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M3 6H3.01919M3.01919 6H20.9809M3.01919 6C3 6.31438 3 6.70191 3 7.2002V16.8002C3 17.9203 3 18.4796 3.21799 18.9074C3.40973 19.2837 3.71547 19.5905 4.0918 19.7822C4.51921 20 5.079 20 6.19694 20H17.8031C18.921 20 19.48 20 19.9074 19.7822C20.2837 19.5905 20.5905 19.2837 20.7822 18.9074C21 18.48 21 17.921 21 16.8031V7.19691C21 6.70021 21 6.31368 20.9809 6M3.01919 6C3.04314 5.60768 3.09697 5.3293 3.21799 5.0918C3.40973 4.71547 3.71547 4.40973 4.0918 4.21799C4.51962 4 5.08009 4 6.2002 4H17.8002C18.9203 4 19.4796 4 19.9074 4.21799C20.2837 4.40973 20.5905 4.71547 20.7822 5.0918C20.9032 5.3293 20.957 5.60768 20.9809 6M20.9809 6H21\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgCard;\n","import * as React from \"react\";\nconst SvgCheckbox = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M8 12L11 15L16 9M4 16.8002V7.2002C4 6.08009 4 5.51962 4.21799 5.0918C4.40973 4.71547 4.71547 4.40973 5.0918 4.21799C5.51962 4 6.08009 4 7.2002 4H16.8002C17.9203 4 18.4796 4 18.9074 4.21799C19.2837 4.40973 19.5905 4.71547 19.7822 5.0918C20 5.5192 20 6.07899 20 7.19691V16.8036C20 17.9215 20 18.4805 19.7822 18.9079C19.5905 19.2842 19.2837 19.5905 18.9074 19.7822C18.48 20 17.921 20 16.8031 20H7.19691C6.07899 20 5.5192 20 5.0918 19.7822C4.71547 19.5905 4.40973 19.2842 4.21799 18.9079C4 18.4801 4 17.9203 4 16.8002Z\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgCheckbox;\n","import * as React from \"react\";\nconst SvgCollectionEditor = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M4 8L12 4L20 8L12 12L4 8Z\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M4 12L12 16L20 12\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M4 16L12 20L20 16\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgCollectionEditor;\n","import * as React from \"react\";\nconst SvgContainer = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M3 8.976C3 4.05476 4.05476 3 8.976 3H15.024C19.9452 3 21 4.05476 21 8.976V15.024C21 19.9452 19.9452 21 15.024 21H8.976C4.05476 21 3 19.9452 3 15.024V8.976Z\", stroke: \"#9CA3AF\", strokeWidth: 2 }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M12 3V21\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M21 12H12\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgContainer;\n","import * as React from \"react\";\nconst SvgContent = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M20 18H4M20 14H4M20 10H4M20 6H4\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgContent;\n","import * as React from \"react\";\nconst SvgCustomBlock = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M11.9995 12.0001H12.0095M15.535 15.5357C10.8488 20.222 5.46685 22.438 3.51423 20.4854C1.56161 18.5328 3.77769 13.1509 8.46398 8.46461C13.1503 3.77832 18.5322 1.56224 20.4848 3.51486C22.4374 5.46748 20.2213 10.8494 15.535 15.5357ZM15.535 8.46443C20.2213 13.1507 22.4374 18.5326 20.4848 20.4852C18.5321 22.4379 13.1502 20.2218 8.46394 15.5355C3.77765 10.8492 1.56157 5.4673 3.51419 3.51468C5.46681 1.56206 10.8487 3.77814 15.535 8.46443ZM12.4995 12.0001C12.4995 12.2763 12.2757 12.5001 11.9995 12.5001C11.7234 12.5001 11.4995 12.2763 11.4995 12.0001C11.4995 11.724 11.7234 11.5001 11.9995 11.5001C12.2757 11.5001 12.4995 11.724 12.4995 12.0001Z\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgCustomBlock;\n","import * as React from \"react\";\nconst SvgCustomControl = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M17 17L22 12L17 7M7 7L2 12L7 17M14 3L10 21\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgCustomControl;\n","import * as React from \"react\";\nconst SvgDatePicker = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 25, viewBox: \"0 0 24 25\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M5.17969 21.9172H18.8672C20.0297 21.9172 20.9766 20.9704 20.9766 19.8079V6.8938C20.9766 5.7313 20.0297 4.78442 18.8672 4.78442H16.6875V4.43286C16.6875 4.0438 16.3734 3.72974 15.9844 3.72974C15.5953 3.72974 15.2812 4.0438 15.2812 4.43286V4.78442H9.11719V4.43286C9.11719 4.0438 8.80313 3.72974 8.41406 3.72974C8.025 3.72974 7.71094 4.0438 7.71094 4.43286V4.78442H5.17969C4.01719 4.78442 3.07031 5.7313 3.07031 6.8938V19.8079C3.07031 20.9704 4.01719 21.9172 5.17969 21.9172ZM19.5703 19.8079C19.5703 20.1946 19.2539 20.511 18.8672 20.511H5.17969C4.79297 20.511 4.47656 20.1946 4.47656 19.8079L4.5 11.5C4.5 11.1591 4.74836 10.8 5.16467 10.8H18.9C19.2074 10.8 19.5703 11.194 19.5703 11.5V19.8079ZM19.5703 6.8938C19.5703 6.50708 19.2539 6.19067 18.8672 6.19067H16.6875V6.56567C16.6875 6.95474 16.3734 7.2688 15.9844 7.2688C15.5953 7.2688 15.2812 6.95474 15.2812 6.56567V6.19067H9.11719V6.56567C9.11719 6.95474 8.80313 7.2688 8.41406 7.2688C8.025 7.2688 7.71094 6.95474 7.71094 6.56567V6.19067H5.17969C4.79297 6.19067 4.47656 6.50708 4.47656 6.8938L4.5 8.78248C4.5 8.78248 4.52344 9.5 5.16467 9.5H18.9C19.2667 9.5 19.5938 9.16232 19.5938 8.77633L19.5703 6.8938Z\", fill: \"#9CA3AF\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M19.5703 6.8938C19.5703 6.50708 19.2539 6.19067 18.8672 6.19067H16.6875V6.56567C16.6875 6.95474 16.3734 7.2688 15.9844 7.2688C15.5953 7.2688 15.2812 6.95474 15.2812 6.56567V6.19067H9.11719V6.56567C9.11719 6.95474 8.80313 7.2688 8.41406 7.2688C8.025 7.2688 7.71094 6.95474 7.71094 6.56567V6.19067H5.17969C4.79297 6.19067 4.47656 6.50708 4.47656 6.8938M19.5703 6.8938C19.5703 6.8938 19.5938 8.39034 19.5938 8.77633M19.5703 6.8938L19.5938 8.77633M4.47656 19.8079C4.47656 20.1946 4.79297 20.511 5.17969 20.511H18.8672C19.2539 20.511 19.5703 20.1946 19.5703 19.8079V11.5C19.5703 11.194 19.2074 10.8 18.9 10.8M4.47656 19.8079C4.47656 16.0675 4.5 15.2404 4.5 11.5M4.47656 19.8079C4.47656 16.0439 4.5 11.5 4.5 11.5M4.47656 19.8079C4.47656 16.2901 4.5 11.5 4.5 11.5M4.47656 19.8079L4.5 11.5M4.47656 6.8938L4.5 8.78248M4.47656 6.8938C4.47656 7.3248 4.5 8.78248 4.5 8.78248M18.9 10.8C13.4327 10.8 9.42239 10.8 5.16467 10.8M18.9 10.8H5.16467M4.5 11.5C4.5 11.1591 4.74836 10.8 5.16467 10.8M18.9 9.5C19.2667 9.5 19.5938 9.16232 19.5938 8.77633M18.9 9.5C18.5815 9.5 5.80591 9.5 5.16467 9.5M18.9 9.5H5.16467M5.16467 9.5C4.52344 9.5 4.5 8.78248 4.5 8.78248M5.17969 21.9172H18.8672C20.0297 21.9172 20.9766 20.9704 20.9766 19.8079V6.8938C20.9766 5.7313 20.0297 4.78442 18.8672 4.78442H16.6875V4.43286C16.6875 4.0438 16.3734 3.72974 15.9844 3.72974C15.5953 3.72974 15.2812 4.0438 15.2812 4.43286V4.78442H9.11719V4.43286C9.11719 4.0438 8.80313 3.72974 8.41406 3.72974C8.025 3.72974 7.71094 4.0438 7.71094 4.43286V4.78442H5.17969C4.01719 4.78442 3.07031 5.7313 3.07031 6.8938V19.8079C3.07031 20.9704 4.01719 21.9172 5.17969 21.9172Z\", stroke: \"#9CA3AF\", strokeWidth: 0.3, strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M6 13.3C6 12.8582 6.35817 12.5 6.8 12.5H8.2C8.64183 12.5 9 12.8582 9 13.3V14.7C9 15.1418 8.64183 15.5 8.2 15.5H6.8C6.35817 15.5 6 15.1418 6 14.7V13.3Z\", fill: \"#9CA3AF\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M10.5 13.3C10.5 12.8582 10.8582 12.5 11.3 12.5H12.7C13.1418 12.5 13.5 12.8582 13.5 13.3V14.7C13.5 15.1418 13.1418 15.5 12.7 15.5H11.3C10.8582 15.5 10.5 15.1418 10.5 14.7V13.3Z\", fill: \"#9CA3AF\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M15 13.3C15 12.8582 15.3582 12.5 15.8 12.5H17.2C17.6418 12.5 18 12.8582 18 13.3V14.7C18 15.1418 17.6418 15.5 17.2 15.5H15.8C15.3582 15.5 15 15.1418 15 14.7V13.3Z\", fill: \"#9CA3AF\" }));\nexport default SvgDatePicker;\n","import * as React from \"react\";\nconst SvgDefault = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M15 7L20 12L15 17M9 17L4 12L9 7\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgDefault;\n","import * as React from \"react\";\nconst SvgDropdown = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M16 10L12 14L8 10\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgDropdown;\n","import * as React from \"react\";\nconst SvgDropzone = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M10.5 2.0028C9.82495 2.01194 9.4197 2.05103 9.09202 2.21799C8.71569 2.40973 8.40973 2.71569 8.21799 3.09202C8.05103 3.4197 8.01194 3.82495 8.0028 4.5M19.5 2.0028C20.1751 2.01194 20.5803 2.05103 20.908 2.21799C21.2843 2.40973 21.5903 2.71569 21.782 3.09202C21.949 3.4197 21.9881 3.82494 21.9972 4.49999M21.9972 13.5C21.9881 14.175 21.949 14.5803 21.782 14.908C21.5903 15.2843 21.2843 15.5903 20.908 15.782C20.5803 15.949 20.1751 15.9881 19.5 15.9972M22 7.99999V9.99999M14.0001 2H16M5.2 22H12.8C13.9201 22 14.4802 22 14.908 21.782C15.2843 21.5903 15.5903 21.2843 15.782 20.908C16 20.4802 16 19.9201 16 18.8V11.2C16 10.0799 16 9.51984 15.782 9.09202C15.5903 8.71569 15.2843 8.40973 14.908 8.21799C14.4802 8 13.9201 8 12.8 8H5.2C4.0799 8 3.51984 8 3.09202 8.21799C2.71569 8.40973 2.40973 8.71569 2.21799 9.09202C2 9.51984 2 10.0799 2 11.2V18.8C2 19.9201 2 20.4802 2.21799 20.908C2.40973 21.2843 2.71569 21.5903 3.09202 21.782C3.51984 22 4.07989 22 5.2 22Z\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgDropzone;\n","import * as React from \"react\";\nconst SvgErrorMessage = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M12 9.00006V13.0001M4.37891 15.1999C3.46947 16.775 3.01489 17.5629 3.08281 18.2092C3.14206 18.7729 3.43792 19.2851 3.89648 19.6182C4.42204 20.0001 5.3309 20.0001 7.14853 20.0001H16.8515C18.6691 20.0001 19.5778 20.0001 20.1034 19.6182C20.5619 19.2851 20.8579 18.7729 20.9172 18.2092C20.9851 17.5629 20.5307 16.775 19.6212 15.1999L14.7715 6.79986C13.8621 5.22468 13.4071 4.43722 12.8135 4.17291C12.2957 3.94236 11.704 3.94236 11.1862 4.17291C10.5928 4.43711 10.1381 5.22458 9.22946 6.79845L4.37891 15.1999ZM12.0508 16.0001V16.1001L11.9502 16.1003V16.0001H12.0508Z\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgErrorMessage;\n","import * as React from \"react\";\nconst SvgFooter = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M20 15H4M20 15V7.19691C20 6.07899 20 5.5192 19.7822 5.0918C19.5905 4.71547 19.2837 4.40973 18.9074 4.21799C18.4796 4 17.9203 4 16.8002 4H7.2002C6.08009 4 5.51962 4 5.0918 4.21799C4.71547 4.40973 4.40973 4.71547 4.21799 5.0918C4 5.51962 4 6.08009 4 7.2002V15M20 15V16.8031C20 17.921 20 18.48 19.7822 18.9074C19.5905 19.2837 19.2837 19.5905 18.9074 19.7822C18.48 20 17.921 20 16.8031 20H7.19691C6.07899 20 5.5192 20 5.0918 19.7822C4.71547 19.5905 4.40973 19.2837 4.21799 18.9074C4 18.4796 4 17.9203 4 16.8002V15\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgFooter;\n","import * as React from \"react\";\nconst SvgGrid = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M14 17.5C14 16.0955 14 15.3933 14.3371 14.8889C14.483 14.6705 14.6705 14.483 14.8889 14.3371C15.3933 14 16.0955 14 17.5 14C18.9045 14 19.6067 14 20.1111 14.3371C20.3295 14.483 20.517 14.6705 20.6629 14.8889C21 15.3933 21 16.0955 21 17.5C21 18.9045 21 19.6067 20.6629 20.1111C20.517 20.3295 20.3295 20.517 20.1111 20.6629C19.6067 21 18.9045 21 17.5 21C16.0955 21 15.3933 21 14.8889 20.6629C14.6705 20.517 14.483 20.3295 14.3371 20.1111C14 19.6067 14 18.9045 14 17.5Z\", stroke: \"#9CA3AF\", strokeWidth: 2 }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M3 17.5C3 16.0955 3 15.3933 3.33706 14.8889C3.48298 14.6705 3.67048 14.483 3.88886 14.3371C4.39331 14 5.09554 14 6.5 14C7.90446 14 8.60669 14 9.11114 14.3371C9.32952 14.483 9.51702 14.6705 9.66294 14.8889C10 15.3933 10 16.0955 10 17.5C10 18.9045 10 19.6067 9.66294 20.1111C9.51702 20.3295 9.32952 20.517 9.11114 20.6629C8.60669 21 7.90446 21 6.5 21C5.09554 21 4.39331 21 3.88886 20.6629C3.67048 20.517 3.48298 20.3295 3.33706 20.1111C3 19.6067 3 18.9045 3 17.5Z\", stroke: \"#9CA3AF\", strokeWidth: 2 }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M3 6.5C3 5.09554 3 4.39331 3.33706 3.88886C3.48298 3.67048 3.67048 3.48298 3.88886 3.33706C4.39331 3 5.09554 3 6.5 3C7.90446 3 8.60669 3 9.11114 3.33706C9.32952 3.48298 9.51702 3.67048 9.66294 3.88886C10 4.39331 10 5.09554 10 6.5C10 7.90446 10 8.60669 9.66294 9.11114C9.51702 9.32952 9.32952 9.51702 9.11114 9.66294C8.60669 10 7.90446 10 6.5 10C5.09554 10 4.39331 10 3.88886 9.66294C3.67048 9.51702 3.48298 9.32952 3.33706 9.11114C3 8.60669 3 7.90446 3 6.5Z\", stroke: \"#9CA3AF\", strokeWidth: 2 }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M14 6.5H21\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M17.5 3V10\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgGrid;\n","import * as React from \"react\";\nconst SvgGridLayout = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M5.3783 2C5.3905 2 5.40273 2 5.415 2H7.62171C8.01734 1.99998 8.37336 1.99996 8.66942 2.02454C8.98657 2.05088 9.32336 2.11052 9.65244 2.28147C10.109 2.51866 10.4813 2.89096 10.7185 3.34757C10.8895 3.67665 10.9491 4.01343 10.9755 4.33059C11 4.62664 11 4.98265 11 5.37828V9.62172C11 10.0174 11 10.3734 10.9755 10.6694C10.9491 10.9866 10.8895 11.3234 10.7185 11.6524C10.4813 12.109 10.109 12.4813 9.65244 12.7185C9.32336 12.8895 8.98657 12.9491 8.66942 12.9755C8.37337 13 8.01735 13 7.62172 13H5.37828C4.98265 13 4.62664 13 4.33059 12.9755C4.01344 12.9491 3.67665 12.8895 3.34757 12.7185C2.89096 12.4813 2.51866 12.109 2.28147 11.6524C2.11052 11.3234 2.05088 10.9866 2.02454 10.6694C1.99996 10.3734 1.99998 10.0173 2 9.62171V5.415C2 5.40273 2 5.3905 2 5.3783C1.99998 4.98266 1.99996 4.62664 2.02454 4.33059C2.05088 4.01343 2.11052 3.67665 2.28147 3.34757C2.51866 2.89096 2.89096 2.51866 3.34757 2.28147C3.67665 2.11052 4.01343 2.05088 4.33059 2.02454C4.62664 1.99996 4.98266 1.99998 5.3783 2ZM4.27752 4.05297C4.27226 4.05488 4.26952 4.0563 4.26952 4.0563C4.17819 4.10373 4.10373 4.17819 4.0563 4.26952C4.0563 4.26952 4.05488 4.27226 4.05297 4.27752C4.05098 4.28299 4.04767 4.29312 4.04372 4.30961C4.03541 4.34427 4.02554 4.40145 4.01768 4.49611C4.00081 4.69932 4 4.9711 4 5.415V9.585C4 10.0289 4.00081 10.3007 4.01768 10.5039C4.02554 10.5986 4.03541 10.6557 4.04372 10.6904C4.04767 10.7069 4.05098 10.717 4.05297 10.7225C4.05488 10.7277 4.0563 10.7305 4.0563 10.7305C4.10373 10.8218 4.17819 10.8963 4.26952 10.9437C4.26952 10.9437 4.27226 10.9451 4.27752 10.947C4.28299 10.949 4.29312 10.9523 4.30961 10.9563C4.34427 10.9646 4.40145 10.9745 4.49611 10.9823C4.69932 10.9992 4.9711 11 5.415 11H7.585C8.02891 11 8.30068 10.9992 8.5039 10.9823C8.59855 10.9745 8.65574 10.9646 8.6904 10.9563C8.70688 10.9523 8.71701 10.949 8.72249 10.947C8.72775 10.9451 8.73049 10.9437 8.73049 10.9437C8.82181 10.8963 8.89627 10.8218 8.94371 10.7305C8.94371 10.7305 8.94513 10.7277 8.94704 10.7225C8.94903 10.717 8.95234 10.7069 8.95629 10.6904C8.96459 10.6557 8.97446 10.5986 8.98232 10.5039C8.9992 10.3007 9 10.0289 9 9.585V5.415C9 4.9711 8.9992 4.69932 8.98232 4.49611C8.97446 4.40145 8.96459 4.34427 8.95629 4.30961C8.95234 4.29312 8.94903 4.28299 8.94704 4.27752C8.94513 4.27226 8.94371 4.26952 8.94371 4.26952C8.89627 4.17819 8.82181 4.10373 8.73049 4.0563C8.73049 4.0563 8.72775 4.05488 8.72249 4.05297C8.71701 4.05098 8.70688 4.04767 8.6904 4.04372C8.65574 4.03541 8.59855 4.02554 8.5039 4.01768C8.30068 4.00081 8.02891 4 7.585 4H5.415C4.9711 4 4.69932 4.00081 4.49611 4.01768C4.40145 4.02554 4.34427 4.03541 4.30961 4.04372C4.29312 4.04767 4.28299 4.05098 4.27752 4.05297ZM16.3783 2H18.6217C19.0173 1.99998 19.3734 1.99996 19.6694 2.02454C19.9866 2.05088 20.3234 2.11052 20.6524 2.28147C21.109 2.51866 21.4813 2.89096 21.7185 3.34757C21.8895 3.67665 21.9491 4.01343 21.9755 4.33059C22 4.62665 22 4.98267 22 5.37832V5.62168C22 6.01733 22 6.37336 21.9755 6.66942C21.9491 6.98657 21.8895 7.32336 21.7185 7.65244C21.4813 8.10905 21.109 8.48135 20.6524 8.71854C20.3234 8.88948 19.9866 8.94912 19.6694 8.97546C19.3734 9.00005 19.0173 9.00003 18.6217 9H16.3783C15.9827 9.00003 15.6266 9.00005 15.3306 8.97546C15.0134 8.94912 14.6766 8.88948 14.3476 8.71854C13.891 8.48135 13.5187 8.10905 13.2815 7.65244C13.1105 7.32336 13.0509 6.98657 13.0245 6.66942C13 6.37337 13 6.01735 13 5.62172V5.37828C13 4.98265 13 4.62664 13.0245 4.33059C13.0509 4.01344 13.1105 3.67665 13.2815 3.34757C13.5187 2.89096 13.891 2.51866 14.3476 2.28147C14.6766 2.11052 15.0134 2.05088 15.3306 2.02454C15.6266 1.99996 15.9827 1.99998 16.3783 2ZM15.2775 4.05297C15.2723 4.05488 15.2695 4.0563 15.2695 4.0563C15.1782 4.10373 15.1037 4.17819 15.0563 4.26952C15.0563 4.26952 15.0549 4.27226 15.053 4.27752C15.051 4.28299 15.0477 4.29312 15.0437 4.30961C15.0354 4.34427 15.0255 4.40145 15.0177 4.49611C15.0008 4.69932 15 4.9711 15 5.415V5.585C15 6.02891 15.0008 6.30068 15.0177 6.5039C15.0255 6.59855 15.0354 6.65574 15.0437 6.6904C15.0477 6.70688 15.051 6.71701 15.053 6.72249C15.0549 6.72775 15.0563 6.73049 15.0563 6.73049C15.1037 6.82181 15.1782 6.89627 15.2695 6.94371C15.2695 6.94371 15.2723 6.94512 15.2775 6.94704C15.283 6.94903 15.2931 6.95234 15.3096 6.95629C15.3443 6.96459 15.4015 6.97446 15.4961 6.98232C15.6993 6.9992 15.9711 7 16.415 7H18.585C19.0289 7 19.3007 6.9992 19.5039 6.98232C19.5986 6.97446 19.6557 6.96459 19.6904 6.95629C19.7069 6.95234 19.717 6.94903 19.7225 6.94704C19.7277 6.94512 19.7305 6.94371 19.7305 6.94371C19.8218 6.89627 19.8963 6.82181 19.9437 6.73049C19.9437 6.73049 19.9451 6.72775 19.947 6.72249C19.949 6.71701 19.9523 6.70688 19.9563 6.6904C19.9646 6.65573 19.9745 6.59855 19.9823 6.5039C19.9992 6.30068 20 6.02891 20 5.585V5.415C20 4.9711 19.9992 4.69932 19.9823 4.49611C19.9745 4.40145 19.9646 4.34427 19.9563 4.30961C19.9523 4.29312 19.949 4.28299 19.947 4.27752C19.9451 4.27226 19.9437 4.26952 19.9437 4.26952C19.8963 4.17819 19.8218 4.10373 19.7305 4.0563C19.7305 4.0563 19.7277 4.05488 19.7225 4.05297C19.717 4.05098 19.7069 4.04767 19.6904 4.04372C19.6557 4.03541 19.5986 4.02554 19.5039 4.01768C19.3007 4.00081 19.0289 4 18.585 4H16.415C15.9711 4 15.6993 4.00081 15.4961 4.01768C15.4015 4.02554 15.3443 4.03541 15.3096 4.04372C15.2931 4.04767 15.283 4.05098 15.2775 4.05297ZM16.3783 11H18.6217C19.0173 11 19.3734 11 19.6694 11.0245C19.9866 11.0509 20.3234 11.1105 20.6524 11.2815C21.109 11.5187 21.4813 11.891 21.7185 12.3476C21.8895 12.6766 21.9491 13.0134 21.9755 13.3306C22 13.6266 22 13.9827 22 14.3783V18.6217C22 19.0173 22 19.3734 21.9755 19.6694C21.9491 19.9866 21.8895 20.3234 21.7185 20.6524C21.4813 21.109 21.109 21.4813 20.6524 21.7185C20.3234 21.8895 19.9866 21.9491 19.6694 21.9755C19.3734 22 19.0173 22 18.6217 22H16.3783C15.9827 22 15.6266 22 15.3306 21.9755C15.0134 21.9491 14.6766 21.8895 14.3476 21.7185C13.891 21.4813 13.5187 21.109 13.2815 20.6524C13.1105 20.3234 13.0509 19.9866 13.0245 19.6694C13 19.3734 13 19.0174 13 18.6217V14.3783C13 13.9827 13 13.6266 13.0245 13.3306C13.0509 13.0134 13.1105 12.6766 13.2815 12.3476C13.5187 11.891 13.891 11.5187 14.3476 11.2815C14.6766 11.1105 15.0134 11.0509 15.3306 11.0245C15.6266 11 15.9827 11 16.3783 11ZM15.2775 13.053C15.2723 13.0549 15.2695 13.0563 15.2695 13.0563C15.1782 13.1037 15.1037 13.1782 15.0563 13.2695C15.0563 13.2695 15.0549 13.2723 15.053 13.2775C15.051 13.283 15.0477 13.2931 15.0437 13.3096C15.0354 13.3443 15.0255 13.4015 15.0177 13.4961C15.0008 13.6993 15 13.9711 15 14.415V18.585C15 19.0289 15.0008 19.3007 15.0177 19.5039C15.0255 19.5986 15.0354 19.6557 15.0437 19.6904C15.0477 19.7069 15.051 19.717 15.053 19.7225C15.0549 19.7277 15.0563 19.7305 15.0563 19.7305C15.1037 19.8218 15.1782 19.8963 15.2695 19.9437C15.2695 19.9437 15.2723 19.9451 15.2775 19.947C15.283 19.949 15.2931 19.9523 15.3096 19.9563C15.3443 19.9646 15.4015 19.9745 15.4961 19.9823C15.6993 19.9992 15.9711 20 16.415 20H18.585C19.0289 20 19.3007 19.9992 19.5039 19.9823C19.5986 19.9745 19.6557 19.9646 19.6904 19.9563C19.7069 19.9523 19.717 19.949 19.7225 19.947C19.7277 19.9451 19.7305 19.9437 19.7305 19.9437C19.8218 19.8963 19.8963 19.8218 19.9437 19.7305C19.9437 19.7305 19.9451 19.7277 19.947 19.7225C19.949 19.717 19.9523 19.7069 19.9563 19.6904C19.9646 19.6557 19.9745 19.5986 19.9823 19.5039C19.9992 19.3007 20 19.0289 20 18.585V14.415C20 13.9711 19.9992 13.6993 19.9823 13.4961C19.9745 13.4015 19.9646 13.3443 19.9563 13.3096C19.9523 13.2931 19.949 13.283 19.947 13.2775C19.9451 13.2723 19.9437 13.2695 19.9437 13.2695C19.8963 13.1782 19.8218 13.1037 19.7305 13.0563C19.7305 13.0563 19.7277 13.0549 19.7225 13.053C19.717 13.051 19.7069 13.0477 19.6904 13.0437C19.6557 13.0354 19.5986 13.0255 19.5039 13.0177C19.3007 13.0008 19.0289 13 18.585 13H16.415C15.9711 13 15.6993 13.0008 15.4961 13.0177C15.4015 13.0255 15.3443 13.0354 15.3096 13.0437C15.2931 13.0477 15.283 13.051 15.2775 13.053ZM5.37828 15H7.62172C8.01735 15 8.37337 15 8.66942 15.0245C8.98657 15.0509 9.32336 15.1105 9.65244 15.2815C10.109 15.5187 10.4813 15.891 10.7185 16.3476C10.8895 16.6766 10.9491 17.0134 10.9755 17.3306C11 17.6266 11 17.9827 11 18.3783V18.6217C11 19.0174 11 19.3734 10.9755 19.6694C10.9491 19.9866 10.8895 20.3234 10.7185 20.6524C10.4813 21.109 10.109 21.4813 9.65244 21.7185C9.32336 21.8895 8.98657 21.9491 8.66942 21.9755C8.37336 22 8.01733 22 7.62168 22H5.37832C4.98267 22 4.62665 22 4.33059 21.9755C4.01343 21.9491 3.67665 21.8895 3.34757 21.7185C2.89096 21.4813 2.51866 21.109 2.28147 20.6524C2.11052 20.3234 2.05088 19.9866 2.02454 19.6694C1.99996 19.3734 1.99998 19.0173 2 18.6217V18.3783C1.99998 17.9827 1.99996 17.6266 2.02454 17.3306C2.05088 17.0134 2.11052 16.6766 2.28147 16.3476C2.51866 15.891 2.89096 15.5187 3.34757 15.2815C3.67665 15.1105 4.01344 15.0509 4.33059 15.0245C4.62664 15 4.98265 15 5.37828 15ZM4.27752 17.053C4.27226 17.0549 4.26952 17.0563 4.26952 17.0563C4.17819 17.1037 4.10373 17.1782 4.0563 17.2695C4.0563 17.2695 4.05488 17.2723 4.05297 17.2775C4.05098 17.283 4.04767 17.2931 4.04372 17.3096C4.03541 17.3443 4.02554 17.4015 4.01768 17.4961C4.00081 17.6993 4 17.9711 4 18.415V18.585C4 19.0289 4.00081 19.3007 4.01768 19.5039C4.02554 19.5986 4.03541 19.6557 4.04372 19.6904C4.04767 19.7069 4.05098 19.717 4.05297 19.7225C4.05488 19.7277 4.0563 19.7305 4.0563 19.7305C4.10373 19.8218 4.17819 19.8963 4.26952 19.9437C4.26952 19.9437 4.27226 19.9451 4.27752 19.947C4.28299 19.949 4.29312 19.9523 4.30961 19.9563C4.34427 19.9646 4.40145 19.9745 4.49611 19.9823C4.69932 19.9992 4.9711 20 5.415 20H7.585C8.02891 20 8.30068 19.9992 8.5039 19.9823C8.59855 19.9745 8.65573 19.9646 8.6904 19.9563C8.70688 19.9523 8.71701 19.949 8.72249 19.947C8.72775 19.9451 8.73049 19.9437 8.73049 19.9437C8.82181 19.8963 8.89627 19.8218 8.94371 19.7305C8.94371 19.7305 8.94513 19.7277 8.94704 19.7225C8.94903 19.717 8.95234 19.7069 8.95629 19.6904C8.96459 19.6557 8.97446 19.5986 8.98232 19.5039C8.9992 19.3007 9 19.0289 9 18.585V18.415C9 17.9711 8.9992 17.6993 8.98232 17.4961C8.97446 17.4015 8.96459 17.3443 8.95629 17.3096C8.95234 17.2931 8.94903 17.283 8.94704 17.2775C8.94513 17.2723 8.94371 17.2695 8.94371 17.2695C8.89627 17.1782 8.82181 17.1037 8.73049 17.0563C8.73049 17.0563 8.72775 17.0549 8.72249 17.053C8.71701 17.051 8.70688 17.0477 8.6904 17.0437C8.65574 17.0354 8.59855 17.0255 8.5039 17.0177C8.30068 17.0008 8.02891 17 7.585 17H5.415C4.9711 17 4.69932 17.0008 4.49611 17.0177C4.40145 17.0255 4.34427 17.0354 4.30961 17.0437C4.29312 17.0477 4.28299 17.051 4.27752 17.053Z\", fill: \"#9CA3AF\" }));\nexport default SvgGridLayout;\n","import * as React from \"react\";\nconst SvgGridView = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M14 17.5C14 16.0955 14 15.3933 14.3371 14.8889C14.483 14.6705 14.6705 14.483 14.8889 14.3371C15.3933 14 16.0955 14 17.5 14C18.9045 14 19.6067 14 20.1111 14.3371C20.3295 14.483 20.517 14.6705 20.6629 14.8889C21 15.3933 21 16.0955 21 17.5C21 18.9045 21 19.6067 20.6629 20.1111C20.517 20.3295 20.3295 20.517 20.1111 20.6629C19.6067 21 18.9045 21 17.5 21C16.0955 21 15.3933 21 14.8889 20.6629C14.6705 20.517 14.483 20.3295 14.3371 20.1111C14 19.6067 14 18.9045 14 17.5Z\", stroke: \"#9CA3AF\", strokeWidth: 2 }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M14 6.5C14 5.0955 14 4.3933 14.3371 3.8889C14.483 3.6705 14.6705 3.483 14.8889 3.3371C15.3933 3 16.0955 3 17.5 3C18.9045 3 19.6067 3 20.1111 3.3371C20.3295 3.483 20.517 3.6705 20.6629 3.8889C21 4.3933 21 5.0955 21 6.5C21 7.9045 21 8.6067 20.6629 9.1111C20.517 9.3295 20.3295 9.517 20.1111 9.6629C19.6067 10 18.9045 10 17.5 10C16.0955 10 15.3933 10 14.8889 9.6629C14.6705 9.517 14.483 9.3295 14.3371 9.1111C14 8.6067 14 7.9045 14 6.5Z\", stroke: \"#9CA3AF\", strokeWidth: 2 }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M3 17.5C3 16.0955 3 15.3933 3.33706 14.8889C3.48298 14.6705 3.67048 14.483 3.88886 14.3371C4.39331 14 5.09554 14 6.5 14C7.90446 14 8.60669 14 9.11114 14.3371C9.32952 14.483 9.51702 14.6705 9.66294 14.8889C10 15.3933 10 16.0955 10 17.5C10 18.9045 10 19.6067 9.66294 20.1111C9.51702 20.3295 9.32952 20.517 9.11114 20.6629C8.60669 21 7.90446 21 6.5 21C5.09554 21 4.39331 21 3.88886 20.6629C3.67048 20.517 3.48298 20.3295 3.33706 20.1111C3 19.6067 3 18.9045 3 17.5Z\", stroke: \"#9CA3AF\", strokeWidth: 2 }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M3 6.5C3 5.09554 3 4.39331 3.33706 3.88886C3.48298 3.67048 3.67048 3.48298 3.88886 3.33706C4.39331 3 5.09554 3 6.5 3C7.90446 3 8.60669 3 9.11114 3.33706C9.32952 3.48298 9.51702 3.67048 9.66294 3.88886C10 4.39331 10 5.09554 10 6.5C10 7.90446 10 8.60669 9.66294 9.11114C9.51702 9.32952 9.32952 9.51702 9.11114 9.66294C8.60669 10 7.90446 10 6.5 10C5.09554 10 4.39331 10 3.88886 9.66294C3.67048 9.51702 3.48298 9.32952 3.33706 9.11114C3 8.60669 3 7.90446 3 6.5Z\", stroke: \"#9CA3AF\", strokeWidth: 2 }));\nexport default SvgGridView;\n","import * as React from \"react\";\nconst SvgHeader = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M10 19H12M12 19H14M12 19V5M12 5H6V6M12 5H18V6\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgHeader;\n","import * as React from \"react\";\nconst SvgImage = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M3.00005 18.0001C3 17.9355 3 17.8689 3 17.8002V6.2002C3 5.08009 3 4.51962 3.21799 4.0918C3.40973 3.71547 3.71547 3.40973 4.0918 3.21799C4.51962 3 5.08009 3 6.2002 3H17.8002C18.9203 3 19.4801 3 19.9079 3.21799C20.2842 3.40973 20.5905 3.71547 20.7822 4.0918C21 4.5192 21 5.07899 21 6.19691V17.8031C21 18.2881 21 18.6679 20.9822 18.9774M3.00005 18.0001C3.00082 18.9884 3.01337 19.5058 3.21799 19.9074C3.40973 20.2837 3.71547 20.5905 4.0918 20.7822C4.5192 21 5.07899 21 6.19691 21H17.8036C18.9215 21 19.4805 21 19.9079 20.7822C20.2842 20.5905 20.5905 20.2837 20.7822 19.9074C20.9055 19.6654 20.959 19.3813 20.9822 18.9774M3.00005 18.0001L7.76798 12.4375L7.76939 12.436C8.19227 11.9426 8.40406 11.6955 8.65527 11.6064C8.87594 11.5282 9.11686 11.53 9.33643 11.6113C9.58664 11.704 9.79506 11.9539 10.2119 12.4541L12.8831 15.6595C13.269 16.1226 13.463 16.3554 13.6986 16.4489C13.9065 16.5313 14.1357 16.5406 14.3501 16.4773C14.5942 16.4053 14.8091 16.1904 15.2388 15.7607L15.7358 15.2637C16.1733 14.8262 16.3921 14.6076 16.6397 14.5361C16.8571 14.4734 17.0896 14.4869 17.2988 14.5732C17.537 14.6716 17.7302 14.9124 18.1167 15.3955L20.9822 18.9774M20.9822 18.9774L21 18.9996M15 9C14.4477 9 14 8.55228 14 8C14 7.44772 14.4477 7 15 7C15.5523 7 16 7.44772 16 8C16 8.55228 15.5523 9 15 9Z\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgImage;\n","import * as React from \"react\";\nconst SvgInput = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M10.0002 4H7.2002C6.08009 4 5.51962 4 5.0918 4.21799C4.71547 4.40973 4.40973 4.71547 4.21799 5.0918C4 5.51962 4 6.08009 4 7.2002V16.8002C4 17.9203 4 18.4801 4.21799 18.9079C4.40973 19.2842 4.71547 19.5905 5.0918 19.7822C5.5192 20 6.07899 20 7.19691 20H16.8031C17.921 20 18.48 20 18.9074 19.7822C19.2837 19.5905 19.5905 19.2839 19.7822 18.9076C20 18.4802 20 17.921 20 16.8031V14M16 5L10 11V14H13L19 8M16 5L19 2L22 5L19 8M16 5L19 8\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgInput;\n","import * as React from \"react\";\nconst SvgLabel = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M19.2933 9.95137L16.96 7.15137C16.6073 6.72814 16.43 6.51639 16.2139 6.36426C16.0223 6.22946 15.8084 6.12953 15.5822 6.06868C15.327 6 15.0523 6 14.5014 6H7.2002C6.08009 6 5.51962 6 5.0918 6.21799C4.71547 6.40973 4.40973 6.71547 4.21799 7.0918C4 7.51962 4 8.08009 4 9.2002V14.8002C4 15.9203 4 16.4801 4.21799 16.9079C4.40973 17.2842 4.71547 17.5905 5.0918 17.7822C5.5192 18 6.07899 18 7.19691 18H14.5014C15.0523 18 15.327 17.9998 15.5822 17.9312C15.8084 17.8703 16.0223 17.7702 16.2139 17.6354C16.43 17.4833 16.6073 17.2721 16.96 16.8488L19.2933 14.0488C19.9006 13.32 20.2036 12.9556 20.3197 12.5488C20.422 12.1902 20.422 11.8095 20.3197 11.4509C20.2036 11.0441 19.9006 10.6801 19.2933 9.95137Z\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgLabel;\n","import * as React from \"react\";\nconst SvgLink = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M13.7947 5.22057L13.7933 5.22193M13.7933 5.22193C17.3485 1.66675 22.3331 6.65172 18.7782 10.2066L15.7394 13.2455C13.9985 14.9863 11.8768 14.5997 10.6322 13.344C10.5023 13.2129 10.382 13.0724 10.2726 12.9239M13.7933 5.22193L12.8499 6.16536M10.2053 18.3832L10.2067 18.3818M10.2067 18.3818C6.65149 21.937 1.66692 16.952 5.22184 13.3971L8.26066 10.3583C10.0015 8.6175 12.1233 9.00405 13.3678 10.2598C13.4977 10.3908 13.618 10.5313 13.7274 10.6798M10.2067 18.3818L11.1501 17.4384\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgLink;\n","import * as React from \"react\";\nconst SvgMenu = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M5 15H19M5 9H19\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgMenu;\n","import * as React from \"react\";\nconst SvgMessage = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M7.5 10.5H7.51M12 10.5H12.01M16.5 10.5H16.51M9.9 19.2L11.36 21.1467C11.5771 21.4362 11.6857 21.5809 11.8188 21.6327C11.9353 21.678 12.0647 21.678 12.1812 21.6327C12.3143 21.5809 12.4229 21.4362 12.64 21.1467L14.1 19.2C14.3931 18.8091 14.5397 18.6137 14.7185 18.4645C14.9569 18.2656 15.2383 18.1248 15.5405 18.0535C15.7671 18 16.0114 18 16.5 18C17.8978 18 18.5967 18 19.1481 17.7716C19.8831 17.4672 20.4672 16.8831 20.7716 16.1481C21 15.5967 21 14.8978 21 13.5V7.8C21 6.11984 21 5.27976 20.673 4.63803C20.3854 4.07354 19.9265 3.6146 19.362 3.32698C18.7202 3 17.8802 3 16.2 3H7.8C6.11984 3 5.27976 3 4.63803 3.32698C4.07354 3.6146 3.6146 4.07354 3.32698 4.63803C3 5.27976 3 6.11984 3 7.8V13.5C3 14.8978 3 15.5967 3.22836 16.1481C3.53284 16.8831 4.11687 17.4672 4.85195 17.7716C5.40326 18 6.10218 18 7.5 18C7.98858 18 8.23287 18 8.45951 18.0535C8.76169 18.1248 9.04312 18.2656 9.2815 18.4645C9.46028 18.6137 9.60685 18.8091 9.9 19.2ZM8 10.5C8 10.7761 7.77614 11 7.5 11C7.22386 11 7 10.7761 7 10.5C7 10.2239 7.22386 10 7.5 10C7.77614 10 8 10.2239 8 10.5ZM12.5 10.5C12.5 10.7761 12.2761 11 12 11C11.7239 11 11.5 10.7761 11.5 10.5C11.5 10.2239 11.7239 10 12 10C12.2761 10 12.5 10.2239 12.5 10.5ZM17 10.5C17 10.7761 16.7761 11 16.5 11C16.2239 11 16 10.7761 16 10.5C16 10.2239 16.2239 10 16.5 10C16.7761 10 17 10.2239 17 10.5Z\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgMessage;\n","import * as React from \"react\";\nconst SvgNumberFormat = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M19.5 9H14V12.5H19V16L16.8714 16.8514C16.633 16.9468 16.367 16.9468 16.1286 16.8514L14 16\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M9.5 16.923H4V13.423H9V9.92297L6.8714 9.07157C6.633 8.97617 6.367 8.97617 6.1286 9.07157L4 9.92297\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgNumberFormat;\n","import * as React from \"react\";\nconst SvgPatternFormat = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M5 6.5C5.82843 6.5 6.5 5.82843 6.5 5C6.5 4.17157 5.82843 3.5 5 3.5C4.17157 3.5 3.5 4.17157 3.5 5C3.5 5.82843 4.17157 6.5 5 6.5ZM5 6.5V10.5M5 10.5C5.82843 10.5 6.5 11.1716 6.5 12C6.5 12.8284 5.82843 13.5 5 13.5M5 10.5C4.17157 10.5 3.5 11.1716 3.5 12C3.5 12.8284 4.17157 13.5 5 13.5M5 13.5V17.5M5 17.5C4.17157 17.5 3.5 18.1716 3.5 19C3.5 19.8284 4.17157 20.5 5 20.5C5.82843 20.5 6.5 19.8284 6.5 19M5 17.5C5.82843 17.5 6.5 18.1716 6.5 19M6.5 19H10.5M10.5 19C10.5 19.8284 11.1716 20.5 12 20.5C12.8284 20.5 13.5 19.8284 13.5 19M10.5 19C10.5 18.1716 11.1716 17.5 12 17.5C12.8284 17.5 13.5 18.1716 13.5 19M13.5 19H17.5M17.5 19C17.5 19.8284 18.1716 20.5 19 20.5C19.8284 20.5 20.5 19.8284 20.5 19C20.5 18.1716 19.8284 17.5 19 17.5C18.1716 17.5 17.5 18.1716 17.5 19ZM13.5 5C13.5 5.82843 12.8284 6.5 12 6.5C11.1716 6.5 10.5 5.82843 10.5 5C10.5 4.17157 11.1716 3.5 12 3.5C12.8284 3.5 13.5 4.17157 13.5 5ZM13.5 12C13.5 12.8284 12.8284 13.5 12 13.5C11.1716 13.5 10.5 12.8284 10.5 12C10.5 11.1716 11.1716 10.5 12 10.5C12.8284 10.5 13.5 11.1716 13.5 12ZM20.5 5C20.5 5.82843 19.8284 6.5 19 6.5C18.1716 6.5 17.5 5.82843 17.5 5C17.5 4.17157 18.1716 3.5 19 3.5C19.8284 3.5 20.5 4.17157 20.5 5ZM20.5 12C20.5 12.8284 19.8284 13.5 19 13.5C18.1716 13.5 17.5 12.8284 17.5 12C17.5 11.1716 18.1716 10.5 19 10.5C19.8284 10.5 20.5 11.1716 20.5 12Z\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgPatternFormat;\n","import * as React from \"react\";\nconst SvgProgressCircle = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M3 14C3 18.9706 7.02944 23 12 23C16.9706 23 21 18.9706 21 14\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M12 5.00004C7.0294 5.00004 3 9.02948 3 14C3 18.9706 7.0294 23 12 23\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgProgressCircle;\n","import * as React from \"react\";\nconst SvgProgressLine = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M20 12H4\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgProgressLine;\n","import * as React from \"react\";\nconst SvgRadioGroup = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M12 4C7.58172 4 4 7.58172 4 12C4 16.4183 7.58172 20 12 20C16.4183 20 20 16.4183 20 12C20 7.58172 16.4183 4 12 4Z\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9Z\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgRadioGroup;\n","import * as React from \"react\";\nconst SvgRepeater = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M11 2L14 5M14 5L11 8M14 5H6.8C5.11984 5 4.27976 5 3.63803 5.32698C3.07354 5.6146 2.6146 6.07354 2.32698 6.63803C2 7.27976 2 8.11984 2 9.8V15.5C2 15.9644 2 16.1966 2.02567 16.3916C2.2029 17.7378 3.26222 18.7971 4.60842 18.9743C4.80337 19 5.03558 19 5.5 19M10 19H17.2C18.8802 19 19.7202 19 20.362 18.673C20.9265 18.3854 21.3854 17.9265 21.673 17.362C22 16.7202 22 15.8802 22 14.2V8.5C22 8.03558 22 7.80337 21.9743 7.60842C21.7971 6.26222 20.7378 5.2029 19.3916 5.02567C19.1966 5 18.9644 5 18.5 5M10 19L13 22M10 19L13 16\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgRepeater;\n","import * as React from \"react\";\nconst SvgRichTextEditor = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M13.174 3.5968C13.8663 3.2047 14.6861 3.10369 15.4529 3.31598C15.7929 3.41011 16.0834 3.57409 16.3572 3.7593C16.6173 3.9352 16.9156 4.16808 17.2614 4.43799L17.3118 4.47737C17.6576 4.74728 17.956 4.98016 18.1898 5.18977C18.4359 5.41046 18.6655 5.65248 18.8394 5.95945C19.2315 6.65177 19.3325 7.47151 19.1202 8.23831C19.0261 8.5783 18.8621 8.86883 18.6769 9.14267C18.501 9.40276 18.2681 9.70112 17.9981 10.0469L10.8954 19.1462C10.8774 19.1692 10.8597 19.1919 10.8422 19.2144C10.5088 19.6419 10.2567 19.9651 9.94462 20.2306C9.68048 20.4553 9.38823 20.6447 9.07524 20.794C8.70547 20.9704 8.30745 21.0685 7.78096 21.1983C7.75336 21.2051 7.7254 21.212 7.69708 21.219L5.57226 21.7435C5.42511 21.7799 5.25714 21.8215 5.10897 21.8442C4.94379 21.8696 4.68801 21.8926 4.40551 21.8022C4.06591 21.6934 3.77615 21.4672 3.58821 21.1642C3.43187 20.9121 3.39209 20.6584 3.37662 20.492C3.36274 20.3427 3.36225 20.1697 3.36182 20.0181C3.36179 20.0087 3.36177 19.9994 3.36174 19.9902L3.35487 17.8295C3.35477 17.8003 3.35467 17.7715 3.35457 17.7431C3.35262 17.2009 3.35115 16.7909 3.43252 16.3894C3.5014 16.0495 3.61418 15.72 3.76803 15.4093C3.94979 15.0421 4.20216 14.7191 4.53598 14.2918C4.55348 14.2694 4.57121 14.2467 4.58917 14.2237L11.6919 5.12435C11.9618 4.77856 12.1947 4.48019 12.4043 4.2464C12.625 4.00025 12.867 3.77065 13.174 3.5968ZM14.9192 5.24347C14.6636 5.17271 14.3904 5.20638 14.1596 5.33708C14.1204 5.35928 14.046 5.41135 13.8935 5.5815C13.7349 5.75836 13.5439 6.00211 13.2488 6.38018L16.4019 8.84145C16.6971 8.46338 16.8871 8.21896 17.0202 8.02221C17.1483 7.83291 17.1807 7.74808 17.1927 7.70467C17.2635 7.44907 17.2298 7.17583 17.0991 6.94505C17.0769 6.90586 17.0248 6.83145 16.8547 6.6789C16.6778 6.52033 16.4341 6.32938 16.056 6.03426C15.6779 5.73914 15.4335 5.54904 15.2368 5.41597C15.0475 5.28794 14.9626 5.25549 14.9192 5.24347ZM15.1713 10.418L12.0182 7.95674L6.16573 15.4543C5.75597 15.9792 5.64042 16.135 5.56043 16.2966C5.48351 16.452 5.42711 16.6167 5.39268 16.7866C5.35687 16.9633 5.35274 17.1572 5.35486 17.8231L5.36094 19.7357L7.21772 19.2773C7.86423 19.1177 8.05131 19.0666 8.21403 18.9889C8.37053 18.9143 8.51665 18.8196 8.64873 18.7072C8.78605 18.5904 8.90909 18.4405 9.31884 17.9156L15.1713 10.418ZM12.0001 21C12.0001 20.4477 12.4478 20 13.0001 20H20.0001C20.5524 20 21.0001 20.4477 21.0001 21C21.0001 21.5523 20.5524 22 20.0001 22H13.0001C12.4478 22 12.0001 21.5523 12.0001 21Z\", fill: \"#9CA3AF\" }));\nexport default SvgRichTextEditor;\n","import * as React from \"react\";\nconst SvgSearch = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M15 15L21 21M10 17C6.13401 17 3 13.866 3 10C3 6.13401 6.13401 3 10 3C13.866 3 17 6.13401 17 10C17 13.866 13.866 17 10 17Z\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgSearch;\n","import * as React from \"react\";\nconst SvgSidebar = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M9 20H16.8031C17.921 20 18.48 20 18.9074 19.7822C19.2837 19.5905 19.5905 19.2837 19.7822 18.9074C20 18.48 20 17.921 20 16.8031V7.19691C20 6.07899 20 5.5192 19.7822 5.0918C19.5905 4.71547 19.2837 4.40973 18.9074 4.21799C18.4796 4 17.9203 4 16.8002 4H9M9 20H7.19692C6.07901 20 5.5192 20 5.0918 19.7822C4.71547 19.5905 4.40973 19.2837 4.21799 18.9074C4 18.4796 4 17.9203 4 16.8002V7.2002C4 6.08009 4 5.51962 4.21799 5.0918C4.40973 4.71547 4.71547 4.40973 5.0918 4.21799C5.51962 4 6.08009 4 7.2002 4H9M9 20V12V4\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgSidebar;\n","import * as React from \"react\";\nconst SvgSignature = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M15.8521 7.66675L9.85205 13.6667V16.6667H12.8521L18.8521 10.6667M15.8521 7.66675L18.8521 4.66675L21.8521 7.66675L18.8521 10.6667M15.8521 7.66675L18.8521 10.6667\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { fillRule: \"evenodd\", clipRule: \"evenodd\", d: \"M2.67722 6.89865C2.35162 7.35087 2.48468 7.97869 2.9697 8.30386C3.45697 8.62974 4.11274 8.52532 4.43767 8.0752C5.38188 6.75914 6.61983 6.06864 7.59305 6.01863C7.85295 6.00619 8.07471 6.04414 8.23844 6.13312C8.36235 6.20022 8.45908 6.31423 8.51586 6.46881C8.76161 7.13702 5.5537 8.88668 4.43767 10.6667C3.77599 11.7206 5.93213 12.2621 5.22876 13.2379L5.19423 13.2859C4.49122 14.2627 3.87774 15.1151 3.53501 15.7374C2.89406 16.9043 2.33204 18.094 2.06745 19.1141C1.8793 19.837 2.06745 20.5214 2.85194 20.6667C3.35194 20.6667 4.85194 20.1667 4.85194 20.1667L7.35194 19.6667C8.35194 19.6667 8.21488 18.8662 8.85194 18.6667C9.59755 18.4332 8.9829 18.2594 8.85194 18.1667C8.85194 17.932 8.47513 17.8153 8.09816 17.6986C7.6887 17.5718 7.27906 17.4449 7.35194 17.1667C7.45887 16.7548 6.87818 16.8792 6.31369 17.0001C5.70887 17.1297 5.12265 17.2553 5.42075 16.713C5.70712 16.1904 7.16685 14.116 7.85194 13.1667C8.56803 12.1741 6.28762 11.7864 6.98988 10.6667C9.24877 8.89265 10.9429 7.04905 10.5067 5.8644C10.2625 5.199 9.82211 4.70977 9.25038 4.39413C8.71847 4.10038 8.08513 3.97119 7.40488 4.00536C5.86786 4.08711 3.99407 5.05965 2.67722 6.89865Z\", fill: \"#9CA3AF\" }));\nexport default SvgSignature;\n","import * as React from \"react\";\nconst SvgStaticContent = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M20.3873 7.1575L11.9999 12L3.60913 7.14978\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M12 12V21\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M11.0001 2.57735C11.6189 2.22008 12.3813 2.22008 13.0001 2.57735L19.6604 6.42266C20.2792 6.77993 20.6604 7.44018 20.6604 8.15471V15.8453C20.6604 16.5598 20.2792 17.2201 19.6604 17.5774L13.0001 21.4226C12.3813 21.7799 11.6189 21.7799 11.0001 21.4226L4.33984 17.5774C3.72103 17.2201 3.33984 16.5598 3.33984 15.8453V8.15471C3.33984 7.44018 3.72103 6.77993 4.33984 6.42266L11.0001 2.57735Z\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgStaticContent;\n","import * as React from \"react\";\nconst SvgTab = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M4 11C4 10.4477 4.44772 10 5 10H9C9.55228 10 10 10.4477 10 11V13C10 13.5523 9.55228 14 9 14H5C4.44772 14 4 13.5523 4 13V11Z\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M13 11C13 10.4477 13.4477 10 14 10H19C19.5523 10 20 10.4477 20 11V13C20 13.5523 19.5523 14 19 14H14C13.4477 14 13 13.5523 13 13V11Z\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\" }));\nexport default SvgTab;\n","import * as React from \"react\";\nconst SvgTextArea = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M3 17H10M15 16H18M18 16H21M18 16V19M18 16V13M3 12H14M3 7H14\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgTextArea;\n","import * as React from \"react\";\nconst SvgTimePicker = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M15.5392 1.58537C15.7098 1.64553 15.8497 1.77049 15.9288 1.93317C16.0079 2.09584 16.0197 2.28313 15.9616 2.45443C15.9036 2.62574 15.7803 2.76726 15.6186 2.84832C15.4569 2.92938 15.2698 2.94346 15.0978 2.88749C12.9847 2.16922 10.6876 2.20764 8.59963 2.99618C6.51169 3.78473 4.76269 5.27438 3.65191 7.21023C2.54114 9.14607 2.13765 11.4078 2.51049 13.6083C2.88332 15.8088 4.00931 17.8114 5.69577 19.2733C7.38222 20.7352 9.52431 21.5656 11.7555 21.6223C13.9866 21.6791 16.1682 20.9587 17.9268 19.5844C19.6854 18.2101 20.9117 16.2674 21.3959 14.0887C21.8802 11.91 21.5922 9.63068 20.5813 7.64087C20.4989 7.47845 20.4843 7.28996 20.5407 7.1168C20.5971 6.94363 20.72 6.79993 20.8823 6.71724C21.0445 6.63455 21.233 6.61964 21.4063 6.67577C21.5795 6.7319 21.7234 6.85448 21.8064 7.01662C22.962 9.29064 23.2914 11.8956 22.7382 14.3857C22.185 16.8757 20.7836 19.0962 18.7738 20.6669C16.764 22.2377 14.2708 23.0612 11.7208 22.9965C9.17084 22.9317 6.72263 21.9828 4.79515 20.312C2.86767 18.6413 1.58075 16.3526 1.15461 13.8377C0.72847 11.3227 1.18961 8.73785 2.45912 6.52541C3.72862 4.31296 5.72757 2.61049 8.11387 1.70933C10.5002 0.808169 13.1255 0.764351 15.5405 1.58537H15.5392Z\", fill: \"#9CA3AF\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M11.75 13C11.5511 13 11.3603 12.921 11.2197 12.7803C11.079 12.6397 11 12.4489 11 12.25V6.24997C11 6.05105 11.079 5.86029 11.2197 5.71964C11.3603 5.57898 11.5511 5.49997 11.75 5.49997C11.9489 5.49997 12.1397 5.57898 12.2803 5.71964C12.421 5.86029 12.5 6.05105 12.5 6.24997V11.5H17.75C17.9489 11.5 18.1397 11.579 18.2803 11.7197C18.421 11.8603 18.5 12.0511 18.5 12.25C18.5 12.4489 18.421 12.6397 18.2803 12.7803C18.1397 12.921 17.9489 13 17.75 13H11.75Z\", fill: \"#9CA3AF\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M15.5392 1.58537C15.7098 1.64553 15.8497 1.77049 15.9288 1.93317C16.0079 2.09584 16.0197 2.28313 15.9616 2.45443C15.9036 2.62574 15.7803 2.76726 15.6186 2.84832C15.4569 2.92938 15.2698 2.94346 15.0978 2.88749C12.9847 2.16922 10.6876 2.20764 8.59963 2.99618C6.51169 3.78473 4.76269 5.27438 3.65191 7.21023C2.54114 9.14607 2.13765 11.4078 2.51049 13.6083C2.88332 15.8088 4.00931 17.8114 5.69577 19.2733C7.38222 20.7352 9.52431 21.5656 11.7555 21.6223C13.9866 21.6791 16.1682 20.9587 17.9268 19.5844C19.6854 18.2101 20.9117 16.2674 21.3959 14.0887C21.8802 11.91 21.5922 9.63068 20.5813 7.64087C20.4989 7.47845 20.4843 7.28996 20.5407 7.1168C20.5971 6.94363 20.72 6.79993 20.8823 6.71724C21.0445 6.63455 21.233 6.61964 21.4063 6.67577C21.5795 6.7319 21.7234 6.85448 21.8064 7.01662C22.962 9.29064 23.2914 11.8956 22.7382 14.3857C22.185 16.8757 20.7836 19.0962 18.7738 20.6669C16.764 22.2377 14.2708 23.0612 11.7208 22.9965C9.17084 22.9317 6.72263 21.9828 4.79515 20.312C2.86767 18.6413 1.58075 16.3526 1.15461 13.8377C0.72847 11.3227 1.18961 8.73785 2.45912 6.52541C3.72862 4.31296 5.72757 2.61049 8.11387 1.70933C10.5002 0.808169 13.1255 0.764351 15.5405 1.58537H15.5392Z\", stroke: \"#9CA3AF\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M11.75 13C11.5511 13 11.3603 12.921 11.2197 12.7803C11.079 12.6397 11 12.4489 11 12.25V6.24997C11 6.05105 11.079 5.86029 11.2197 5.71964C11.3603 5.57898 11.5511 5.49997 11.75 5.49997C11.9489 5.49997 12.1397 5.57898 12.2803 5.71964C12.421 5.86029 12.5 6.05105 12.5 6.24997V11.5H17.75C17.9489 11.5 18.1397 11.579 18.2803 11.7197C18.421 11.8603 18.5 12.0511 18.5 12.25C18.5 12.4489 18.421 12.6397 18.2803 12.7803C18.1397 12.921 17.9489 13 17.75 13H11.75Z\", stroke: \"#9CA3AF\" }));\nexport default SvgTimePicker;\n","import * as React from \"react\";\nconst SvgToggle = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M15.6667 7.33333C18.367 7.33333 20.5556 9.4224 20.5556 12C20.5556 14.5776 18.367 16.6667 15.6667 16.6667H8.33333C5.63299 16.6667 3.44444 14.5776 3.44444 12C3.44444 9.4224 5.63299 7.33333 8.33333 7.33333H15.6667ZM23 12C23 8.13542 19.7153 5 15.6667 5H8.33333C4.28472 5 1 8.13542 1 12C1 15.8646 4.28472 19 8.33333 19H15.6667C19.7153 19 23 15.8646 23 12ZM8.33333 15.5C9.30579 15.5 10.2384 15.1313 10.9261 14.4749C11.6137 13.8185 12 12.9283 12 12C12 11.0717 11.6137 10.1815 10.9261 9.52513C10.2384 8.86875 9.30579 8.5 8.33333 8.5C7.36087 8.5 6.42824 8.86875 5.74061 9.52513C5.05298 10.1815 4.66667 11.0717 4.66667 12C4.66667 12.9283 5.05298 13.8185 5.74061 14.4749C6.42824 15.1313 7.36087 15.5 8.33333 15.5Z\", fill: \"#9CA3AF\" }));\nexport default SvgToggle;\n","import * as React from \"react\";\nconst SvgTooltip = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M9.14648 9.07361C9.31728 8.54732 9.63015 8.07896 10.0508 7.71948C10.4714 7.36001 10.9838 7.12378 11.5303 7.03708C12.0768 6.95038 12.6362 7.0164 13.1475 7.22803C13.6587 7.43966 14.1014 7.78875 14.4268 8.23633C14.7521 8.68391 14.9469 9.21256 14.9904 9.76416C15.0339 10.3158 14.9238 10.8688 14.6727 11.3618C14.4215 11.8548 14.0394 12.2685 13.5676 12.5576C13.0958 12.8467 12.5533 12.9998 12 12.9998V14.0002M12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12C21 16.9706 16.9706 21 12 21ZM12.0498 17V17.1L11.9502 17.1002V17H12.0498Z\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgTooltip;\n","import * as React from \"react\";\nconst SvgTreePicker = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M12 6L8 10L4 6\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M20 14L16 18L12 14\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgTreePicker;\n","import * as React from \"react\";\nconst SvgUploader = (props) => /* @__PURE__ */ React.createElement(\"svg\", { width: 24, height: 24, viewBox: \"0 0 24 24\", fill: \"none\", xmlns: \"http://www.w3.org/2000/svg\", ...props }, /* @__PURE__ */ React.createElement(\"path\", { d: \"M12 8V16\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M15 11L12.087 8.08704C12.039 8.03897 11.961 8.03897 11.913 8.08704L9 11\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }), /* @__PURE__ */ React.createElement(\"path\", { d: \"M3 15V16V19C3 20.1046 3.89543 21 5 21H19C20.1046 21 21 20.1046 21 19V16V15\", stroke: \"#9CA3AF\", strokeWidth: 2, strokeLinecap: \"round\", strokeLinejoin: \"round\" }));\nexport default SvgUploader;\n","import Breadcrumb from './Breadcrumb.svg'\nimport Button from './Button.svg'\nimport Card from './Card.svg'\nimport Checkbox from './Checkbox.svg'\nimport CollectionEditor from './CollectionEditor.svg'\nimport Container from './Container.svg'\nimport Content from './Content.svg'\nimport CustomBlock from './CustomBlock.svg'\nimport CustomControl from './CustomControl.svg'\nimport DatePicker from './DatePicker.svg'\nimport Default from './Default.svg'\nimport Dropdown from './Dropdown.svg'\nimport Dropzone from './Dropzone.svg'\nimport ErrorMessage from './ErrorMessage.svg'\nimport Footer from './Footer.svg'\nimport Grid from './Grid.svg'\nimport GridLayout from './GridLayout.svg'\nimport GridView from './GridView.svg'\nimport Header from './Header.svg'\nimport Image from './Image.svg'\nimport Input from './Input.svg'\nimport Label from './Label.svg'\nimport Link from './Link.svg'\nimport Menu from './Menu.svg'\nimport Message from './Message.svg'\nimport NumberFormat from './NumberFormat.svg'\nimport PatternFormat from './PatternFormat.svg'\nimport ProgressCircle from './ProgressCircle.svg'\nimport ProgressLine from './ProgressLine.svg'\nimport RadioGroup from './RadioGroup.svg'\nimport Repeater from './Repeater.svg'\nimport RichTextEditor from './RichTextEditor.svg'\nimport Search from './Search.svg'\nimport Sidebar from './Sidebar.svg'\nimport Signature from './Signature.svg'\nimport StaticContent from './StaticContent.svg'\nimport Tab from './Tab.svg'\nimport TextArea from './TextArea.svg'\nimport TimePicker from './TimePicker.svg'\nimport Toggle from './Toggle.svg'\nimport Tooltip from './Tooltip.svg'\nimport TreePicker from './TreePicker.svg'\nimport Uploader from './Uploader.svg'\n\nexport const icons = {\n  Breadcrumb,\n  Button,\n  Card,\n  Checkbox,\n  CollectionEditor,\n  Container,\n  Content,\n  CustomBlock,\n  CustomControl,\n  DatePicker,\n  Default,\n  Dropdown,\n  Dropzone,\n  ErrorMessage,\n  Grid,\n  GridLayout,\n  GridView,\n  Image,\n  Input,\n  Label,\n  Link,\n  Footer,\n  Header,\n  Sidebar,\n  Menu,\n  Message,\n  NumberFormat,\n  PatternFormat,\n  ProgressCircle,\n  ProgressLine,\n  RadioGroup,\n  Repeater,\n  RichTextEditor,\n  Search,\n  Signature,\n  StaticContent,\n  Tab,\n  TextArea,\n  TimePicker,\n  Toggle,\n  Tooltip,\n  TreePicker,\n  Uploader\n}\n","import styled from '@emotion/styled'\nimport {namedObserver, useComponentData} from '@react-form-builder/core'\nimport {camelCase, replace, upperFirst} from 'lodash-es'\nimport type {MouseEventHandler, ReactNode, RefCallback} from 'react'\nimport {useCallback} from 'react'\nimport {icons} from '../../../icons'\nimport {useBuilderStore} from '../../../utils/BuilderStoreContext'\nimport type {DraggableProps} from '../../ui/ComponentBar'\nimport {ItemType} from '../consts'\nimport {DragPreview} from './Editable/components/DragPreview'\nimport {useDragWithPreview} from './Editable/hooks/useDragWithPreview'\n\nconst RawAddedComponent = ({draggable = true, onAdd, onDoubleClick}: DraggableProps) => {\n  const data = useComponentData()\n  const {name = ''} = data.model\n  const builderStore = useBuilderStore()\n  const {icon: CustomIcon} = builderStore.getComponentMetadata(data.model.type)\n  const iconName = replace(upperFirst(camelCase(name)), ' ', '') as keyof typeof icons\n  const Icon = CustomIcon ?? icons[iconName] ?? icons.Default\n  const onClick: MouseEventHandler = e => {\n    e.stopPropagation()\n    onAdd?.(data)\n  }\n\n  const handleDoubleClick: MouseEventHandler = useCallback(e => {\n    e.stopPropagation()\n    onDoubleClick?.(data)\n  }, [onDoubleClick, data])\n\n  const element = (\n    <Container onClick={onClick} onDoubleClick={handleDoubleClick}>\n      <Icon width={18} height={18} viewBox=\"0 0 24 24\"/>\n      <label>{name}</label>\n    </Container>\n  )\n\n  return draggable\n    ? <Draggable>{element}</Draggable>\n    : element\n}\n\nexport const AddedComponent = namedObserver('AddedComponent', RawAddedComponent)\n\nconst Draggable = ({children}: { children: ReactNode }) => {\n  const [{isDragging}, drag] = useDragWithPreview(ItemType.AddedComponent)\n\n  return <>\n    {/* TODO FE-1065 */}\n    <DraggableContainer ref={drag as unknown as RefCallback<HTMLDivElement>}>{children}</DraggableContainer>\n    {isDragging && <DragPreview>{children}</DragPreview>}\n  </>\n}\n\nconst Container = styled.div`\n  display: flex;\n  padding: 7px;\n  gap: 6px;\n  min-width: 150px;\n  flex: 1;\n  max-width: 125px;\n  border-radius: 6px;\n  background-color: var(--rs-btn-default-bg);\n  font-size: 13px;\n\n  &:hover {\n    box-shadow: var(--rs-state-focus-shadow);\n  }\n\n  &:active, &:focus {\n    outline: 2px solid var(--rs-btn-primary-bg);\n  }\n\n  .rs-theme-dark & label {\n    opacity: 0.6;\n  }\n`\n\nconst DraggableContainer = styled.div`\n  cursor: grab;\n  flex: 1;\n\n  & > div {\n    height: 100%;\n    min-width: 123px;\n    max-width: initial;\n  }\n`\n","import {useEffect, useState} from 'react'\nimport {Message, useToaster} from 'rsuite'\nimport type {TypeAttributes} from 'rsuite/esm/internals/types'\nimport type {PlacementType} from 'rsuite/esm/toaster/ToastContainer'\n\n/**\n * Toast React component settings.\n */\nexport interface ToastSettings {\n  /**\n   * The message.\n   */\n  message: string\n  /**\n   * The title.\n   */\n  title?: string\n  /**\n   * The type of message.\n   */\n  type?: TypeAttributes.Status\n  /**\n   * The placement.\n   */\n  placement?: PlacementType\n}\n\n/**\n * Creates the function for changing {@link ToastSettings} settings.\n * @returns the function for setting the {@link ToastSettings} settings.\n */\nexport const useShowMessage = () => {\n  const [settings, setSettings] = useState<ToastSettings>()\n  const toaster = useToaster()\n\n  useEffect(() => {\n    if (!settings) return\n    const placement = settings.placement || 'bottomEnd'\n    const type = settings.type || 'info'\n    toaster.push(<Message type={type} title={settings.title}>{settings.message}</Message>, {\n      placement: placement\n    })\n    setSettings(undefined)\n  }, [settings, toaster])\n  return setSettings\n}\n","import {useCallback} from 'react'\nimport {useTranslation} from 'react-i18next'\nimport {useShowMessage} from '../features/toast/toast'\nimport {useBuilderStore} from './BuilderStoreContext'\n\n/**\n * Used for open create form dialog.\n * @param onSuccess the callback function that is called when a form is successfully created.\n * @returns the function for open create form dialog\n */\nexport function useCreateForm(onSuccess?: () => void) {\n  const builderStore = useBuilderStore()\n  const {t} = useTranslation()\n  const showMessage = useShowMessage()\n\n  const onError = useCallback((err: any) => {\n    console.error(err)\n    showMessage({type: 'error', message: err})\n  }, [showMessage])\n\n  const loadForm = useCallback((name: string) => {\n    builderStore.loadForm(name, onSuccess, onError)\n  }, [builderStore, onError, onSuccess])\n\n  const handleAddForm = useCallback((name: string) => {\n    if (name) {\n      builderStore.createForm(name)\n        .then(onSuccess)\n        .then(() => loadForm(name))\n    }\n  }, [builderStore, loadForm, onSuccess])\n\n  const validate = useCallback(async (value: string) => {\n    const formKeys = await builderStore.getFormKeys()\n    if (formKeys.includes(value)) return t('formsList.formWithNameExists')\n  }, [builderStore, t])\n\n  return useCallback(() => {\n    builderStore.showPromptModal({\n      value: '',\n      onOk: handleAddForm,\n      title: t('leftMenu.enterFormName'),\n      placeholder: t('leftMenu.formNamePlaceholder'),\n      validate\n    })\n  }, [builderStore, handleAddForm, t, validate])\n}\n","import styled from '@emotion/styled'\nimport {namedObserver, useStore} from '@react-form-builder/core'\nimport type {PropsWithChildren} from 'react'\nimport {Button, Message} from 'rsuite'\nimport {useCreateForm} from '../../utils/useCreateForm'\nimport {useTranslationPart} from '../localization/hooks'\n\nexport const ErrorFormWrapper = namedObserver('ErrorFormPlaceholder', function ({children}: PropsWithChildren<any>) {\n  const {formLoadError} = useStore()\n  const t = useTranslationPart('formsList')\n  const createForm = useCreateForm()\n\n  const withWrapper = <Container>\n    <SMessage type={'info'} showIcon>\n      {children}\n    </SMessage>\n    <Button onClick={createForm} block appearance={'primary'}>{t('addNewForm')}</Button>\n  </Container>\n\n  return formLoadError ? withWrapper : children\n})\n\nconst SMessage = styled(Message)`\n  font-size: 16px;\n  font-weight: bolder;\n`\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin-top: 15px;\n`\n","import type {Language} from '@react-form-builder/core'\nimport {useStore} from '@react-form-builder/core'\nimport type {ComponentProps} from 'react'\nimport {useCallback} from 'react'\nimport {useBuilderStore} from '../../../../utils/BuilderStoreContext'\nimport {customizableObserver} from '../../../customization'\nimport {LocalizationPicker} from '../../../localization/components/LocalizationPicker'\n\ntype DesignerLocalizationPickerProps = Omit<ComponentProps<typeof LocalizationPicker>, 'value' | 'onSelect'>\n\nconst RawDesignerLocalizationPicker = (props: DesignerLocalizationPickerProps) => {\n  const builderStore = useBuilderStore()\n  const viewerStore = useStore()\n  const handleSelect = useCallback((language: Language) => {\n    viewerStore.selectedLanguage = language\n    builderStore.localizationLanguage = language\n  }, [builderStore, viewerStore])\n\n  return <LocalizationPicker {...props} value={builderStore.localizationLanguage.fullCode} onSelect={handleSelect}/>\n}\n\nexport const DesignerLocalizationPicker = customizableObserver('LocalizationSelect', RawDesignerLocalizationPicker)\n","import type {ComponentData} from '@react-form-builder/core'\nimport {namedObserver} from '@react-form-builder/core'\nimport {useCallback, useEffect} from 'react'\nimport {Table} from 'rsuite'\nimport {Cell, Column, HeaderCell} from 'rsuite-table'\nimport {useBuilderStore} from '../../../../utils/BuilderStoreContext'\nimport {useComputed} from '../../../../utils/useComputed'\n\ntype PropertyErrorColumn = {\n  component: ComponentData\n  property: string\n  message: string\n}\n\n/**\n * PropertyErrors React component properties.\n */\nexport interface PropertyErrorsProps {\n  /**\n   * The callback function called when an error window is closed.\n   */\n  onClose: () => void\n}\n\nconst RawPropertyErrors = ({onClose}: PropertyErrorsProps) => {\n  const store = useBuilderStore()\n\n  const getData = useCallback(() => {\n    const data: PropertyErrorColumn[] = []\n    store.errorMap.forEach((value, component) => {\n      Object.entries(value).forEach(([property, message]) => {\n        if (message) data.push({component, property, message})\n      })\n    })\n    return data\n  }, [store.errorMap])\n\n  const data = useComputed(getData)\n\n  useEffect(() => {\n    store.validate().catch(console.error)\n  }, [store])\n\n  const handleLinkClick = (component: ComponentData) => {\n    onClose()\n    store.selectNode(component)\n  }\n\n  return (\n    <Table height={400} data={data}>\n      <Column width={220} align=\"center\" fixed>\n        <HeaderCell>Component</HeaderCell>\n        <Cell>\n          {(rowData: PropertyErrorColumn) => {\n            return <a onClick={() => handleLinkClick(rowData.component)}>{rowData.component.key}</a>\n          }}\n        </Cell>\n      </Column>\n\n      <Column width={150}>\n        <HeaderCell>Property</HeaderCell>\n        <Cell dataKey=\"property\"/>\n      </Column>\n\n      <Column width={450}>\n        <HeaderCell>Error message</HeaderCell>\n        <Cell dataKey=\"message\"/>\n      </Column>\n    </Table>\n  )\n}\n\nexport const PropertyErrors = namedObserver('PropertyErrors', RawPropertyErrors)\n","import styled from '@emotion/styled'\nimport {namedObserver} from '@react-form-builder/core'\nimport {Danger} from '@rsuite/icons'\nimport {useReducer} from 'react'\nimport {useTranslation} from 'react-i18next'\nimport {Col, IconButton, Modal, Row, Tooltip, Whisper} from 'rsuite'\nimport {PropertyErrors} from './PropertyErrors'\n\nconst RawErrorsPanel = () => {\n  const {t} = useTranslation()\n  const [show, toggleShow] = useReducer(state => !state, false)\n\n  return <>\n    <Whisper speaker={<Tooltip>{t('validation.showFormErrors')}</Tooltip>} placement={'bottom'}>\n      <SIconButton onClick={toggleShow} icon={<Danger/>} circle/>\n    </Whisper>\n    <Modal open={show} size={'full'} backdrop={true}>\n      <Modal.Header closeButton onClose={toggleShow}>\n        <Modal.Title>{t('validation.formErrors')}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Row style={{marginRight: 0}}>\n          <Col md={14}>\n            <PropertyErrors onClose={toggleShow}/>\n          </Col>\n        </Row>\n      </Modal.Body>\n    </Modal>\n  </>\n}\n\nexport const ErrorsPanel = namedObserver('ErrorsPanel', RawErrorsPanel)\n\nconst SIconButton = styled(IconButton)`\n  padding: 5px !important;\n`\n","import {useCallback} from 'react'\nimport {useTranslation} from 'react-i18next'\nimport {useBuilderStore} from '../../../utils/BuilderStoreContext'\n\n/**\n * Shows save form prompt with editable name.\n * @param name the form name.\n * @param onOk the save handler.\n * @returns the show function.\n */\nexport const useSaveFormDialog = (name: string, onOk: (name: string) => void): () => void => {\n  const builderStore = useBuilderStore()\n  const {t} = useTranslation()\n\n  return useCallback(() => {\n    builderStore.showPromptModal({\n      value: name,\n      onOk,\n      title: t('leftMenu.enterFormName'),\n      placeholder: t('leftMenu.formNamePlaceholder')\n    })\n  }, [builderStore, onOk, t, name])\n}\n","import {saveAs} from 'file-saver'\nimport JSZip from 'jszip'\nimport type {BuilderStore} from '../../../../stores/BuilderStore'\n\nconst formExtension = '.json'\n\n/**\n * Exports all forms to a ZIP archive.\n * @param store FormBuilder store.\n * @param archiveName the name of the ZIP archive.\n * @returns the {@link Promise} with the result of the forms export.\n * @internal\n */\nexport async function exportForms(store: BuilderStore, archiveName: string) {\n  const formKeys = await store.getFormKeys()\n\n  const zip = new JSZip()\n  for (const formName of formKeys) {\n    const formValue = await store.getStoredFormJson(formName)\n    zip.file(`${formName}${formExtension}`, formValue)\n  }\n\n  const blob = await zip.generateAsync({type: 'blob'})\n  saveAs(blob, archiveName)\n}\n\n/**\n * Import forms from a ZIP archive.\n * @param store FormBuilder store.\n * @param content a ZIP archive content.\n * @returns the {@link Promise} with the result of the forms import.\n * @internal\n */\nexport async function importForms(store: BuilderStore, content: ArrayBuffer) {\n  const jsZip = await JSZip.loadAsync(content)\n  const jsZipObjects = jsZip.filter(path => path.endsWith(formExtension))\n  const forms = []\n  for (const jsZipObject of jsZipObjects) {\n    const formName = jsZipObject.name.slice(0, -formExtension.length)\n    const formValue = await jsZipObject.async('string')\n    forms.push([formName, formValue])\n  }\n  for (const pair of forms) {\n    await store.saveForm(pair[0], pair[1])\n  }\n}\n","import {useTranslation} from 'react-i18next'\nimport {useBuilderStore} from '../../../../utils/BuilderStoreContext'\nimport {useShowMessage} from '../../../toast/toast'\n\n/**\n * @returns the function to save the form.\n */\nexport const useSaveForm = () => {\n  const builderStore = useBuilderStore()\n  const {t} = useTranslation()\n  const showMessage = useShowMessage()\n  return (formName?: string) => {\n    builderStore.save(formName)\n      .then(() => showMessage({type: 'success', message: t('leftMenu.formSaved')}))\n      .catch(err => {\n        console.error(err)\n        showMessage({type: 'error', message: t('leftMenu.formSaveError')})\n      })\n  }\n}\n","import type {IconDefinition} from '@fortawesome/fontawesome-common-types'\nimport {faBars} from '@fortawesome/free-solid-svg-icons'\nimport * as faSave from '@fortawesome/free-solid-svg-icons/faSave.js'\nimport * as faTrash from '@fortawesome/free-solid-svg-icons/faTrash.js'\nimport {namedObserver} from '@react-form-builder/core'\nimport {Export as ExportIcon, FileDownload as FileDownloadIcon, FileUpload as FileUploadIcon, Import as ImportIcon} from '@rsuite/icons'\nimport type {HTMLAttributes, Ref} from 'react'\nimport {useCallback} from 'react'\nimport {useTranslation} from 'react-i18next'\nimport {Dropdown, IconButton} from 'rsuite'\nimport type {WithAsProps} from 'rsuite/esm/internals/types'\nimport {uploadBinaryFile} from '../../../../stores/fileUpload'\nimport {useBuilderStore} from '../../../../utils/BuilderStoreContext'\nimport {FaIcon} from '../../../components/Icons'\nimport {customizable} from '../../../customization'\nimport {MenuLanguageSwitch} from '../../../localization'\nimport {useShowMessage} from '../../../toast/toast'\nimport {useSaveFormDialog} from '../../dialogs/useSaveFormDialog'\nimport {exportForms, importForms} from './formUtils'\nimport {useSaveForm} from './useSaveForm'\n\nconst RawExportFormsButton = () => {\n  const store = useBuilderStore()\n  const {t} = useTranslation()\n  const showMessage = useShowMessage()\n\n  const onExport = () => {\n    exportForms(store, 'forms.zip')\n      .then(() => showMessage({type: 'success', message: t('leftMenu.exportFormsSuccess')}))\n      .catch(err => {\n        console.error(err)\n        showMessage({type: 'error', message: t('leftMenu.exportFormsError')})\n      })\n  }\n\n  return <Dropdown.Item onSelect={onExport} icon={<ExportIcon/>}>\n    {t('leftMenu.exportForms')}\n  </Dropdown.Item>\n}\n\nconst ExportFormsButton = namedObserver('ExportFormsButton', RawExportFormsButton)\n\nconst RawImportFormsButton = () => {\n  const store = useBuilderStore()\n  const {t} = useTranslation()\n  const showMessage = useShowMessage()\n\n  const onImport = () => {\n    uploadBinaryFile(content => {\n        content\n          .then(data => importForms(store, data))\n          .then(() => showMessage({type: 'success', message: t('leftMenu.importFormsSuccess')}))\n          .catch(err => {\n            console.error(err)\n            showMessage({type: 'error', message: t('leftMenu.importFormsError')})\n          })\n      }\n    )\n  }\n\n  return <Dropdown.Item onSelect={onImport} icon={<ImportIcon/>}>\n    {t('leftMenu.importForms')}\n  </Dropdown.Item>\n}\n\nconst ImportFormsButton = namedObserver('ImportFormsButton', RawImportFormsButton)\n\nconst RawWrapper = (props: HTMLAttributes<HTMLDivElement>) => <div {...props}/>\nconst Wrapper = customizable('MainMenu_Button', RawWrapper)\n\nconst renderToggle = (props: WithAsProps, ref: Ref<any>) => (\n  <Wrapper>\n    <IconButton icon={<FaIcon icon={faBars}/>} {...props} ref={ref} size={'sm'}\n                appearance={'primary'}/>\n  </Wrapper>\n)\n\nconst MenuDropdown = customizable('MainMenu_Dropdown', Dropdown)\n\nconst RawMenu = () => {\n  const builderStore = useBuilderStore()\n  const {t} = useTranslation()\n  const onSave = useSaveForm()\n\n  const handleSaveAs = useCallback((value: string) => {\n    if (value) onSave(value)\n  }, [onSave])\n\n  const onSaveAs = useSaveFormDialog('', handleSaveAs)\n\n  return <>\n    <MenuDropdown title={t('leftMenu.menu')} size={'sm'} renderToggle={renderToggle} menuStyle={{width: 'fit-content'}}>\n      <Dropdown.Item onSelect={builderStore.download.bind(builderStore)} icon={<FileDownloadIcon/>}>\n        {t('leftMenu.download')}\n      </Dropdown.Item>\n      <Dropdown.Item onSelect={builderStore.upload.bind(builderStore)} icon={<FileUploadIcon/>}>\n        {t('leftMenu.upload')}\n      </Dropdown.Item>\n      <MenuLanguageSwitch/>\n      {builderStore.formStorageEnabled && <>\n        <Dropdown.Item onSelect={onSave} icon={<FaIcon icon={faSave as unknown as IconDefinition}/>}>\n          {t('leftMenu.save')}\n        </Dropdown.Item>\n        <Dropdown.Item onSelect={onSaveAs} icon={<FaIcon icon={faSave as unknown as IconDefinition}/>}>\n          {t('leftMenu.saveAs')}\n        </Dropdown.Item>\n        <ExportFormsButton/>\n        <ImportFormsButton/>\n      </>}\n      <Dropdown.Item onSelect={builderStore.clear.bind(builderStore)} icon={<FaIcon icon={faTrash as unknown as IconDefinition}/>}>\n        {t('leftMenu.clear')}\n      </Dropdown.Item>\n    </MenuDropdown>\n  </>\n}\n\nexport const Menu = namedObserver('Menu', RawMenu)\n","import {cx} from '@emotion/css'\nimport {css} from '@emotion/react'\nimport styled from '@emotion/styled'\nimport * as faPaintBrush from '@fortawesome/free-solid-svg-icons/faPaintBrush.js'\nimport * as faPlay from '@fortawesome/free-solid-svg-icons/faPlay.js'\nimport type {BuilderMode} from '@react-form-builder/core'\nimport {useCallback} from 'react'\nimport {Button} from 'rsuite'\nimport {useBuilderStore} from '../../../../utils/BuilderStoreContext'\nimport {FaIcon} from '../../../components/Icons'\nimport {customizableObserver} from '../../../customization'\nimport {useTranslationPart} from '../../../localization/hooks'\n\nconst Modes: Record<BuilderMode, { icon: any, toggleTo: BuilderMode }> = {\n  viewer: {icon: faPaintBrush, toggleTo: 'builder'},\n  builder: {icon: faPlay, toggleTo: 'viewer'}\n}\n\nconst RawToggleModeButton = ({className}: { className?: string }) => {\n  const store = useBuilderStore()\n  const {icon, toggleTo} = Modes[store.builderMode]\n  const t = useTranslationPart('rightMenu.modes')\n  const onClick = useCallback(() => store.changeBuilderMode(toggleTo), [store, toggleTo])\n\n  return <AnimatedButton\n    onClick={onClick}\n    appearance={'primary'}\n    className={cx(store.builderMode, className)}\n    size={'sm'}\n  >\n    <FaIcon icon={icon} color={'white'}/>\n    {t(store.builderMode)}\n  </AnimatedButton>\n}\n\nexport const ToggleModeButton = customizableObserver('ToggleModeButton', RawToggleModeButton)\n\nconst makeLabeledIconStyles = (gap = 10) => css`\n  && {\n    display: flex;\n    align-items: center;\n    gap: ${gap}px;\n\n    .rs-icon {\n      margin-block-start: 2px;\n    }\n  }\n`\n\nconst SIconButton = styled(Button)`\n  ${makeLabeledIconStyles()}\n`\n\nconst AnimatedButton = styled(SIconButton)`\n  min-width: 98px;\n  display: flex;\n  justify-content: center;\n  background-size: 200% 100%;\n  background-image: linear-gradient(to right, var(--rs-btn-primary-bg) 50%, var(--rs-green-700) 50%);\n  transition: background-position 200ms, box-shadow 600ms !important;\n  box-shadow: 2px 5px 20px -5px var(--rs-btn-primary-bg);\n\n  &.viewer {\n    background-position: 100% 0;\n    box-shadow: 2px 5px 20px -5px var(--rs-green-700);\n  }\n`\n","import styled from '@emotion/styled'\nimport * as faMoon from '@fortawesome/free-solid-svg-icons/faMoon.js'\nimport * as faSun from '@fortawesome/free-solid-svg-icons/faSun.js'\nimport type {ComponentProps} from 'react'\nimport {useMemo} from 'react'\nimport {Tooltip, Whisper} from 'rsuite'\nimport {useBuilderStore} from '../../../../utils/BuilderStoreContext'\nimport type {BuilderTheme} from '../../../../utils/types'\nimport {FaIcon} from '../../../components/Icons'\nimport {customizableObserver} from '../../../customization'\nimport {useTranslationPart} from '../../../localization/hooks'\n\nconst icons: Record<BuilderTheme, any> = {\n  dark: faMoon,\n  light: faSun\n}\n\ntype ToggleThemeProps = Omit<ComponentProps<typeof Whisper>, 'placement' | 'speaker' | 'children'>\n\nconst RawToggleTheme = (props: ToggleThemeProps) => {\n  const store = useBuilderStore()\n  const t = useTranslationPart('rightMenu')\n  const {theme} = store\n  const icon = useMemo(() => icons[theme], [theme])\n  const isDark = theme === 'dark'\n\n  const iconProps: any = useMemo(() => ({\n    icon,\n    color: isDark ? 'var(--rs-yellow-300)' : 'white',\n    size: 1.4,\n    onClick: () => store.theme = isDark ? 'light' : 'dark',\n    className: store.theme\n  }), [icon, isDark, store])\n  const speaker = <Tooltip>{t('toggleTheme')}</Tooltip>\n\n  return (\n    <Whisper {...props} speaker={speaker} placement=\"bottom\">\n      <div>\n        <IconButton {...iconProps}/>\n      </div>\n    </Whisper>\n  )\n}\n\nexport const ToggleTheme = customizableObserver('ToggleThemeButton', RawToggleTheme)\n\nconst IconButton = styled(FaIcon)`\n  cursor: pointer;\n  width: 24px;\n  height: 24px;\n  padding: 3px;\n  border-radius: 20px;\n  overflow: hidden;\n\n  & path {\n    transform: rotate(360deg);\n    transform-origin: 50% 200%;\n    transition: all 400ms cubic-bezier(1, 0, 0, 1);\n  }\n\n  transition: background-color 400ms linear;\n  background-color: var(--rs-primary-500);\n\n  &.dark {\n    path {\n      transform: rotate(0deg);\n    }\n\n    background-color: var(--rs-toggle-bg);\n  }\n`\n","import {namedObserver} from '@react-form-builder/core'\nimport {useEffect, useRef, useState} from 'react'\nimport {useBuilderStore} from '../../utils/BuilderStoreContext'\nimport {CodeEditor} from '../components/CodeEditor/CodeEditor'\n\nconst RawJsonView = () => {\n  const builderStore = useBuilderStore()\n  const [initialValue] = useState(builderStore.formAsString)\n  const sourceRef = useRef(initialValue)\n  const onSetSource = (value: string) => sourceRef.current = value\n\n  useEffect(() => {\n    return () => builderStore.parseForm(sourceRef.current)\n  }, [builderStore])\n\n  return <CodeEditor language=\"json\" initialValue={initialValue} onChange={onSetSource}/>\n}\n\nexport const JsonView = namedObserver('JsonView', RawJsonView)\n","import * as faCode from '@fortawesome/free-solid-svg-icons/faCode.js'\nimport type {ComponentProps} from 'react'\nimport {useState} from 'react'\nimport {useTranslation} from 'react-i18next'\nimport {IconButton, Modal, Tooltip, Whisper} from 'rsuite'\nimport {FaIcon} from '../../../components/Icons'\nimport {customizableObserver} from '../../../customization'\nimport {JsonView} from '../../JsonView'\n\nconst icon = <FaIcon icon={faCode as any}/>\n\ntype JsonViewButtonProps = Omit<ComponentProps<typeof Whisper>, 'placement' | 'speaker' | 'children'>\n\nconst RawJsonViewButton = (props: JsonViewButtonProps) => {\n  const {t} = useTranslation()\n  const [open, setOpen] = useState(false)\n  const handleOpen = () => setOpen(true)\n  const handleClose = () => setOpen(false)\n  const speaker = <Tooltip>{t('editJson')}</Tooltip>\n\n  return <>\n    <Whisper {...props} speaker={speaker} placement=\"bottom\">\n      <IconButton onClick={handleOpen} icon={icon} size={'sm'}/>\n    </Whisper>\n    <Modal open={open} size={'full'} backdrop={true}>\n      <Modal.Header closeButton onClose={handleClose}>\n        <Modal.Title>{t('editJson')}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body style={{height: '100vh'}}>\n        <JsonView/>\n      </Modal.Body>\n    </Modal>\n  </>\n}\n\nexport const JsonViewButton = customizableObserver('JsonViewButton', RawJsonViewButton)\n","import {forwardRef} from '@react-form-builder/core'\n\nexport const OrientationIcon = forwardRef((props, ref) => (\n  <svg height=\"24px\" width=\"24px\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" {...props} ref={ref as any}>\n    <title/>\n    <desc/>\n    <defs/>\n    <g fill=\"none\" fillRule=\"evenodd\" id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\">\n      <g fill=\"currentColor\" id=\"Icons-Device\" transform=\"translate(-210.000000, -124.000000)\">\n        <g id=\"screen-rotation\" transform=\"translate(210.000000, 124.000000)\">\n          <path\n            d=\"M16.5,2.5 C19.8,4 22.1,7.2 22.5,11 L24,11 C23.4,4.8 18.3,0 12,0 L11.3,0 L15.1,3.8 L16.5,2.5 L16.5,2.5 Z M10.2,1.7 C9.6,1.1 8.7,1.1 8.1,1.7 L1.7,8.1 C1.1,8.7 1.1,9.6 1.7,10.2 L13.7,22.2 C14.3,22.8 15.2,22.8 15.8,22.2 L22.2,15.8 C22.8,15.2 22.8,14.3 22.2,13.7 L10.2,1.7 L10.2,1.7 Z M14.8,21.2 L2.8,9.2 L9.2,2.8 L21.2,14.8 L14.8,21.2 L14.8,21.2 Z M7.5,21.5 C4.2,20 1.9,16.8 1.5,13 L0.1,13 C0.6,19.2 5.7,24 12,24 L12.7,24 L8.9,20.2 L7.5,21.5 L7.5,21.5 Z\"\n            id=\"Shape\"/>\n        </g>\n      </g>\n    </g>\n  </svg>\n))\n","import styled from '@emotion/styled'\nimport * as faDesktop from '@fortawesome/free-solid-svg-icons/faDesktop.js'\nimport * as faMobile from '@fortawesome/free-solid-svg-icons/faMobile.js'\nimport * as faTablet from '@fortawesome/free-solid-svg-icons/faTablet.js'\nimport type {ViewMode} from '@react-form-builder/core'\nimport {Icon} from '@rsuite/icons'\nimport type {ComponentProps} from 'react'\nimport {ButtonGroup, IconButton, Tooltip, Whisper} from 'rsuite'\nimport {useBuilderStore} from '../../../../utils/BuilderStoreContext'\nimport {FaIcon} from '../../../components/Icons'\nimport {customizableObserver} from '../../../customization'\nimport {useTranslationPart} from '../../../localization/hooks'\nimport {JsonViewButton} from './JsonViewButton'\nimport {OrientationIcon} from './OrientationIcon'\n\nconst resolutions: [ViewMode, any][] = [\n  ['desktop', faDesktop],\n  ['mobile', faMobile],\n  ['tablet', faTablet]\n]\n\nconst RawViewModes = (props: ComponentProps<typeof SDiv>) => {\n  const store = useBuilderStore()\n  const t = useTranslationPart('rightMenu.modes')\n  const {viewMode, landscapeMode} = store\n  const getColor = (active?: boolean) => active ? 'var(--rs-navs-selected)' : undefined\n  const toggleOrientation = () => store.landscapeMode = !landscapeMode\n\n  return <SDiv {...props}>\n    {(viewMode === 'mobile' || viewMode === 'tablet') &&\n      <IconButton onClick={toggleOrientation} icon={<Icon as={OrientationIcon} color={getColor(landscapeMode)}/>} size={'sm'}/>\n    }\n    <ButtonGroup size={'sm'}>\n      {resolutions.map(([value, icon], index) => (\n        <Whisper key={index} speaker={<Tooltip>{t(value)}</Tooltip>} placement={'bottom'}>\n          <IconButton onClick={() => store.viewMode = value}\n                      icon={<FaIcon icon={icon} color={getColor(value === viewMode)}/>}/>\n        </Whisper>\n      ))}\n      <JsonViewButton/>\n    </ButtonGroup>\n  </SDiv>\n}\n\nexport const ViewModes = customizableObserver('ResolutionSelect', RawViewModes)\n\nconst SDiv = styled.div`\n  display: flex;\n  align-items: center;\n  width: max-content;\n`\n","import styled from '@emotion/styled'\nimport type {IconDefinition} from '@fortawesome/fontawesome-common-types'\nimport * as faRedo from '@fortawesome/free-solid-svg-icons/faRedo.js'\nimport * as faSave from '@fortawesome/free-solid-svg-icons/faSave.js'\nimport * as faUndo from '@fortawesome/free-solid-svg-icons/faUndo.js'\nimport type {ComponentProps} from 'react'\nimport {ButtonGroup, IconButton} from 'rsuite'\nimport {useBuilderStore} from '../../../utils/BuilderStoreContext'\nimport {FaIcon} from '../../components/Icons'\nimport {customizableObserver} from '../../customization'\nimport {DesignerLocalizationPicker} from './components/DesignerLocalizationPicker'\nimport {ErrorsPanel} from './components/ErrorsPanel'\nimport {Menu} from './components/Menu'\nimport {ToggleModeButton} from './components/ToggleModeButton'\nimport {ToggleTheme} from './components/ToggleTheme'\nimport {useSaveForm} from './components/useSaveForm'\nimport {ViewModes} from './components/ViewModes'\n\nconst Toolbar = customizableObserver('Header_Toolbar', ButtonGroup)\n\nconst RawHeader = (props: ComponentProps<typeof Container>) => {\n  const builderStore = useBuilderStore()\n  const onSave = useSaveForm()\n  const undoer = builderStore.undoer\n  const showErrorsPanel = false\n\n  return (\n    <Container {...props}>\n      <LeftPart>\n        <Menu/>\n        <Toolbar size={'sm'}>\n          {builderStore.formStorageEnabled &&\n            <IconButton onClick={() => onSave()}\n                        icon={<FaIcon icon={faSave as unknown as IconDefinition}/>} size={'sm'}/>\n          }\n          <IconButton onClick={() => undoer.undo()} disabled={!undoer.hasUndo}\n                      icon={<FaIcon icon={faUndo as unknown as IconDefinition}/>} size={'sm'}/>\n          <IconButton onClick={() => undoer.redo()} disabled={!undoer.hasRedo}\n                      icon={<FaIcon icon={faRedo as unknown as IconDefinition}/>} size={'sm'}/>\n\n        </Toolbar>\n      </LeftPart>\n\n      <CenterPart>\n        <ToggleModeButton/>\n      </CenterPart>\n\n      <RightPart>\n        <ViewModes/>\n        <DesignerLocalizationPicker/>\n        {showErrorsPanel && <ErrorsPanel/>}\n        <ToggleTheme/>\n      </RightPart>\n    </Container>\n  )\n}\n\nconst Header = customizableObserver('Header', RawHeader)\n\nconst LeftPart = styled.div``\n\nconst RightPart = styled.div`\n  justify-content: flex-end;\n`\n\nconst CenterPart = styled.div`\n  justify-content: center;\n  flex: 0;\n`\n\nconst Container = styled.div`\n  display: flex;\n  padding: 10px 15px;\n  gap: 10px;\n\n  & > * {\n    flex: 1;\n    display: flex;\n    align-items: center;\n    gap: 10px\n  }\n`\n\nexport {Header}\n","import {cx} from '@emotion/css'\nimport styled from '@emotion/styled'\nimport {namedObserver} from '@react-form-builder/core'\nimport {ArrowDownLine} from '@rsuite/icons'\nimport type {PropsWithChildren} from 'react'\nimport {useBuilderStore} from '../../utils/BuilderStoreContext'\nimport {TooltipPlacementProvider} from '../../utils/TooltipPlacementContext'\nimport type {PanelPlacement} from './PanelPlacement'\n\ninterface CollapsedSizeProps {\n  collapsedSize?: number\n}\n\n/**\n * Properties of the form builder panel.\n */\nexport interface PanelProps extends PropsWithChildren<any>, CollapsedSizeProps {\n  /**\n   * The panel placement.\n   */\n  placement: PanelPlacement\n  /**\n   * Flag, if true the collapsed panel will be hidden, false otherwise.\n   */\n  hideCollapsed?: boolean\n  /**\n   * Callback function called when the panel is collapsed/expanded.\n   */\n  onCollapse?: Function\n}\n\nconst RawPanel = ({\n                  children,\n                  placement = 'left',\n                  hideCollapsed = true,\n                  className,\n                  onCollapse,\n                  ...props\n                }: PanelProps) => {\n  const store = useBuilderStore()\n  const visible = !!store.openedPanels?.includes(placement)\n  const collapsed = !visible\n  const handleCollapse = () => store.setPanelVisible(placement, !visible)\n  const tooltipPlacement = placement === 'right' ? 'autoHorizontal' : 'auto'\n\n  return <PanelContainer className={cx(className, placement, {collapsed})} {...props}>\n    <TooltipPlacementProvider value={tooltipPlacement}>\n      <ContentContainer className={cx({collapsed, hideCollapsed})}>{children}</ContentContainer>\n    </TooltipPlacementProvider>\n    <HideButton className={cx(placement, {collapsed})} onClick={handleCollapse}>\n      <ArrowDownLine className={'icon'}/>\n    </HideButton>\n  </PanelContainer>\n}\n\nexport const Panel = namedObserver('Panel', RawPanel)\n\nconst transition = '200ms ease-in-out'\n\nexport const ContentContainer = styled.div`\n  min-height: 0;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  transition: opacity ${transition}, width 0ms 200ms;\n\n  .right &, .left & {\n    width: 280px;\n    overflow: hidden;\n  }\n\n  &.collapsed.hideCollapsed {\n    opacity: 0;\n\n    .right &, .left & {\n      width: 0;\n    }\n  }\n`\n\nexport const HideButton = styled.div`\n  position: absolute;\n  display: flex;\n  overflow: hidden;\n  align-items: center;\n  cursor: pointer;\n  border-radius: 20px;\n\n  .icon {\n    font-size: 2em;\n    opacity: 0.6;\n    position: absolute;\n  }\n\n  &.right, &.left {\n    width: 20px;\n    height: 80px;\n    inset-block-start: 50%;\n    transform: translateY(-50%);\n\n    .icon {\n      inset-inline-end: -5px;\n    }\n  }\n\n  &.bottom {\n    left: 50%;\n    width: 80px;\n    height: 20px;\n    justify-content: center;\n    inset-block-start: -10px;\n    transform: translateX(-50%);\n\n    .icon {\n      inset-block-end: -5px;\n    }\n  }\n\n  &.left {\n    inset-inline-end: -15px;\n\n    .icon {\n      transform: rotate(90deg);\n    }\n  }\n\n  &.right {\n    inset-inline-start: -15px;\n\n    .icon {\n      transform: rotate(-90deg);\n    }\n  }\n\n\n  &.collapsed {\n    &.left .icon {\n      transform: rotate(-90deg);\n    }\n\n    &.right .icon {\n      transform: rotate(90deg);\n    }\n\n    &.bottom .icon {\n      transform: rotate(180deg);\n    }\n  }\n`\n\nexport const PanelContainer = styled.div<CollapsedSizeProps>`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  padding: 5px;\n  transition: width ${transition}, height ${transition};\n\n  &.right, &.left {\n    max-height: 1200px;\n    width: 290px;\n  }\n\n  &.right {\n    box-shadow: none;\n  }\n\n  &.bottom {\n    height: 380px;\n    width: 100%;\n    margin-block: 0;\n  }\n\n  &.collapsed {\n    &.right, &.left {\n      width: ${props => props.collapsedSize ?? 5}px;\n    }\n\n    &.bottom {\n      height: ${props => props.collapsedSize ?? 5}px;\n    }\n  }\n`\n","import {cx} from '@emotion/css'\nimport styled from '@emotion/styled'\nimport type {ComponentData} from '@react-form-builder/core'\nimport {BuilderContextProvider, FormViewer, useStore, useViewerProps} from '@react-form-builder/core'\nimport type {ComponentProps} from 'react'\nimport {useCallback, useMemo} from 'react'\nimport {useTranslation} from 'react-i18next'\nimport {useBuilderStore} from '../../utils/BuilderStoreContext'\nimport {customizable, customizableObserver} from '../customization'\nimport {EditableWrapper, getBuilderChildren} from '../dnd'\nimport {ErrorFormWrapper} from './ErrorFormWrapper'\nimport {Header} from './Header/Header'\nimport {PanelContainer} from './Panel'\n\nconst RawCentralPanel = (props: ComponentProps<typeof SContainer>) => {\n  const builderStore = useBuilderStore()\n  const {formLoadError} = useStore()\n  const {viewMode, landscapeMode, builderMode} = builderStore\n  const viewerProps = useViewerProps()\n  const {t} = useTranslation()\n  const componentWrapper = builderMode === 'builder' ? EditableWrapper : undefined\n  const builderComputeChildren = useCallback((componentData: ComponentData, componentProps: Record<string, any>) => {\n    return getBuilderChildren(builderStore, componentData, componentProps)\n  }, [builderStore])\n  const computeChildren = builderMode === 'builder' ? builderComputeChildren : undefined\n  const builderContext = useMemo(() => ({builderMode, translate: t}), [builderMode, t])\n\n  return (\n    <SContainer {...props}>\n      <Header/>\n      <SFormContainer className={cx(viewMode, builderMode, {landscapeMode, withForm: !formLoadError})}>\n        <BuilderContextProvider value={builderContext}>\n          <ErrorFormWrapper>\n            <FormViewer {...viewerProps} componentWrapper={componentWrapper} viewMode={viewMode}\n                        computeChildren={computeChildren} formName={builderStore.activeFormName}/>\n          </ErrorFormWrapper>\n        </BuilderContextProvider>\n      </SFormContainer>\n    </SContainer>\n  )\n}\n\n\nexport const CentralPanel = customizableObserver('CentralPanel', RawCentralPanel)\n\nconst SContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  min-height: 0;\n  min-width: 550px;\n`\n\nconst SFormContainer = customizable('FormContainer', styled(PanelContainer)`\n  flex: 1;\n  z-index: 4;\n  flex-direction: column;\n  width: initial;\n  margin-inline: 15px;\n  overflow: auto;\n  transition: max-width .2s ease, max-height .2s ease, border-radius .2s ease;\n  \n  &.withForm {\n    padding: 12px;\n    border: 2px solid var(--rs-gray-500);\n    border-radius: 10px;\n    box-shadow: 0 5px 20px 0 rgb(0 0 0 / 15%);\n    background-color: #ffffffa1;\n\n    .rs-theme-dark & {\n      background-color: #414549;\n    }\n  }\n\n  &.mobile {\n    width: 400px;\n    max-height: 800px;\n    align-self: center;\n\n    &.landscapeMode {\n      width: 800px;\n      max-height: 400px;\n    }\n  }\n\n  &.tablet {\n    width: 800px;\n    max-height: 1200px;\n    align-self: center;\n\n    &.landscapeMode {\n      width: 1200px;\n      max-height: 800px;\n    }\n  }\n`)\n","import {Close as ClearIcon, Search as SearchIcon} from '@rsuite/icons'\nimport type {CSSProperties} from 'react'\nimport {useCallback, useEffect, useState} from 'react'\nimport {useTranslation} from 'react-i18next'\nimport {Input, InputGroup} from 'rsuite'\n\ninterface SearchFormProps {\n  onChange: (value: string) => void;\n  style?: CSSProperties\n  className?: string\n}\n\n/**\n * Search input.\n * @param props the React component properties.\n * @param props.style the CSS style.\n * @param props.className the CSS class name.\n * @param props.onChange callback to process the entered data.\n * @returns the React element.\n */\nexport const SearchForm = ({style, className, onChange}: SearchFormProps) => {\n  const [value, setValue] = useState<string>('')\n  const Icon = value.length ? ClearIcon : SearchIcon\n  const {t} = useTranslation()\n\n  const clear = useCallback(() => setValue(''), [])\n\n  useEffect(() => onChange(value), [onChange, value])\n\n  return (\n    <InputGroup className={className} inside size=\"sm\" style={style}>\n      <Input\n        onChange={setValue}\n        placeholder={t('searchForm.search')}\n        value={value}\n        autoFocus\n      />\n      <InputGroup.Addon style={{cursor: 'pointer'}} onClick={clear} children={<Icon/>}/>\n    </InputGroup>\n  )\n}\n","import {css} from '@emotion/css'\nimport styled from '@emotion/styled'\nimport type {ComponentData, Model} from '@react-form-builder/core'\nimport {ComponentDataProvider, ComponentStore, getKey, namedObserver} from '@react-form-builder/core'\nimport {useCallback, useState} from 'react'\nimport {useBuilderStore} from '../../../utils/BuilderStoreContext'\nimport {AddedComponent} from '../../dnd'\nimport {useTranslationPart} from '../../localization/hooks'\nimport {SearchForm} from './components/SearchForm'\n\n/**\n * Properties of the draggable component.\n */\nexport interface DraggableProps {\n  /**\n   * The flag of dragging the component, if true - the component is dragged, false - otherwise.\n   */\n  draggable?: boolean\n  /**\n   * The callback function called when a component needs to be added to a target component.\n   * @param source the component to be added.\n   */\n  onAdd?: (source: ComponentData) => void\n\n  /**\n   * The callback function called when a component is double-clicked.\n   */\n  onDoubleClick?: (source: ComponentData) => void\n}\n\ninterface ControlGroupsProps extends DraggableProps {\n  filter?: string\n}\n\nconst RawControlGroups = (props: ControlGroupsProps) => {\n  const builderStore = useBuilderStore()\n  const t = useTranslationPart('componentsList.categories')\n  const {filter, ...componentProps} = props\n  const isMatch = filter\n    ? (el: Model) => el.name.toLowerCase().includes(filter.toLowerCase())\n    : (_: Model) => true\n\n  const byCategory: Record<string, Model[]> = {}\n  builderStore.builderComponents\n    .forEach(component => {\n      if (!isMatch(component.model)) return\n\n      const category = component.category || ''\n      const components = byCategory[category] ?? []\n      components.push(component.model)\n      byCategory[category] = components\n        .sort((a, b) => a.name.localeCompare(b.name))\n    })\n\n  const result = []\n\n  for (const category in byCategory) {\n    result.push(\n      <div key={category}>\n        <Subheader>{t(category) || category}</Subheader>\n        <AddedComponents definitions={byCategory[category]} {...componentProps}/>\n      </div>\n    )\n  }\n\n  if (result.length === 0) return null\n\n  return <Content>{result}</Content>\n}\n\nconst ControlGroups = namedObserver('ControlGroups', RawControlGroups)\n\n/**\n * The React form builder component that displays all available components for use.\n * @param componentProps the component properties.\n * @returns the React element.\n */\nexport const ComponentBar = (componentProps: DraggableProps) => {\n  const t = useTranslationPart('toolbar')\n  const [filtered, setFiltered] = useState<string>()\n  const controls = <ControlGroups {...componentProps} filter={filtered}/>\n\n  return <div className={componentBar}>\n    <Header>\n      <SearchForm style={{maxWidth: 300}} onChange={setFiltered}/>\n    </Header>\n    {controls || <Subheader>{t('notFound')}</Subheader>}\n  </div>\n}\n\ninterface AddedComponentsProps extends DraggableProps {\n  definitions: Model[]\n}\n\nconst RawAddedComponents = ({definitions, ...componentProps}: AddedComponentsProps) => {\n  const builderStore = useBuilderStore()\n\n  const createComponentData = useCallback((model: Model) => {\n    const componentStore = new ComponentStore(`${model.type} ${getKey()}`, model.type)\n\n    const componentMetadata = builderStore.getComponentMetadata(model.type)\n    if (componentMetadata.initialJson) {\n      try {\n        const parsed = JSON.parse(componentMetadata.initialJson)\n        Object.assign(componentStore, parsed)\n      } catch (e) {\n        console.warn(`Failed to parse initialJson '${componentMetadata.initialJson}'`, e)\n      }\n    }\n\n    return builderStore.viewer.createComponentData(componentStore)\n  }, [builderStore])\n\n  return (\n    <ControlsGroup>\n      {definitions.map(model => {\n        const componentData = createComponentData(model)\n        return (\n          <ComponentDataProvider key={componentData.id} value={componentData}>\n            <AddedComponent {...componentProps}/>\n          </ComponentDataProvider>\n        )\n      })}\n    </ControlsGroup>\n  )\n}\n\nconst AddedComponents = namedObserver('AddedComponents', RawAddedComponents)\n\nconst componentBar = css`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  min-height: 0;\n`\n\nconst ControlsGroup = styled.div`\n  display: flex;\n  flex-flow: wrap;\n  gap: 4px;\n  margin-top: 2px;\n`\n\nconst Header = styled.div`\n  display: flex;\n  flex: 0;\n  justify-content: center;\n  align-items: center;\n  font-weight: normal;\n  padding-inline-start: 4px;\n\n  > * {\n    flex: 1;\n  }\n`\n\nconst Subheader = styled.label`\n  padding-inline: 4px;\n  font-size: 16px;\n`\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  width: 100%;\n  padding-inline: 4px 2px;\n  overflow-y: auto;\n`\n","import styled from '@emotion/styled'\nimport type {ComponentData} from '@react-form-builder/core'\nimport {namedObserver} from '@react-form-builder/core'\nimport {useCallback} from 'react'\nimport {Modal} from 'rsuite'\nimport {useBuilderStore} from '../../../utils/BuilderStoreContext'\nimport {useTranslationPart} from '../../localization/hooks'\nimport {ComponentBar} from './ComponentBar'\n\n/**\n * The modal window with a list of components that can be added to the form.\n * @returns the React element.\n */\nconst RawComponentsModal = () => {\n  const {componentsModalState} = useBuilderStore()\n  const t = useTranslationPart('componentsModal')\n\n  const closeModal = useCallback(() => {\n    return componentsModalState.opened = false\n  }, [componentsModalState])\n\n  const onAdd = useCallback((source: ComponentData) => {\n    if (componentsModalState.opened) {\n      closeModal()\n      componentsModalState.onSelect(source)\n    }\n  }, [closeModal, componentsModalState])\n\n  return <SModal open={componentsModalState.opened} onClose={closeModal} size={'lg'}>\n    <Modal.Header><h5>{t('clickToAdd')}</h5></Modal.Header>\n    <Modal.Body>\n      <ComponentBar draggable={false} onAdd={onAdd}/>\n    </Modal.Body>\n  </SModal>\n}\n\nexport const ComponentsModal = namedObserver('ComponentsModal', RawComponentsModal)\n\nconst SModal = styled(Modal)`\n  width: 825px !important;\n\n  .rs-modal-content {\n    background-color: var(--rs-btn-default-bg);\n  }\n\n  .rs-modal-body {\n    margin-top: initial !important;\n    padding-top: 20px;\n    padding-bottom: 0;\n  }\n`\n","import styled from '@emotion/styled'\nimport {namedObserver, useStore} from '@react-form-builder/core'\nimport {useTranslation} from 'react-i18next'\nimport {prepareForJson} from '../../../../utils/parseJson'\n\nconst RawFormViewerState = () => {\n  const store = useStore()\n  const {t} = useTranslation()\n  const errors = store.form.componentTree.errors\n  const data = store.form.componentTree.data\n\n  return <>\n    <SDiv>\n      <h6>{t('errorsPanel.data')}</h6>\n      {prettyPrint(data)}\n    </SDiv>\n    <SDiv>\n      <h6>{t('errorsPanel.errors')}</h6>\n      {prettyPrint(errors)}\n    </SDiv>\n  </>\n}\n\nconst SDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 200px;\n\n  pre {\n    white-space: pre-wrap;\n    margin-top: 5px;\n    max-width: 100%;\n    word-break: break-word;\n    overflow: auto;\n  }\n`\n\nexport const FormViewerState = namedObserver('FormState', RawFormViewerState)\n\nconst prettyPrint = (obj: Object) => {\n  return <pre>{JSON.stringify(prepareForJson(obj, {previewNativeObjects: true}), null, 2)}</pre>\n}\n","import styled from '@emotion/styled'\n\nexport const LabeledIcon = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  & > *:first-of-type {\n    margin-bottom: 2px;\n  }\n\n  & label {\n      //color: ${(props: any) => props.color ?? 'var(--rs-btn-default-text)'};\n  }\n`\n","import styled from '@emotion/styled'\nimport {Nav} from 'rsuite'\nimport {customizable} from '../customization'\nimport type {CustomizableKey} from '../customization/types'\nimport {FaIcon} from './Icons'\nimport {LabeledIcon} from './LabeledIcon'\n\n/**\n * The React component that displays a navigation element with an icon.\n * @param key the key of the navigation element.\n * @param customizableKey the customizable key of the component.\n * @param title the text of the navigation element.\n * @param icon the icon of the navigation element.\n * @param props the other properties of the component.\n * @returns the React Component.\n */\nexport const customizableTab = (key: string, customizableKey: CustomizableKey, title?: string, icon?: any, props?: any) => {\n  const NavItem = customizable(customizableKey, ColoredNavItem)\n  return <NavItem eventKey={key} color={props?.color} as=\"div\">\n    <LabeledIcon>\n      {icon && <FaIcon icon={icon} {...{size: 1.2, ...props, color: undefined}}/>}\n      <label>{title}</label>\n    </LabeledIcon>\n  </NavItem>\n}\n\nconst ColoredNavItem = styled(Nav.Item)`\n  &:hover, &:active, &:focus, &.rs-nav-item-active {\n    color: ${(props: any) => props.color} !important;\n  }\n\n  &:before {\n    border-radius: 2px;\n    height: 3px !important;\n    margin: 0 12px;\n    background-color: ${(props: any) => props.color} !important;\n  }\n`\n\nexport const SNav = styled(Nav)`\n  margin-bottom: 10px;\n  display: flex;\n  justify-content: center;\n\n  .rs-nav-item {\n    border-radius: 15px;\n  }\n`\n","import type {ComponentProps} from 'react'\nimport {useCallback, useEffect, useMemo, useState} from 'react'\nimport {useTranslation} from 'react-i18next'\nimport {Button, ButtonGroup} from 'rsuite'\nimport {useBuilderStore} from '../../../../utils/BuilderStoreContext'\nimport {useCreateForm} from '../../../../utils/useCreateForm'\nimport {EditButton, RemoveButton} from '../../../components/Buttons'\nimport {List, ListItem} from '../../../components/Containers'\nimport {customizableObserver} from '../../../customization'\nimport {useShowMessage} from '../../../toast/toast'\nimport {SearchForm} from '../../ComponentBar/components/SearchForm'\n\nfunction FormListItem({active, onLoadForm, onRemoveForm, name}: {\n  active: boolean,\n  name: string,\n  onLoadForm: (name: string) => void,\n  onRemoveForm: (name: string) => void\n}) {\n  const labelStyle = useMemo(() => ({color: active ? 'var(--rs-navs-selected)' : 'var(--rs-text-secondary)'}), [active])\n\n  const handleLoad = useCallback(() => {\n    onLoadForm(name)\n  }, [name, onLoadForm])\n\n  const handleRemove = useCallback(() => {\n    onRemoveForm(name)\n  }, [name, onRemoveForm])\n\n  return <ListItem>\n    <span style={labelStyle}>\n      {name}\n    </span>\n    <ButtonGroup>\n      <EditButton onClick={handleLoad}/>\n      <RemoveButton onClick={handleRemove}/>\n    </ButtonGroup>\n  </ListItem>\n}\n\nconst RawFormList = (props: ComponentProps<typeof List>) => {\n  const builderStore = useBuilderStore()\n  const [formList, setFormList] = useState<string[]>([])\n  const [searchValue, setSearchValue] = useState<string>('')\n  const {t} = useTranslation()\n  const showMessage = useShowMessage()\n\n  const onError = useCallback((err: any) => {\n    console.error(err)\n    showMessage({type: 'error', message: err})\n  }, [showMessage])\n\n  const reloadForms = useCallback(() => {\n    builderStore.getFormKeys().then(setFormList)\n  }, [builderStore])\n\n  const loadForm = useCallback((name: string) => {\n    builderStore.loadForm(name, reloadForms, onError)\n  }, [builderStore, onError, reloadForms])\n\n  const removeForm = useCallback((name: string) => {\n    builderStore.removeForm(name, reloadForms)\n  }, [builderStore, reloadForms])\n\n  const showPromptDialog = useCreateForm(reloadForms)\n\n  useEffect(() => {\n    reloadForms()\n  }, [builderStore.lastSaveTime, reloadForms])\n\n  const filteredFormList = useMemo(\n    () => formList.filter(name => name.toLowerCase().includes(searchValue.toLowerCase())),\n    [formList, searchValue]\n  )\n\n  return <List {...props}>\n    <SearchForm style={{maxWidth: 300}} onChange={setSearchValue}/>\n    <ListItem>\n      <Button block onClick={showPromptDialog}>{t('formsList.addNewForm')}</Button>\n    </ListItem>\n    {filteredFormList.length\n      ? filteredFormList.map((name, index) =>\n        <FormListItem key={index} active={name === builderStore.formName} name={name} onLoadForm={loadForm} onRemoveForm={removeForm}/>)\n      : <ListItem>{t('formsList.noFormsInFormStorage')}</ListItem>\n    }\n  </List>\n}\n\nexport const FormList = customizableObserver('Forms_Tab_Content', RawFormList)\n","import type {NamedActionDefinition} from '@react-form-builder/core'\nimport {namedObserver, useStore} from '@react-form-builder/core'\nimport {useTranslation} from 'react-i18next'\nimport {Button, ButtonGroup} from 'rsuite'\nimport {useBuilderStore} from '../../../../utils/BuilderStoreContext'\nimport {CloneButton, EditButton, RemoveButton} from '../../../components/Buttons'\nimport {List, ListItem, Rows} from '../../../components/Containers'\n\nconst RawActionList = () => {\n  const builderStore = useBuilderStore()\n  const viewerStore = useStore()\n  const {t} = useTranslation()\n\n  const items = Object.entries(viewerStore.form.actions).map(([name, action]) => {\n    const namedAction: NamedActionDefinition = {name, actionDefinition: action}\n    return <ListItem key={name}>\n      <span>{name}</span>\n      <ButtonGroup>\n        <EditButton onClick={() => builderStore.editCodeAction(namedAction)}/>\n        <CloneButton onClick={() => viewerStore.form.cloneAction(namedAction)}/>\n        <RemoveButton onClick={() => viewerStore.form.removeAction(name)}/>\n      </ButtonGroup>\n    </ListItem>\n  })\n\n  return <Rows>\n    <Button block onClick={() => builderStore.addCodeAction()}>{t('actions.addCodeAction')}</Button>\n    <List>\n      {items}\n    </List>\n  </Rows>\n}\n\nexport const ActionList = namedObserver('ActionList', RawActionList)\n","import {namedObserver, oneOf, useStore} from '@react-form-builder/core'\nimport {useCallback} from 'react'\nimport {useBuilderStore} from '../../../../utils/BuilderStoreContext'\nimport type {AnnotationEditorProps} from '../../../annotation-editors/AnnotationEditorProps'\nimport {Picker} from '../../../annotation-editors/Picker'\n\nconst RawErrorComponentPicker = () => {\n  const viewerStore = useStore()\n  const builderStore = useBuilderStore()\n\n  const onChange = useCallback((value?: string) => viewerStore.form.errorType = value, [viewerStore])\n  const onClean = useCallback(() => viewerStore.form.errorType = undefined, [viewerStore])\n  const disableCompute = useCallback(() => undefined, [])\n  const setComputeCode = useCallback(() => undefined, [])\n  const getComputeCode = useCallback(() => '', [])\n  const getComputeType = useCallback(() => undefined, [])\n  const hasComputeCode = useCallback(() => false, [])\n\n  const values = builderStore.view.errors\n  const annotation = oneOf(...values)\n    .default(values[0])\n    .calculable(false)\n    .notLocalize\n    .withEditorProps({\n      creatable: false\n    })\n    .build('errorType')\n\n  const props: AnnotationEditorProps = {\n    value: viewerStore.form.errorType,\n    onChange,\n    onClean,\n    annotation: annotation,\n    componentData: builderStore.viewer.form.componentTree,\n    disableCompute,\n    setComputeCode,\n    getComputeCode,\n    getComputeType,\n    hasComputeCode,\n  }\n\n  return <Picker {...props}/>\n}\n\nexport const ErrorComponentPicker = namedObserver('ErrorComponentPicker', RawErrorComponentPicker)\n","import type {Annotation} from '@react-form-builder/core'\nimport {ComponentDataProvider, namedObserver, useErrorModel} from '@react-form-builder/core'\nimport {useEffect, useState} from 'react'\nimport {useTranslation} from 'react-i18next'\nimport {Checkbox, Input} from 'rsuite'\nimport {useBuilderStore} from '../../../../utils/BuilderStoreContext'\nimport {PropertyBlock} from '../../RightPanel/PropertiesEditor/components/Properties'\nimport {ErrorComponentPicker} from './ErrorComponentPicker'\n\n/**\n * React form builder component that displays the configuration properties of the validation error display component.\n * @returns the React element.\n */\nconst RawErrorSettings = () => {\n  const {t} = useTranslation()\n  const store = useBuilderStore()\n  const [errorVisible, setErrorVisible] = useState(false)\n  const [errorMessage, setErrorMessage] = useState('Error message example!')\n  const message = errorVisible ? errorMessage : undefined\n\n  useEffect(() => {\n    store.viewer.form.componentTree.setAllErrors(message)\n    return () => store.viewer.form.componentTree.setAllErrors()\n  }, [message, store.viewer.form.componentTree])\n\n  const errorModel = useErrorModel()\n  const errorAnnotations = store.view.getErrorAnnotations(errorModel.type)\n  const properties = errorAnnotations?.map(property => {\n    return Object.assign(property, {localizable: false, calculable: false} as Annotation)\n  }) ?? []\n  const context = store.viewer.form.errorProps\n\n  return (\n    <div>\n      {t('annotation.errorConfig.show')}: <Checkbox onChange={(_, checked) => setErrorVisible(checked)} checked={errorVisible}/>\n      {errorVisible && <Input style={{marginTop: 4, marginBottom: 4}} onChange={setErrorMessage} value={errorMessage}/>}\n      <ErrorComponentPicker/>\n      <ComponentDataProvider value={store.viewer.form.componentTree}>\n        <PropertyBlock annotations={properties} context={context}/>\n      </ComponentDataProvider>\n    </div>\n  )\n}\n\nexport const ErrorSettings = namedObserver('ErrorSettings', RawErrorSettings)\n","import {ComponentDataProvider, namedObserver, oneOf, useStore} from '@react-form-builder/core'\nimport {useCallback, useMemo} from 'react'\nimport {useBuilderStore} from '../../../../utils/BuilderStoreContext'\nimport type {AnnotationEditorProps} from '../../../annotation-editors/AnnotationEditorProps'\nimport {Picker} from '../../../annotation-editors/Picker'\n\nconst RawFormLanguageSettings = () => {\n  const builderStore = useBuilderStore()\n  const viewerStore = useStore()\n\n  const languages = builderStore.formAvailableLanguages\n\n  const defaultFormLanguage = useMemo(() => {\n    const values = languages.map(l => l.fullCode)\n    const labels = languages.map(l => l.name)\n    return oneOf(...values).labeled(...labels)\n      .default(builderStore.defaultLanguage.fullCode)\n      .notLocalize.calculable(false)\n      .withEditorProps({\n        placement: 'auto'\n      })\n      .build('defaultLanguage')\n  }, [languages, builderStore.defaultLanguage])\n\n  const onChange = useCallback((value: string) => {\n    const found = languages.find(l => l.fullCode === value)\n    if (found) viewerStore.form.defaultLanguage = found\n  }, [languages, viewerStore.form])\n\n  const onClean = useCallback(() => viewerStore.form.defaultLanguage = builderStore.defaultLanguage,\n    [viewerStore, builderStore])\n\n  const disableCompute = useCallback(() => undefined, [])\n  const setComputeCode = useCallback(() => undefined, [])\n  const getComputeCode = useCallback(() => '', [])\n  const getComputeType = useCallback(() => undefined, [])\n  const hasComputeCode = useCallback(() => false, [])\n\n  const annotationEditorProps: AnnotationEditorProps = {\n    onChange,\n    value: viewerStore.form.defaultLanguage.fullCode,\n    componentData: builderStore.viewer.form.componentTree,\n    onClean,\n    annotation: defaultFormLanguage,\n    disableCompute,\n    setComputeCode,\n    getComputeCode,\n    getComputeType,\n    hasComputeCode,\n  }\n\n  return (\n    <ComponentDataProvider value={builderStore.viewer.form.componentTree}>\n      <Picker {...annotationEditorProps}/>\n    </ComponentDataProvider>\n  )\n}\n\nexport const FormLanguageSettings = namedObserver('FormLanguageSettings', RawFormLanguageSettings)\n","import styled from '@emotion/styled'\nimport {namedObserver, useTooltipType} from '@react-form-builder/core'\nimport {startCase} from 'lodash-es'\nimport {InputPicker} from 'rsuite'\nimport type {ItemDataType} from 'rsuite/esm/internals/types'\nimport {useBuilderStore} from '../../utils/BuilderStoreContext'\nimport LabeledProperty from '../components/LabeledProperty'\nimport type {AnnotationEditorProps} from './AnnotationEditorProps'\n\n/**\n * React form builder component that displays tooltip picker\n * @param props the Annotation editor component properties.\n * @returns the React element.\n */\nconst RawTooltipTypePicker = (props: AnnotationEditorProps) => {\n  const {value, onChange, onClean} = props\n  const builderStore = useBuilderStore()\n  const tooltipType = useTooltipType()\n  const data = builderStore.view.tooltips.map(name => {\n    return {\n      value: name,\n      label: startCase(name)\n    } as ItemDataType\n  })\n\n  return <LabeledProperty {...props}>\n    <SInputPicker value={value ?? tooltipType ?? ''} data={data} onChange={onChange}\n                  onClean={onClean} block cleanable size={'xs'} placement={'auto'}/>\n  </LabeledProperty>\n}\n\nexport const TooltipTypePicker = namedObserver('TooltipTypePicker', RawTooltipTypePicker)\n\nconst SInputPicker = styled(InputPicker)`\n  width: 100%;\n`\n","import {ComponentDataProvider, namedObserver, tooltipType} from '@react-form-builder/core'\nimport {useCallback} from 'react'\nimport {useBuilderStore} from '../../../../utils/BuilderStoreContext'\nimport type {AnnotationEditorProps} from '../../../annotation-editors/AnnotationEditorProps'\nimport {TooltipTypePicker} from '../../../annotation-editors/TooltipTypePicker'\n\n/**\n * React form builder component that displays the configuration properties of the validation error display component.\n * @returns the React element.\n */\nconst RawTooltipSettings = () => {\n  const builderStore = useBuilderStore()\n\n  const onChange = useCallback((value: string) => builderStore.viewer.form.tooltipType = value, [builderStore])\n  const onClean = useCallback(() => builderStore.viewer.form.tooltipType = undefined, [builderStore])\n  const disableCompute = useCallback(() => undefined, [])\n  const setComputeCode = useCallback(() => undefined, [])\n  const getComputeCode = useCallback(() => '', [])\n  const getComputeType = useCallback(() => undefined, [])\n  const hasComputeCode = useCallback(() => false, [])\n\n  const annotationEditorProps: AnnotationEditorProps = {\n    onChange,\n    value: builderStore.viewer.form.tooltipType,\n    componentData: builderStore.viewer.form.componentTree,\n    onClean,\n    annotation: tooltipType.calculable(false).notLocalize.build('tooltipType'),\n    disableCompute,\n    setComputeCode,\n    getComputeCode,\n    getComputeType,\n    hasComputeCode,\n  }\n\n  return (\n    <div>\n      <ComponentDataProvider value={builderStore.viewer.form.componentTree}>\n        <TooltipTypePicker {...annotationEditorProps}/>\n      </ComponentDataProvider>\n    </div>\n  )\n}\n\nexport const TooltipSettings = namedObserver('TooltipSettings', RawTooltipSettings)\n","import styled from '@emotion/styled'\nimport type {HTMLAttributes} from 'react'\nimport {customizableObserver} from '../../../customization'\nimport {useTranslationPart} from '../../../localization/hooks'\nimport {ActionList} from './ActionList'\nimport {ErrorSettings} from './ErrorSettings'\nimport {FormLanguageSettings} from './FormLanguageSettings'\n\nimport {TooltipSettings} from './TooltipSettings'\n\nconst RawFormSettings = (props: HTMLAttributes<HTMLDivElement>) => {\n  const t = useTranslationPart('leftPanel.formSettings')\n  return <div {...props}>\n    <Header marginTop={0}>{t('actions')}</Header>\n    <ActionList/>\n    <Header>{t('error')}</Header>\n    <ErrorSettings/>\n    <Header>{t('tooltip')}</Header>\n    <TooltipSettings/>\n    <Header>{t('language')}</Header>\n    <FormLanguageSettings/>\n  </div>\n}\n\nexport const FormSettings = customizableObserver('Settings_Tab_Content', RawFormSettings)\n\nconst Header = styled.label<{ marginTop?: number }>`\n  padding-inline: 4px;\n  font-size: 16px;\n  font-weight: bold;\n  margin-top: ${({marginTop}) => marginTop ?? '24'}px;\n`\n","import styled from '@emotion/styled'\nimport {ComponentTree, ViewerPropsProvider} from '@react-form-builder/core'\nimport {CollaspedOutline, ExpandOutline} from '@rsuite/icons'\nimport type {ComponentProps} from 'react'\nimport {useCallback, useEffect, useMemo} from 'react'\nimport {useTranslation} from 'react-i18next'\nimport {Button} from 'rsuite'\nimport {useBuilderStore} from '../../../../utils/BuilderStoreContext'\nimport {Columns, Rows} from '../../../components/Containers'\nimport {customizableObserver} from '../../../customization'\nimport {DraggableTreeNode} from '../../../dnd'\n\nconst treeStyle = {overflow: 'hidden', flex: 1}\n\nconst RawTree = (props: ComponentProps<typeof Rows>) => {\n  const {t} = useTranslation()\n  const builderStore = useBuilderStore()\n  const {componentTree} = builderStore.viewer.form\n  const data = useMemo(() => [componentTree], [componentTree])\n  const value = useMemo(() => ({componentWrapper: DraggableTreeNode, view: builderStore.view}),\n    [builderStore.view])\n\n  const expandAll = useCallback(() => builderStore.expandAll(), [builderStore])\n  const collapseAll = useCallback(() => builderStore.collapseAll(), [builderStore])\n\n  useEffect(() => {\n    builderStore.expanded.add(componentTree)\n  }, [builderStore.expanded, componentTree])\n\n  return <Rows gap={0} style={treeStyle} {...props}>\n    <Columns>\n      <SubtleIconButton onClick={expandAll} size={'sm'} appearance={'subtle'}>\n        <ExpandOutline/>\n        {t('tree.expand')}\n      </SubtleIconButton>\n      <SubtleIconButton onClick={collapseAll} size={'sm'} appearance={'subtle'}>\n        <CollaspedOutline/>\n        {t('tree.collapse')}\n      </SubtleIconButton>\n    </Columns>\n    <STreeContainer>\n      <ViewerPropsProvider value={value}>\n        <ComponentTree data={data}/>\n      </ViewerPropsProvider>\n    </STreeContainer>\n  </Rows>\n}\n\nconst Tree = customizableObserver('Tree_Tab_Content', RawTree)\n\nconst STreeContainer = styled.div`\n  display: flex;\n  overflow: auto;\n`\n\nconst SubtleIconButton = styled(Button)`\n  display: flex !important;\n  align-items: center;\n  gap: 10px;\n`\n\nexport {Tree}\n","import * as faList from '@fortawesome/free-solid-svg-icons/faList.js'\nimport * as faPlusCircle from '@fortawesome/free-solid-svg-icons/faPlusCircle.js'\nimport * as faSitemap from '@fortawesome/free-solid-svg-icons/faSitemap.js'\nimport * as faSliders from '@fortawesome/free-solid-svg-icons/faSlidersH.js'\nimport type {ComponentData} from '@react-form-builder/core'\nimport {namedObserver} from '@react-form-builder/core'\nimport type {ReactNode} from 'react'\nimport {useCallback, useMemo, useState} from 'react'\nimport {useTranslation} from 'react-i18next'\nimport {useBuilderStore} from '../../../../utils/BuilderStoreContext'\nimport {Rows} from '../../../components/Containers'\nimport {customizableTab, SNav} from '../../../components/NavIconItem'\nimport {customizable} from '../../../customization'\nimport type {CustomizableKey} from '../../../customization/types'\nimport type {DraggableProps} from '../../ComponentBar'\nimport {ComponentBar} from '../../ComponentBar'\nimport {FormList} from './FormList'\nimport {FormSettings} from './FormSettings'\nimport {Tree} from './Tree'\n\ntype LeftPanelSection = 'tree' | 'forms' | 'components' | 'settings'\n\nconst Nav = customizable('LeftPanel_Nav', SNav)\nconst NavContent = customizable('LeftPanel_Content', Rows)\nconst Components = customizable('Components_Tab_Content', ComponentBar)\n\nconst ComponentsTab = (props: DraggableProps) => {\n  const builderStore = useBuilderStore()\n\n  const handleDoubleClick = useCallback((source: ComponentData) => {\n    const root = builderStore.viewer.form.componentTree\n    const target = builderStore.selected.values().next().value ?? root\n    const insertPosition = root === target ? 'inner' : 'after'\n    builderStore.add(source, target, insertPosition)\n  }, [builderStore])\n\n  return <Components {...props} draggable={true} onDoubleClick={handleDoubleClick}/>\n}\n\nconst tabsProps: Record<LeftPanelSection, [content: ReactNode, key: CustomizableKey, icon: any, color: string]> = {\n  components: [<ComponentsTab/>, 'Components_Tab', faPlusCircle, 'var(--rs-green-600)'],\n  tree: [<Tree/>, 'Tree_Tab', faSitemap, 'var(--rs-navs-selected)'],\n  settings: [<FormSettings/>, 'Settings_Tab', faSliders, 'violet'],\n  forms: [<FormList/>, 'Forms_Tab', faList, '#f67f1f']\n}\n\nconst useRenderTab = (section: keyof typeof tabsProps) => {\n  const {t} = useTranslation()\n  return useMemo(() => {\n    const title = t('leftPanel.sectionName.' + section)\n    const [_, key, icon, color] = tabsProps[section]\n    return customizableTab(section, key, title, icon, {color})\n  }, [t, section])\n}\n\nconst localStorageLeftPanelActiveTabKey = 'leftPanelActiveTab'\n\nconst saveActiveTab = (tabName: LeftPanelSection) => {\n  localStorage.setItem(localStorageLeftPanelActiveTabKey, tabName)\n}\n\nconst getActiveTab = () => {\n  const defaultTab = 'components'\n  const value = localStorage.getItem(localStorageLeftPanelActiveTabKey) as LeftPanelSection ?? defaultTab\n  return tabsProps[value] ? value : defaultTab\n}\n\nconst RawLeftPanelNav = () => {\n  const {formStorageEnabled} = useBuilderStore()\n  const [activeTab, setActiveTab] = useState<LeftPanelSection>(getActiveTab())\n\n  const components = useRenderTab('components')\n  const tree = useRenderTab('tree')\n  const settings = useRenderTab('settings')\n  const forms = useRenderTab('forms')\n\n  const handleTabChange = useCallback((tab: LeftPanelSection) => {\n    setActiveTab(tab)\n    saveActiveTab(tab)\n  }, [])\n\n  return <>\n    <Nav appearance=\"subtle\" activeKey={activeTab} onSelect={handleTabChange}>\n      {components}\n      {tree}\n      {settings}\n      {formStorageEnabled && forms}\n    </Nav>\n    <NavContent style={{minHeight: 0, overflow: 'auto', padding: 4}}>\n      {tabsProps[activeTab][0]}\n    </NavContent>\n  </>\n}\n\nexport const LeftPanelNav = namedObserver('LeftPanelNav', RawLeftPanelNav)\n","import type {BuilderMode} from '@react-form-builder/core'\nimport type {ComponentProps, ReactElement} from 'react'\nimport {useBuilderStore} from '../../../utils/BuilderStoreContext'\nimport {Rows} from '../../components/Containers'\nimport {customizableObserver} from '../../customization'\nimport {Panel} from '../Panel'\nimport {FormViewerState} from './components/FormViewerState'\nimport {LeftPanelNav} from './components/LeftPanelNav'\n\nconst ViewerContent = () => (\n  <Rows style={{marginTop: 55, paddingInlineStart: 5, minHeight: 80}}>\n    <FormViewerState/>\n  </Rows>\n)\n\nconst leftPanelViews: Record<BuilderMode, ReactElement> = {\n  'builder': <LeftPanelNav/>,\n  'viewer': <ViewerContent/>\n}\n\ntype LeftPanelProps = Omit<ComponentProps<typeof Panel>, 'placement'>\n\nconst RawLeftPanel = (props: LeftPanelProps) => {\n  const store = useBuilderStore()\n  const view = leftPanelViews[store.builderMode]\n\n  return (\n    <Panel {...props} placement=\"left\">\n      {view}\n    </Panel>\n  )\n}\n\nexport const LeftPanel = customizableObserver('LeftPanel', RawLeftPanel)\n","import {namedObserver} from '@react-form-builder/core'\nimport type {KeyboardEvent} from 'react'\nimport {useCallback} from 'react'\nimport {Button, Form, Input, Modal} from 'rsuite'\nimport {useBuilderStore} from '../../utils/BuilderStoreContext'\nimport {useTranslationPart} from '../localization/hooks'\n\nconst formStyle = {height: 60}\n\n/**\n * The React component that displays prompt dialog\n * @returns the React element.\n */\nconst RawPromptDialog = () => {\n  const builderStore = useBuilderStore()\n  const modalState = builderStore.promptModalState\n  const t = useTranslationPart('promptDialog')\n  const okLabel = modalState.okText || t('ok')\n  const cancelLabel = modalState.cancelText || t('cancel')\n  const inputValid = !!modalState.value?.trim() && !modalState.errorMessage\n\n  const hide = useCallback(() => modalState.opened = false, [modalState])\n\n  const handleClose = useCallback(() => {\n    hide()\n    modalState.onClose?.()\n  }, [hide, modalState])\n\n  const handleOk = useCallback(() => {\n    hide()\n    modalState.onOk(modalState.value)\n  }, [hide, modalState])\n\n  const handleCancel = useCallback(() => {\n    hide()\n    modalState.onCancel?.()\n  }, [hide, modalState])\n\n  const handleChange = useCallback((value: string) => {\n    modalState.value = value\n    modalState.validate?.(value)?.then(result => {\n      modalState.errorMessage = result\n    })\n  }, [modalState])\n\n  const handleKeys = useCallback(({key}: KeyboardEvent<HTMLInputElement>) => {\n    switch (key) {\n      case 'Escape':\n        handleCancel()\n        break\n      case 'Enter':\n        if (inputValid) handleOk()\n        break\n      default:\n        break\n    }\n  }, [handleCancel, handleOk, inputValid])\n\n  return <Modal backdrop={modalState.backdrop} keyboard={true} open={modalState.opened} onClose={handleClose}>\n    <Modal.Header>\n      <Modal.Title>{modalState.title}</Modal.Title>\n    </Modal.Header>\n    <Modal.Body>\n      <Form style={formStyle} fluid>\n        <Input placeholder={modalState.placeholder} autoFocus={true} onKeyDown={handleKeys}\n               value={modalState.value} onChange={handleChange}/>\n        <Form.ErrorMessage show={!!modalState.errorMessage}>{modalState.errorMessage}</Form.ErrorMessage>\n      </Form>\n    </Modal.Body>\n    <Modal.Footer>\n      <Button onClick={handleOk} appearance=\"primary\" active={true} disabled={!inputValid}>\n        {okLabel}\n      </Button>\n      <Button onClick={handleCancel} appearance=\"subtle\">\n        {cancelLabel}\n      </Button>\n    </Modal.Footer>\n  </Modal>\n}\n\nexport const PromptDialog = namedObserver('PromptDialog', RawPromptDialog)\n","import * as faBolt from '@fortawesome/free-solid-svg-icons/faBolt.js'\nimport * as faCircle from '@fortawesome/free-solid-svg-icons/faCircle.js'\nimport * as faPaintBrush from '@fortawesome/free-solid-svg-icons/faPaintBrush.js'\nimport * as faSpellCheck from '@fortawesome/free-solid-svg-icons/faSpellCheck.js'\nimport {useMemo} from 'react'\nimport {useTranslation} from 'react-i18next'\nimport {customizableTab, SNav} from '../../../../components/NavIconItem'\nimport {customizableObserver} from '../../../../customization'\nimport type {CustomizableKey} from '../../../../customization/types'\nimport {Section} from '../Section'\n\ninterface NavProps {\n  activeTab: Section,\n  setActiveTab: (activeTab: Section) => void\n}\n\nconst tabsProps: Record<Section, [key: CustomizableKey, icon: any, color: string]> = {\n  [Section.Main]: ['Main_Tab', faCircle, 'var(--rs-navs-selected)'],\n  [Section.Style]: ['Style_Tab', faPaintBrush, '#f67f1f'],\n  [Section.Actions]: ['Actions_Tab', faBolt, 'violet'],\n  [Section.Rules]: ['Rules_Tab', faSpellCheck, 'var(--rs-green-600)']\n}\n\nconst useRenderTab = (section: Section) => {\n  const {t} = useTranslation()\n  return useMemo(() => {\n    const title = t('propertiesEditor.sectionName.' + section)\n    const [key, icon, color] = tabsProps[section]\n    return customizableTab(section, key, title, icon, {color})\n  }, [t, section])\n}\n\nconst RawNavTab = ({activeTab, setActiveTab, ...props}: NavProps) =>\n  <SNav activeKey={activeTab} onSelect={setActiveTab} appearance=\"subtle\" {...props}>\n    {useRenderTab(Section.Main)}\n    {useRenderTab(Section.Style)}\n    {useRenderTab(Section.Actions)}\n    {useRenderTab(Section.Rules)}\n  </SNav>\n\nexport const NavTab = customizableObserver('RightPanel_Nav', RawNavTab)\n","import styled from '@emotion/styled'\nimport {namedObserver} from '@react-form-builder/core'\nimport {useCallback, useState} from 'react'\nimport {NavTab} from './components/NavTab'\nimport {Properties} from './components/Properties'\nimport {Section} from './Section'\n\nconst tabs: Record<Section, boolean> = {\n  [Section.Main]: true,\n  [Section.Style]: true,\n  [Section.Actions]: true,\n  [Section.Rules]: true,\n}\n\nconst localStoragePropertiesActiveTabKey = 'propertiesActiveTab'\n\nconst saveActiveTab = (tabName: Section) => {\n  localStorage.setItem(localStoragePropertiesActiveTabKey, tabName)\n}\n\nconst getActiveTab = () => {\n  const defaultTab = Section.Main\n  const value = localStorage.getItem(localStoragePropertiesActiveTabKey) as Section ?? defaultTab\n  return tabs[value] ? value : defaultTab\n}\n\nconst RawPropertiesEditor = () => {\n  const [activeTab, setActiveTab] = useState(getActiveTab())\n\n  const handleTabChange = useCallback((tab: Section) => {\n    setActiveTab(tab)\n    saveActiveTab(tab)\n  }, [])\n\n  return <Container>\n    <NavTab activeTab={activeTab} setActiveTab={handleTabChange}/>\n    <Properties activeTab={activeTab}/>\n  </Container>\n}\n\nconst PropertiesEditor = namedObserver('PropertiesEditor', RawPropertiesEditor)\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 0;\n  flex: 1;\n\n  .placement-left .rs-popover {\n    margin-left: -14px;\n  }\n`\n\nexport {PropertiesEditor}\n","import {useBuilderStore} from '../../../utils/BuilderStoreContext'\nimport {customizableObserver} from '../../customization'\nimport type {PanelProps} from '../Panel'\nimport {Panel} from '../Panel'\nimport {PropertiesEditor} from './PropertiesEditor'\n\nconst rightPanelViews = {\n  'builder': <PropertiesEditor/>,\n  'viewer': null\n}\n\ntype RightPanelProps = Omit<PanelProps, 'placement'>\n\nconst RawRightPanel = (props: RightPanelProps) => {\n  const store = useBuilderStore()\n  const view = rightPanelViews[store.builderMode]\n\n  return (\n    <Panel {...props} placement=\"right\">\n      {view}\n    </Panel>\n  )\n}\n\nexport const RightPanel = customizableObserver('RightPanel', RawRightPanel)\n","import styled from '@emotion/styled'\nimport {namedObserver, SuppressResizeObserverErrors} from '@react-form-builder/core'\nimport type {ComponentProps} from 'react'\nimport {Suspense} from 'react'\nimport {Loader} from 'rsuite'\nimport {customizableObserver} from './features/customization'\nimport {BottomPanel} from './features/ui/BottomPanel'\nimport {BuilderProviders} from './features/ui/BuilderProviders'\nimport {CentralPanel} from './features/ui/CentralPanel'\nimport {ComponentsModal} from './features/ui/ComponentBar/ComponentsModal'\nimport {LeftPanel} from './features/ui/LeftPanel'\nimport {PromptDialog} from './features/ui/PromptDialog'\nimport {RightPanel} from './features/ui/RightPanel'\nimport type {FormBuilderProps} from './FormBuilderProps'\n\n/**\n * The React component that displays the form builder.\n * @param props the React component properties.\n * @returns the React element.\n */\nconst RawFormBuilder = (props: FormBuilderProps) =>\n  <BuilderProviders props={props}>\n    <FormBuilderView/>\n  </BuilderProviders>\n\nexport const FormBuilder = namedObserver('FormBuilder', RawFormBuilder)\n\nconst RawFormBuilderView = (props: ComponentProps<typeof Container>) => (\n  <SuppressResizeObserverErrors>\n    <Suspense fallback={<Loader center content=\"loading\"/>}>\n      <Container>\n        <Content {...props}>\n          <LeftPanel/>\n          <CentralPanel/>\n          <RightPanel/>\n          <ComponentsModal/>\n          <PromptDialog/>\n        </Content>\n        <BottomPanel/>\n      </Container>\n    </Suspense>\n  </SuppressResizeObserverErrors>\n)\n\nconst FormBuilderView = customizableObserver('MainContainer', RawFormBuilderView)\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  overflow-y: auto;\n  background-color: white;\n\n  .rs-theme-dark & {\n    background-color: #303336;\n  }\n`\n\nconst Content = styled.div`\n  display: flex;\n  flex: 1;\n  justify-content: space-between;\n  min-height: 0;\n  padding-bottom: 15px;\n`\n\n\n"],"names":["useBuilderStore","BuilderStoreProvider","createNonNullableContext","customizable","key","component","CustomizableComponent","props","settings","_a","jsx","style","customRenderer","className","cx","css","result","customizableObserver","observer","Cell","Table","InputCell","rowData","dataKey","rowIndex","onChange","type","value","handleChange","useCallback","newValue","SCell","InputNumber","RsInput","CheckCell","checked","_","SCheckbox","SelectCell","options","InputPicker","ActionCell","onAction","icon","IconButton","styled","Checkbox","ErrorMessage","Form","Column","HeaderCell","EditableTable","state","setState","useState","shouldScroll","setShouldScroll","data","columns","label","errorMessage","autoAdd","hideHeader","onAdd","onRemove","tableProps","autoHeight","maxHeight","headerHeight","rowHeight","maxRows","shorterMax","emptyHeight","totalMaxHeight","adjustedHeight","lastItem","val","updateHeight","onAddColumn","onRemoveColumn","index","prepareColumns","col","cloneElement","shouldUpdateScroll","scrollPos","useEffect","jsxs","STable","Close","Button","Plus","makeColumns","name","input","title","inputProps","Input","upperFirst","counter","uniqueId","prefix","id","useUniqueId","idRef","useRef","useTooltipPlacement","TooltipPlacementProvider","HintedLabel","hint","children","labelProps","Hinted","SLabel","tooltipPlacement","placement","Whisper","Tooltip","HintedIconButton","hintPlacement","hinted","useTranslationPart","path","exists","useTranslation","fullPath","DEFAULT_GAP","Rows","gap","Columns","stretchElements","spaceBetween","LabeledInput","listItemStyle","listStyle","clickableStyle","ListItem","List","clickable","FaSvgIcon","forwardRef","faIcon","size","rest","ref","width","height","svgPathData","extractFaIconData","FaIcon","Icon","afterRedAsterisk","ButtonAppearance","faEdit","faCode","faGlobe","RawCodeButton","annotation","getComputeCode","setComputeCode","disableCompute","getComputeType","hasComputeCode","componentData","store","disabled","getLabel","calculableType","buttonType","useMemo","calculation","localization","buttonStyle","color","handleClick","EditableProperty","SIconButton","CodeButton","CustomizedLabel","RawCustomizedInput","CustomizedInput","RawLabeledProperty","codeButtonProps","componentType","commonLabels","componentLabels","labelClassName","Fragment","LabeledProperty","DEFAULT_COLUMNS","RawArrayInput","calculateEditorProps","viewerStore","useStore","preparedColumns","handleAdd","handleRemove","calculatedProps","ArrayInput","namedObserver","stringify","space","JsonInput","onClean","onValidate","editorKey","editorTitle","builderStore","strVal","isObject","valuePreview","editJson","InputGroup","Code","valueIsObject","parsed","JsonCell","handleClean","ArrayOfObjectInput","editorColumns","column","ArrayOfStringInput","t","TagInput","COLUMNS","toLabeledValues","Attributes","ConfirmButton","confirm","Check","RawAttributesInput","calculated","initialState","setValue","changed","setChanged","AttributesInput","BooleanInput","ColorInput","rgbFromString","Popover","RgbaColorPicker","rgba","rgbToString","SInput","SButton","r","g","b","a","matchColors","DateInput","DatePicker","EditButton","faMarker","CloneButton","Copy","RemoveButton","useComputed","func","computed","useActionData","ActionDataProvider","FixedSelectPicker","SelectPicker","booleanData","RawInputBoolean","newArgs","assign","handleReset","InputBoolean","RawInputNumber","RInputNumber","RawInputString","_b","RInput","InputString","getArgumentInputByType","RawArgumentItem","ArgumentInput","ArgumentItem","useClearableArguments","isEmpty","RawArgumentList","getAction","action","show","toggleShow","useReducer","ExpandIcon","ArrowUpLine","ArrowDownLine","e","Animation","arg","ExpandButton","ArgumentList","RawActionItem","isCodeAction","edit","actionDefinition","namedAction","ButtonGroup","ActionItem","ActionListItem","SListItem","RawActionList","eventName","actions","handleSortEnd","info","movingElement","SList","KeySymbol","ActionList","RawCodeActionsList","onSelect","selectedStore","actionNames","addAction","ComponentStore","renderAction","Dropdown","Divider","PlusIcon","CodeActionsList","CommonActionsList","items","CustomActionList","RawAddActionButton","handleSelect","MenuPopover","AddActionButton","SDiv","SH6","EventEditor","RawKeyInput","KeyInputGroup","showError","canApply","setCanApply","valueToApply","setValueToApply","validateUniqueKey","acc","cd","inputOnChange","inputValue","isValid","error","buttonOnClick","handleKeyDown","event","applyKeyLabel","faCheck","KeyInput","prepareData","values","preparedData","di","v","d","startCase","MultiPicker","STagPicker","TagPicker","NumberInput","editorProps","inputNumberProps","SNumberInput","RawObjectInput","ObjectInput","addCustomValue","isUndefined","item","Picker","SInputPicker","RadioButtons","Container","RRadioGroup","i","Radio","RadioInput","RawRenderWhenEditor","componentStore","code","renderWhenProperties","RenderWhenEditor","OtherUnit","SizeUnits","SizeKeywords","SizeInput","CSSValue","unit","parseCSSValue","handleValueChange","makeCSSValue","handleUnitChange","isNeedValue","SPicker","cssValue","match","number","convertToNumberForNonOtherUnit","STextareaSizer","StringInput","inputRef","containerRef","container","parseTimeValue","format","parsedDate","parse","TimeInput","parsedValue","timeFormat","formatted","formatDate","fluentLanguageId","monacoJavascriptDefaults","ActionEventArgsDeclaration","IFormDataDeclaration","loader","monaco","content","filePath","identifier","string","tab","nonTab","spaces","requireNewline","fluentVariable","fluentFunctionStart","pluralCategory","category","quotedText","vsExtendedTheme","MonacoCodeEditor","Editor","ConstrainedCodeEditor","initialValue","contentDelimiter","postfix","editorRef","constrainedMonacoEditorModelRef","getRestrictions","model","hasEndContextLine","beginContextLineEndLine","beginContextLineEndColumn","getEndPosition","endContextLineEndLine","lastEditableLine","lastEditableColumn","current","endLineOfRange","startLineOfRange","restrictions","handleMount","editor","constrainedInstance","constrainedEditor","constrainedModel","editableCode","str","lines","lastLineLength","UnconstrainedCodeEditor","LtrDiv","RawCodeEditor","themeFromBuilder","theme","codeEditorProps","unconstrainedProps","CodeEditor","RawCSSEditor","device","useWrapperStyles","defaultActiveTab","useComponentData","activeTab","setActiveTab","SCodeEditor","CSSEditor","CenteredLabel","annotationResolver","checkRequired","checkValidator","isPromise","useDataValidator","resolver","args","setter","localizer","dataValidator","DataValidator","RawErroneous","setError","mounted","setMounted","dataValidatorArgs","schema","updateErrorMessage","propsError","validationResult","PropertyErrorMessage","Erroneous","RawPropertyEditorWrapper","context","initContext","propertyBlockType","annotationEditor","contextInitialized","setContextInitialized","isProperty","propertyContext","setComputedFunction","newComponentProperty","setComputedLocalization","langCode","isValidatorPropertyBlockType","params","getComputedFunction","getComputedLocalization","defaultLocalization","hasLocalization","componentProperty","annotationEditorProps","createElement","PropertyEditorWrapper","Section","SubSection","DevicePicker","translatedItems","SHeader","SectionMap","SubSectionMap","bySection","section","bySubSection","RawProperties","tooltipType","useTooltipType","meta","properties","additionalProperties","tooltipProps","showTooltipProps","notSlot","ComponentDataProvider","PropertiesList","PropertyBlock","Styles","Properties","RawStyles","setDevice","isComponent","isTemplate","classNameEditor","StyleBlock","RawStyleBlock","cssPart","header","headerHint","useCssContextInitializer","fieldKey","annotations","RawTooltipPropertiesEditor","selectedComponentStore","hasTooltipProps","selectedTooltipType","tooltipAnnotations","handleToggle","TooltipPropertiesEditor","RawRulesList","validationRules","validationRecord","isNotApplied","validatorType","ruleSettings","sameType","toDropdownItem","customItems","RulesList","RawAddRuleButton","AddRuleButton","convertValidationRuleParameterToAnnotation","parameter","annotationType","annotationBuilder","createAnnotation","convertValidationRuleParametersToAnnotations","parameters","WarningButton","RemindFill","RawValidationRuleEditor","rule","initValidatorArgs","getValidationRule","ruleKey","rulesByType","ruleDefinition","SRuleName","getValidatorPropertyBlockType","ValidationRuleEditor","autoValidate","boolean","RawComponentValidationSettingsEditor","initValidationContext","SWrapper","renderRules","ComponentValidationSettingsEditor","validations","RawCustomValidatorEditor","componentKey","handleEdit","getFunctionSignature","CustomValidatorEditor","EditorMap","BuilderI18n","defaultLanguage","translationResolver","i18next","resourcesToBackend","language","callback","resources","LanguageDetector","initReactI18next","rSuiteLocales","arEG","deDE","enUS","itIT","faIR","frFR","esES","zhCN","defaultComponentsLocale","builtInLanguages","Language","BiDi","languageFullCode","__variableDynamicImportRuntimeHelper","findLanguageByCode","availableLanguages","findLanguage","codes","dialect","langByFullCode","languageByCode","getSystemTheme","determineTheme","AlwaysRejectFormStorage","__privateAdd","_reason","__privateGet","CachedFormStorage","delegate","_addToCache","__publicField","makeAutoObservable","nameObservable","formName","__privateMethod","addToCache_fn","keysToRemove","formValue","BuilderView","defaultViewMode","defaultOpenedPanels","defaultBottomPanelHeight","readAsString","file","onRead","reader","readerEvent","uploadFile","onFile","uploadStringFile","onUpload","uploadBinaryFile","trackUndo","readObservable","setObservable","maxStackSize","isDisposed","undoStack","undoPointer","observable","stopTrackingChanges","trackChanges","reaction","toPrettyJsonString","CustomValidationCode","functionSignature","onSave","JsonCode","json","EditableAction","clone","BuilderUndoer","debounceInterval","_formChanged","Subject","_subscriptions","_disposer","createReaction","formString","__privateSet","stream","debounceTime","distinctUntilChanged","s","BuilderStore","viewer","_props","validator","errors","messages","link","target","multipleSelection","isSelected","treeForEach","loaded","found","i18nData","afterAdd","ActionDefinition","afterEdit","selected","text","source","insertPosition","slot","slotCondition","sourceComponentData","selectAfterInsert","cloneDeep","keysMap","oldKey","errorProps","serializedObject","PersistedFormVersion","l","persistedForm","screenModel","onSuccess","onError","err","visible","filtered","componentTree","child","types","typeSet","currentFormComponent","externalForms","editorType","CustomEditor","selectedComponents","root","resultArray","firstSelectedComponent","firstSelectedParent","nextComponent","humanizeFileSize","units","isValidDate","parseJson","objError","createFilePreview","lastModified","webkitRelativePath","prepareForJson","previewNativeObjects","typeIs","valueType","editorOptions","RawTestingEditor","testingFunction","formData","setData","init","initialData","TestRunner","TestingEditor","RawTestRunner","compact","setResult","test","calculate","handleAutorunChecked","buttons","TestingResult","faPlay","messageColor","messageColors","SCompactMessage","Message","SMessage","onClose","MessageComponent","formattedContent","ResultMessage","getType","parsedData","TestFormData","CalculableResult","initFormFields","GenericCodeEditor","codePlaceHolder","onCompile","propsSourceCode","sourceCode","setSourceCode","setInitialValue","testingEditor","handleSave","Header","ArgumentTypes","validParamName","isValidParamName","ParamName","collapsed","onClick","SParamName","ParameterItem","paramName","paramType","setCollapsed","formState","setFormState","formRef","pName","isFormValid","updateFormState","Schema","ParameterList","setParams","changeParams","handleCreateParam","names","existingNames","newParam","generateUniqueName","paramArray","handleRemoveParam","handleChangeParam","param","paramsToArray","paramsFromArray","CodeActionEditor","codeAction","initialFormModel","initialBody","setInitialBody","functionHeader","makeFunctionHeader","delta","prevState","close","save","compile","AsyncFunction","CalculableCodeEditor","editableProperty","saveCode","calculatePropertyValue","RawLocalizationPicker","langData","toUpper","renderMenuItem","renderLanguageItem","LocalizationPicker","LanguageItem","RawLocalizationEditor","localizationStringId","getFluentCompatibleId","setLanguage","beginContextLine","endContextLine","testFluentLocalization","getFluentData","LocalizationEditor","SimpleValueEditor","editors","buttonsStyle","RawComputedPropertyEditor","property","initialComputeType","computeType","setComputeType","toggleItems","getToggleItems","handleClose","handleComputeTypeChange","ComputedPropertyEditor","calculable","localizable","translate","RawCustomValidationCodeEditor","handleCompile","CustomValidationCodeEditor","RawJsonCodeEditor","object","JsonCodeEditor","RawBottomPanel","currentEditable","bottomPanelHeight","Resizable","resizableStyles","direction","BottomPanel","LocalStorageSynchronizer","_disposers","disposer","defaultValue","resolutionKey","openedPanelsKey","bottomPanelHeightKey","themeKey","testingAutorunKey","formNameKey","i18nextLngKey","i18nextLng","i18nextLang","autorun","nameAutorun","getItemStyles","initialOffset","currentOffset","x","y","transform","CustomDragLayer","isMultiSelection","isDragging","useDragLayer","monitor","Layer","stopEvent","handleDeleteKey","useHotkeys","RawMenuLanguageSwitch","MenuLanguageSwitch","styles","loadRsuiteCss","biDi","href","loadResource","previousBidi","unloadResource","loadFormEngineCss","RawLocalizationProvider","bidi","componentsLocale","selectedCache","emotionCache","CacheProvider","CustomProvider","LocalizationProvider","builderClassName","RawStylesProvider","StylesProvider","BuilderProviderData","localStorageSynchronizer","useBuilderProviderData","builderRef","viewerProps","Store","FormViewerPropsStore","RawProviders","useImperativeHandle","ViewerPropsProvider","StoreProvider","DndProvider","HTML5Backend","Providers","RawBuilderProviders","builderProviderDataFactory","builderProviderData","useDisposable","BuilderProviders","ItemType","AcceptDrop","useDragWithPreview","drag","preview","useDrag","getEmptyImage","getDragPreview","DragPreview","createPortal","InnerContainer","AddButton","InnerDropView","DropView","RawDropZone","isAfter","isInner","isRoot","isContainer","inner","isActive","isOver","drop","useDropZone","SContainer","useDrop","DropZone","useDirection","viewMode","_d","_c","RawDraggable","isTree","parent","horizontal","isDraggingCurrent","dnd","useDnd","dragPreview","afterChildren","beforeChildren","clsName","parentType","DraggableBody","Draggable","dropProps","dragState","useSelection","hovered","setHovered","onMouseOver","onMouseOut","RawAddButton","whisperRef","position","popover","SPopover","Label","SortUp","SortDown","RawToolbar","onClone","scrollIntoView","ToolbarContainer","Title","faClone","faTrash","Toolbar","preStyle","RawComponentRenderError","ComponentRenderError","ErrorBoundary","Component","childrenSlot","getSlot","getBuilderChildren","componentProps","containers","currentProps","availableSlots","templateSlots","getTemplateSlots","closedSlots","checkSlotCondition","openSlots","an","groups","groupBy","isSlotConditionSatisfied","filteredChildren","ComponentTree","dataContext","localize","componentState","ComponentState","RawEditableWrapper","Wrapper","DefaultWrapper","Editable","EditableWrapper","RawEditable","selectionHandlers","selectionClassName","toolbars","TemplateField","slots","cs","slotModel","ans","node","toArray","RawTreeNode","expandedNodes","findDepth","findTreeElementDepth","depth","expanded","toggleExpand","onMouseEnter","onMouseLeave","withChildren","SNodeItem","SIndent","ArrowDownLineIcon","ArrowRightLineIcon","TreeNode","RawDraggableTreeNode","DraggableTreeNode","SvgBreadcrumb","React","SvgButton","SvgCard","SvgCheckbox","SvgCollectionEditor","SvgContainer","SvgContent","SvgCustomBlock","SvgCustomControl","SvgDatePicker","SvgDefault","SvgDropdown","SvgDropzone","SvgErrorMessage","SvgFooter","SvgGrid","SvgGridLayout","SvgGridView","SvgHeader","SvgImage","SvgInput","SvgLabel","SvgLink","SvgMenu","SvgMessage","SvgNumberFormat","SvgPatternFormat","SvgProgressCircle","SvgProgressLine","SvgRadioGroup","SvgRepeater","SvgRichTextEditor","SvgSearch","SvgSidebar","SvgSignature","SvgStaticContent","SvgTab","SvgTextArea","SvgTimePicker","SvgToggle","SvgTooltip","SvgTreePicker","SvgUploader","icons","Breadcrumb","Card","CollectionEditor","Content","CustomBlock","CustomControl","Default","Dropzone","Grid","GridLayout","GridView","Image","Link","Footer","Sidebar","Menu","NumberFormat","PatternFormat","ProgressCircle","ProgressLine","RadioGroup","Repeater","RichTextEditor","Search","Signature","StaticContent","Tab","TextArea","TimePicker","Toggle","TreePicker","Uploader","RawAddedComponent","draggable","onDoubleClick","CustomIcon","iconName","replace","camelCase","handleDoubleClick","element","AddedComponent","DraggableContainer","useShowMessage","setSettings","toaster","useToaster","useCreateForm","showMessage","loadForm","handleAddForm","validate","ErrorFormWrapper","formLoadError","createForm","withWrapper","RawDesignerLocalizationPicker","DesignerLocalizationPicker","RawPropertyErrors","getData","message","handleLinkClick","PropertyErrors","RawErrorsPanel","Danger","Modal","Row","Col","useSaveFormDialog","onOk","formExtension","exportForms","archiveName","formKeys","zip","JSZip","blob","saveAs","importForms","jsZipObjects","forms","jsZipObject","pair","useSaveForm","RawExportFormsButton","onExport","ExportIcon","ExportFormsButton","RawImportFormsButton","onImport","ImportIcon","ImportFormsButton","RawWrapper","renderToggle","faBars","MenuDropdown","RawMenu","handleSaveAs","onSaveAs","FileDownloadIcon","FileUploadIcon","faSave","Modes","faPaintBrush","RawToggleModeButton","toggleTo","AnimatedButton","ToggleModeButton","makeLabeledIconStyles","faMoon","faSun","RawToggleTheme","isDark","iconProps","speaker","ToggleTheme","RawJsonView","sourceRef","onSetSource","JsonView","RawJsonViewButton","open","setOpen","handleOpen","JsonViewButton","OrientationIcon","resolutions","faDesktop","faMobile","faTablet","RawViewModes","landscapeMode","getColor","active","ViewModes","RawHeader","undoer","showErrorsPanel","LeftPart","faUndo","faRedo","CenterPart","RightPart","RawPanel","hideCollapsed","onCollapse","handleCollapse","PanelContainer","ContentContainer","HideButton","Panel","transition","RawCentralPanel","builderMode","useViewerProps","componentWrapper","builderComputeChildren","computeChildren","builderContext","SFormContainer","BuilderContextProvider","FormViewer","CentralPanel","SearchForm","ClearIcon","SearchIcon","clear","RawControlGroups","filter","isMatch","el","byCategory","components","Subheader","AddedComponents","ControlGroups","ComponentBar","setFiltered","controls","componentBar","RawAddedComponents","definitions","createComponentData","getKey","componentMetadata","ControlsGroup","RawComponentsModal","componentsModalState","closeModal","SModal","ComponentsModal","RawFormViewerState","prettyPrint","FormViewerState","obj","LabeledIcon","customizableTab","customizableKey","NavItem","ColoredNavItem","Nav","SNav","FormListItem","onLoadForm","onRemoveForm","labelStyle","handleLoad","RawFormList","formList","setFormList","searchValue","setSearchValue","reloadForms","removeForm","showPromptDialog","filteredFormList","FormList","RawErrorComponentPicker","oneOf","ErrorComponentPicker","RawErrorSettings","errorVisible","setErrorVisible","setErrorMessage","errorModel","useErrorModel","errorAnnotations","ErrorSettings","RawFormLanguageSettings","languages","defaultFormLanguage","labels","FormLanguageSettings","RawTooltipTypePicker","TooltipTypePicker","RawTooltipSettings","TooltipSettings","RawFormSettings","FormSettings","marginTop","treeStyle","RawTree","expandAll","collapseAll","SubtleIconButton","ExpandOutline","CollaspedOutline","STreeContainer","Tree","NavContent","Components","ComponentsTab","tabsProps","faPlusCircle","faSitemap","faSliders","faList","useRenderTab","localStorageLeftPanelActiveTabKey","saveActiveTab","tabName","getActiveTab","defaultTab","RawLeftPanelNav","formStorageEnabled","tree","handleTabChange","LeftPanelNav","ViewerContent","leftPanelViews","RawLeftPanel","view","LeftPanel","formStyle","RawPromptDialog","modalState","okLabel","cancelLabel","inputValid","hide","handleOk","handleCancel","handleKeys","PromptDialog","faCircle","faBolt","faSpellCheck","RawNavTab","NavTab","tabs","localStoragePropertiesActiveTabKey","RawPropertiesEditor","PropertiesEditor","rightPanelViews","RawRightPanel","RightPanel","RawFormBuilder","FormBuilderView","FormBuilder","RawFormBuilderView","SuppressResizeObserverErrors","Suspense","Loader"],"mappings":"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"}